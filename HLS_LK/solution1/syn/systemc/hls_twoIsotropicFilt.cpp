// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "hls_twoIsotropicFilt.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic hls_twoIsotropicFilt::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic hls_twoIsotropicFilt::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> hls_twoIsotropicFilt::ap_ST_fsm_state1 = "1";
const sc_lv<3> hls_twoIsotropicFilt::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> hls_twoIsotropicFilt::ap_ST_fsm_state6 = "100";
const bool hls_twoIsotropicFilt::ap_const_boolean_1 = true;
const sc_lv<32> hls_twoIsotropicFilt::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> hls_twoIsotropicFilt::ap_const_lv1_0 = "0";
const sc_lv<1> hls_twoIsotropicFilt::ap_const_lv1_1 = "1";
const sc_lv<2> hls_twoIsotropicFilt::ap_const_lv2_0 = "00";
const sc_lv<2> hls_twoIsotropicFilt::ap_const_lv2_2 = "10";
const sc_lv<2> hls_twoIsotropicFilt::ap_const_lv2_3 = "11";
const sc_lv<2> hls_twoIsotropicFilt::ap_const_lv2_1 = "1";
const sc_lv<32> hls_twoIsotropicFilt::ap_const_lv32_1 = "1";
const bool hls_twoIsotropicFilt::ap_const_boolean_0 = false;
const sc_lv<33> hls_twoIsotropicFilt::ap_const_lv33_0 = "000000000000000000000000000000000";
const sc_lv<16> hls_twoIsotropicFilt::ap_const_lv16_0 = "0000000000000000";
const sc_lv<12> hls_twoIsotropicFilt::ap_const_lv12_0 = "000000000000";
const sc_lv<17> hls_twoIsotropicFilt::ap_const_lv17_2 = "10";
const sc_lv<33> hls_twoIsotropicFilt::ap_const_lv33_1 = "1";
const sc_lv<16> hls_twoIsotropicFilt::ap_const_lv16_1 = "1";
const sc_lv<32> hls_twoIsotropicFilt::ap_const_lv32_F = "1111";
const sc_lv<15> hls_twoIsotropicFilt::ap_const_lv15_0 = "000000000000000";
const sc_lv<32> hls_twoIsotropicFilt::ap_const_lv32_C = "1100";
const sc_lv<32> hls_twoIsotropicFilt::ap_const_lv32_17 = "10111";
const sc_lv<32> hls_twoIsotropicFilt::ap_const_lv32_2 = "10";

hls_twoIsotropicFilt::hls_twoIsotropicFilt(sc_module_name name) : sc_module(name), mVcdFile(0) {
    lpf_lines_buffer_V_1_U = new hls_twoIsotropicFilt_lpf_lines_buffer_V_1("lpf_lines_buffer_V_1_U");
    lpf_lines_buffer_V_1_U->clk(ap_clk);
    lpf_lines_buffer_V_1_U->reset(ap_rst);
    lpf_lines_buffer_V_1_U->address0(lpf_lines_buffer_V_1_address0);
    lpf_lines_buffer_V_1_U->ce0(lpf_lines_buffer_V_1_ce0);
    lpf_lines_buffer_V_1_U->q0(lpf_lines_buffer_V_1_q0);
    lpf_lines_buffer_V_1_U->address1(lpf_lines_buffer_V_1_1_reg_1044);
    lpf_lines_buffer_V_1_U->ce1(lpf_lines_buffer_V_1_ce1);
    lpf_lines_buffer_V_1_U->we1(lpf_lines_buffer_V_1_we1);
    lpf_lines_buffer_V_1_U->d1(lpf_lines_buffer_V_2_q0);
    lpf_lines_buffer_V_2_U = new hls_twoIsotropicFilt_lpf_lines_buffer_V_1("lpf_lines_buffer_V_2_U");
    lpf_lines_buffer_V_2_U->clk(ap_clk);
    lpf_lines_buffer_V_2_U->reset(ap_rst);
    lpf_lines_buffer_V_2_U->address0(lpf_lines_buffer_V_2_address0);
    lpf_lines_buffer_V_2_U->ce0(lpf_lines_buffer_V_2_ce0);
    lpf_lines_buffer_V_2_U->q0(lpf_lines_buffer_V_2_q0);
    lpf_lines_buffer_V_2_U->address1(lpf_lines_buffer_V_2_1_reg_1050);
    lpf_lines_buffer_V_2_U->ce1(lpf_lines_buffer_V_2_ce1);
    lpf_lines_buffer_V_2_U->we1(lpf_lines_buffer_V_2_we1);
    lpf_lines_buffer_V_2_U->d1(lpf_lines_buffer_V_3_q0);
    lpf_lines_buffer_V_3_U = new hls_twoIsotropicFilt_lpf_lines_buffer_V_1("lpf_lines_buffer_V_3_U");
    lpf_lines_buffer_V_3_U->clk(ap_clk);
    lpf_lines_buffer_V_3_U->reset(ap_rst);
    lpf_lines_buffer_V_3_U->address0(lpf_lines_buffer_V_3_address0);
    lpf_lines_buffer_V_3_U->ce0(lpf_lines_buffer_V_3_ce0);
    lpf_lines_buffer_V_3_U->q0(lpf_lines_buffer_V_3_q0);
    lpf_lines_buffer_V_3_U->address1(lpf_lines_buffer_V_3_1_reg_1056);
    lpf_lines_buffer_V_3_U->ce1(lpf_lines_buffer_V_3_ce1);
    lpf_lines_buffer_V_3_U->we1(lpf_lines_buffer_V_3_we1);
    lpf_lines_buffer_V_3_U->d1(lpf_lines_buffer_V_4_q0);
    lpf_lines_buffer_V_4_U = new hls_twoIsotropicFilt_lpf_lines_buffer_V_1("lpf_lines_buffer_V_4_U");
    lpf_lines_buffer_V_4_U->clk(ap_clk);
    lpf_lines_buffer_V_4_U->reset(ap_rst);
    lpf_lines_buffer_V_4_U->address0(lpf_lines_buffer_V_4_address0);
    lpf_lines_buffer_V_4_U->ce0(lpf_lines_buffer_V_4_ce0);
    lpf_lines_buffer_V_4_U->q0(lpf_lines_buffer_V_4_q0);
    lpf_lines_buffer_V_4_U->address1(lpf_lines_buffer_V_4_address1);
    lpf_lines_buffer_V_4_U->ce1(lpf_lines_buffer_V_4_ce1);
    lpf_lines_buffer_V_4_U->we1(lpf_lines_buffer_V_4_we1);
    lpf_lines_buffer_V_4_U->d1(tmp_14_i_fu_810_p3);
    grp_hls_isotropic_kernel_fu_424 = new hls_isotropic_kernel("grp_hls_isotropic_kernel_fu_424");
    grp_hls_isotropic_kernel_fu_424->ap_clk(ap_clk);
    grp_hls_isotropic_kernel_fu_424->ap_rst(ap_rst);
    grp_hls_isotropic_kernel_fu_424->window_0_V_read(window_0_V_load_reg_1094);
    grp_hls_isotropic_kernel_fu_424->window_1_V_read(window_1_V_load_reg_1099);
    grp_hls_isotropic_kernel_fu_424->window_2_V_read(window_2_V_load_reg_1104);
    grp_hls_isotropic_kernel_fu_424->window_3_V_read(window_3_V_1_reg_1174);
    grp_hls_isotropic_kernel_fu_424->window_4_V_read(window_3_V_fu_214);
    grp_hls_isotropic_kernel_fu_424->window_5_V_read(window_5_V_load_reg_1114);
    grp_hls_isotropic_kernel_fu_424->window_6_V_read(window_6_V_load_reg_1119);
    grp_hls_isotropic_kernel_fu_424->window_7_V_read(window_7_V_load_reg_1124);
    grp_hls_isotropic_kernel_fu_424->window_8_V_read(window_8_V_1_reg_1179);
    grp_hls_isotropic_kernel_fu_424->window_9_V_read(window_8_V_fu_218);
    grp_hls_isotropic_kernel_fu_424->window_10_V_read(window_10_V_load_reg_1134);
    grp_hls_isotropic_kernel_fu_424->window_11_V_read(window_11_V_load_reg_1139);
    grp_hls_isotropic_kernel_fu_424->window_12_V_read(window_12_V_load_reg_1144);
    grp_hls_isotropic_kernel_fu_424->window_13_V_read(window_13_V_1_reg_1184);
    grp_hls_isotropic_kernel_fu_424->window_14_V_read(window_13_V_fu_222);
    grp_hls_isotropic_kernel_fu_424->window_15_V_read(window_15_V_load_reg_1154);
    grp_hls_isotropic_kernel_fu_424->window_16_V_read(window_16_V_load_reg_1159);
    grp_hls_isotropic_kernel_fu_424->window_17_V_read(window_17_V_load_reg_1164);
    grp_hls_isotropic_kernel_fu_424->window_18_V_read(window_18_V_1_reg_1189);
    grp_hls_isotropic_kernel_fu_424->window_19_V_read(window_18_V_fu_226);
    grp_hls_isotropic_kernel_fu_424->window_20_V_read(window_20_V_load_reg_1149);
    grp_hls_isotropic_kernel_fu_424->window_21_V_read(window_21_V_load_reg_1129);
    grp_hls_isotropic_kernel_fu_424->window_22_V_read(window_22_V_load_reg_1109);
    grp_hls_isotropic_kernel_fu_424->window_23_V_read(window_23_V_1_reg_1169);
    grp_hls_isotropic_kernel_fu_424->window_24_V_read(window_23_V_fu_210);
    grp_hls_isotropic_kernel_fu_424->ap_return(grp_hls_isotropic_kernel_fu_424_ap_return);
    grp_hls_isotropic_kernel_fu_424->ap_ce(grp_hls_isotropic_kernel_fu_424_ap_ce);
    hls_LK_am_addmul_16ns_3ns_17ns_34_1_1_U26 = new hls_LK_am_addmul_16ns_3ns_17ns_34_1_1<1,1,16,3,17,34>("hls_LK_am_addmul_16ns_3ns_17ns_34_1_1_U26");
    hls_LK_am_addmul_16ns_3ns_17ns_34_1_1_U26->din0(grp_fu_867_p0);
    hls_LK_am_addmul_16ns_3ns_17ns_34_1_1_U26->din1(grp_fu_867_p1);
    hls_LK_am_addmul_16ns_3ns_17ns_34_1_1_U26->din2(grp_fu_867_p2);
    hls_LK_am_addmul_16ns_3ns_17ns_34_1_1_U26->dout(grp_fu_867_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( inp1_img_V_data_V_0_vld_out );
    sensitive << ( inp2_img_V_data_V_0_vld_out );
    sensitive << ( out1_img_V_full_n );
    sensitive << ( out2_img_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_17_i_reg_1081_pp0_iter2_reg );
    sensitive << ( ap_predicate_op81_read_state2 );
    sensitive << ( ap_predicate_op83_read_state2 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( inp1_img_V_data_V_0_vld_out );
    sensitive << ( inp2_img_V_data_V_0_vld_out );
    sensitive << ( out1_img_V_full_n );
    sensitive << ( out2_img_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_17_i_reg_1081_pp0_iter2_reg );
    sensitive << ( ap_predicate_op81_read_state2 );
    sensitive << ( ap_predicate_op83_read_state2 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001_ignoreCallOp157);
    sensitive << ( inp1_img_V_data_V_0_vld_out );
    sensitive << ( inp2_img_V_data_V_0_vld_out );
    sensitive << ( out1_img_V_full_n );
    sensitive << ( out2_img_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_17_i_reg_1081_pp0_iter2_reg );
    sensitive << ( ap_predicate_op81_read_state2 );
    sensitive << ( ap_predicate_op83_read_state2 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( inp1_img_V_data_V_0_vld_out );
    sensitive << ( inp2_img_V_data_V_0_vld_out );
    sensitive << ( out1_img_V_full_n );
    sensitive << ( out2_img_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_17_i_reg_1081_pp0_iter2_reg );
    sensitive << ( ap_predicate_op81_read_state2 );
    sensitive << ( ap_predicate_op83_read_state2 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( height_out_full_n );
    sensitive << ( width_out_full_n );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);
    sensitive << ( inp1_img_V_data_V_0_vld_out );
    sensitive << ( inp2_img_V_data_V_0_vld_out );
    sensitive << ( ap_predicate_op81_read_state2 );
    sensitive << ( ap_predicate_op83_read_state2 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0_ignore_call5);
    sensitive << ( inp1_img_V_data_V_0_vld_out );
    sensitive << ( inp2_img_V_data_V_0_vld_out );
    sensitive << ( ap_predicate_op81_read_state2 );
    sensitive << ( ap_predicate_op83_read_state2 );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1_ignore_call5);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2_ignore_call5);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);
    sensitive << ( out1_img_V_full_n );
    sensitive << ( out2_img_V_full_n );
    sensitive << ( tmp_17_i_reg_1081_pp0_iter2_reg );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3_ignore_call5);
    sensitive << ( out1_img_V_full_n );
    sensitive << ( out2_img_V_full_n );
    sensitive << ( tmp_17_i_reg_1081_pp0_iter2_reg );

    SC_METHOD(thread_ap_condition_433);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter1_state3);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_phi_mux_p_1_i_phi_fu_404_p4);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( exitcond_flatten_reg_1021_pp0_iter2_reg );
    sensitive << ( tmp_19_i_reg_1085_pp0_iter2_reg );
    sensitive << ( filt_out1_V_fu_851_p1 );
    sensitive << ( ap_phi_reg_pp0_iter3_p_1_i_reg_400 );

    SC_METHOD(thread_ap_phi_mux_p_2_i_phi_fu_416_p4);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( exitcond_flatten_reg_1021_pp0_iter2_reg );
    sensitive << ( tmp_19_i_reg_1085_pp0_iter2_reg );
    sensitive << ( grp_hls_isotropic_kernel_fu_424_ap_return );
    sensitive << ( ap_phi_reg_pp0_iter3_p_2_i_reg_412 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_p_1_i_reg_400);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_p_2_i_reg_412);

    SC_METHOD(thread_ap_predicate_op157_call_state4);
    sensitive << ( exitcond_flatten_reg_1021_pp0_iter1_reg );
    sensitive << ( tmp_19_i_reg_1085_pp0_iter1_reg );

    SC_METHOD(thread_ap_predicate_op81_read_state2);
    sensitive << ( exitcond_flatten_fu_484_p2 );
    sensitive << ( or_cond_i_fu_588_p2 );

    SC_METHOD(thread_ap_predicate_op83_read_state2);
    sensitive << ( exitcond_flatten_fu_484_p2 );
    sensitive << ( or_cond_i_fu_588_p2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_col_fu_630_p2);
    sensitive << ( col_i_mid2_fu_495_p3 );

    SC_METHOD(thread_col_i_mid2_fu_495_p3);
    sensitive << ( col_i_reg_389 );
    sensitive << ( tmp_10_i_fu_479_p2 );

    SC_METHOD(thread_exitcond_flatten_fu_484_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( bound_reg_1016 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( indvar_flatten_cast_fu_471_p1 );

    SC_METHOD(thread_filt_out1_V_fu_851_p1);
    sensitive << ( grp_hls_isotropic_kernel_fu_424_ap_return );

    SC_METHOD(thread_grp_fu_867_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( grp_fu_867_p00 );

    SC_METHOD(thread_grp_fu_867_p00);
    sensitive << ( height );

    SC_METHOD(thread_grp_fu_867_p1);
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_grp_fu_867_p2);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( grp_fu_867_p20 );

    SC_METHOD(thread_grp_fu_867_p20);
    sensitive << ( tmp_5_i_fu_461_p2 );

    SC_METHOD(thread_grp_hls_isotropic_kernel_fu_424_ap_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001_ignoreCallOp157 );

    SC_METHOD(thread_height_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( height_out_full_n );

    SC_METHOD(thread_height_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( height );
    sensitive << ( height_out_full_n );
    sensitive << ( width_out_full_n );

    SC_METHOD(thread_height_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( height_out_full_n );
    sensitive << ( width_out_full_n );

    SC_METHOD(thread_icmp1_fu_537_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_484_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_fu_527_p4 );

    SC_METHOD(thread_icmp2_fu_553_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_484_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_1_fu_543_p4 );

    SC_METHOD(thread_icmp_fu_612_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_484_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_2_fu_602_p4 );

    SC_METHOD(thread_indvar_flatten_cast_fu_471_p1);
    sensitive << ( indvar_flatten_reg_367 );

    SC_METHOD(thread_indvar_flatten_next_fu_489_p2);
    sensitive << ( indvar_flatten_reg_367 );

    SC_METHOD(thread_inp1_img_TDATA_blk_n);
    sensitive << ( inp1_img_V_data_V_0_state );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten_fu_484_p2 );
    sensitive << ( or_cond_i_fu_588_p2 );

    SC_METHOD(thread_inp1_img_TREADY);
    sensitive << ( inp1_img_V_last_V_0_state );

    SC_METHOD(thread_inp1_img_V_data_V_0_ack_in);
    sensitive << ( inp1_img_V_data_V_0_state );

    SC_METHOD(thread_inp1_img_V_data_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_predicate_op81_read_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_inp1_img_V_data_V_0_data_out);
    sensitive << ( inp1_img_V_data_V_0_payload_A );
    sensitive << ( inp1_img_V_data_V_0_payload_B );
    sensitive << ( inp1_img_V_data_V_0_sel );

    SC_METHOD(thread_inp1_img_V_data_V_0_load_A);
    sensitive << ( inp1_img_V_data_V_0_sel_wr );
    sensitive << ( inp1_img_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_inp1_img_V_data_V_0_load_B);
    sensitive << ( inp1_img_V_data_V_0_sel_wr );
    sensitive << ( inp1_img_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_inp1_img_V_data_V_0_sel);
    sensitive << ( inp1_img_V_data_V_0_sel_rd );

    SC_METHOD(thread_inp1_img_V_data_V_0_state_cmp_full);
    sensitive << ( inp1_img_V_data_V_0_state );

    SC_METHOD(thread_inp1_img_V_data_V_0_vld_in);
    sensitive << ( inp1_img_TVALID );

    SC_METHOD(thread_inp1_img_V_data_V_0_vld_out);
    sensitive << ( inp1_img_V_data_V_0_state );

    SC_METHOD(thread_inp1_img_V_last_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_predicate_op81_read_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_inp1_img_V_last_V_0_vld_in);
    sensitive << ( inp1_img_TVALID );

    SC_METHOD(thread_inp2_img_TDATA_blk_n);
    sensitive << ( inp2_img_V_data_V_0_state );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten_fu_484_p2 );
    sensitive << ( or_cond_i_fu_588_p2 );

    SC_METHOD(thread_inp2_img_TREADY);
    sensitive << ( inp2_img_V_last_V_0_state );

    SC_METHOD(thread_inp2_img_V_data_V_0_ack_in);
    sensitive << ( inp2_img_V_data_V_0_state );

    SC_METHOD(thread_inp2_img_V_data_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_predicate_op83_read_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_inp2_img_V_data_V_0_data_out);
    sensitive << ( inp2_img_V_data_V_0_payload_A );
    sensitive << ( inp2_img_V_data_V_0_payload_B );
    sensitive << ( inp2_img_V_data_V_0_sel );

    SC_METHOD(thread_inp2_img_V_data_V_0_load_A);
    sensitive << ( inp2_img_V_data_V_0_sel_wr );
    sensitive << ( inp2_img_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_inp2_img_V_data_V_0_load_B);
    sensitive << ( inp2_img_V_data_V_0_sel_wr );
    sensitive << ( inp2_img_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_inp2_img_V_data_V_0_sel);
    sensitive << ( inp2_img_V_data_V_0_sel_rd );

    SC_METHOD(thread_inp2_img_V_data_V_0_state_cmp_full);
    sensitive << ( inp2_img_V_data_V_0_state );

    SC_METHOD(thread_inp2_img_V_data_V_0_vld_in);
    sensitive << ( inp2_img_TVALID );

    SC_METHOD(thread_inp2_img_V_data_V_0_vld_out);
    sensitive << ( inp2_img_V_data_V_0_state );

    SC_METHOD(thread_inp2_img_V_last_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_predicate_op83_read_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_inp2_img_V_last_V_0_vld_in);
    sensitive << ( inp2_img_TVALID );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_lpf_lines_buffer_V_1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_13_i_fu_580_p1 );

    SC_METHOD(thread_lpf_lines_buffer_V_1_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_lpf_lines_buffer_V_1_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_lpf_lines_buffer_V_1_we1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond_flatten_reg_1021 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_12_i_reg_1040 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_lpf_lines_buffer_V_2_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_13_i_fu_580_p1 );

    SC_METHOD(thread_lpf_lines_buffer_V_2_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_lpf_lines_buffer_V_2_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_lpf_lines_buffer_V_2_we1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond_flatten_reg_1021 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_12_i_reg_1040 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_lpf_lines_buffer_V_3_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_13_i_fu_580_p1 );

    SC_METHOD(thread_lpf_lines_buffer_V_3_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_lpf_lines_buffer_V_3_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_lpf_lines_buffer_V_3_we1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond_flatten_reg_1021 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_12_i_reg_1040 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_lpf_lines_buffer_V_4_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_13_i_fu_580_p1 );

    SC_METHOD(thread_lpf_lines_buffer_V_4_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_15_i_fu_822_p1 );

    SC_METHOD(thread_lpf_lines_buffer_V_4_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_lpf_lines_buffer_V_4_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_lpf_lines_buffer_V_4_we1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond_flatten_reg_1021 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( or_cond_i_reg_1067 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_or_cond_i_fu_588_p2);
    sensitive << ( tmp_12_i_fu_575_p2 );
    sensitive << ( tmp_8_i_mid2_fu_519_p3 );

    SC_METHOD(thread_out1_img_V_blk_n);
    sensitive << ( out1_img_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_17_i_reg_1081_pp0_iter2_reg );

    SC_METHOD(thread_out1_img_V_din);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_17_i_reg_1081_pp0_iter2_reg );
    sensitive << ( ap_phi_mux_p_1_i_phi_fu_404_p4 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_out1_img_V_write);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_17_i_reg_1081_pp0_iter2_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_out2_img_V_blk_n);
    sensitive << ( out2_img_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_17_i_reg_1081_pp0_iter2_reg );

    SC_METHOD(thread_out2_img_V_din);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_17_i_reg_1081_pp0_iter2_reg );
    sensitive << ( ap_phi_mux_p_2_i_phi_fu_416_p4 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_out2_img_V_write);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_17_i_reg_1081_pp0_iter2_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_p_Result_s_fu_818_p1);
    sensitive << ( tmp_14_i_fu_810_p3 );

    SC_METHOD(thread_pixels_0_V_fu_771_p1);
    sensitive << ( lpf_lines_buffer_V_1_q0 );

    SC_METHOD(thread_pixels_1_V_fu_775_p1);
    sensitive << ( lpf_lines_buffer_V_2_q0 );

    SC_METHOD(thread_pixels_2_V_fu_779_p1);
    sensitive << ( lpf_lines_buffer_V_3_q0 );

    SC_METHOD(thread_pixels_3_V_fu_783_p1);
    sensitive << ( lpf_lines_buffer_V_4_q0 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_row_fu_503_p2);
    sensitive << ( row_i_reg_378 );

    SC_METHOD(thread_row_i_mid2_fu_567_p3);
    sensitive << ( row_i_reg_378 );
    sensitive << ( tmp_10_i_fu_479_p2 );
    sensitive << ( row_fu_503_p2 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_tmp_10_i_fu_479_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_5_i_reg_1011 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_1_cast_i_fu_475_p1 );

    SC_METHOD(thread_tmp_12_i_fu_575_p2);
    sensitive << ( width );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_484_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( col_i_mid2_fu_495_p3 );

    SC_METHOD(thread_tmp_13_i_fu_580_p1);
    sensitive << ( col_i_mid2_fu_495_p3 );

    SC_METHOD(thread_tmp_14_i_fu_810_p3);
    sensitive << ( tmp_data_V_1_reg_1076 );
    sensitive << ( tmp_V_1_trunc_i_fu_807_p1 );

    SC_METHOD(thread_tmp_15_i_fu_822_p1);
    sensitive << ( col_i_mid2_reg_1030 );

    SC_METHOD(thread_tmp_17_i_fu_618_p2);
    sensitive << ( tmp_9_i_mid2_fu_559_p3 );
    sensitive << ( icmp_fu_612_p2 );

    SC_METHOD(thread_tmp_19_i_fu_624_p2);
    sensitive << ( or_cond_i_fu_588_p2 );
    sensitive << ( tmp_17_i_fu_618_p2 );

    SC_METHOD(thread_tmp_1_cast_i_fu_475_p1);
    sensitive << ( col_i_reg_389 );

    SC_METHOD(thread_tmp_1_fu_543_p4);
    sensitive << ( row_i_reg_378 );

    SC_METHOD(thread_tmp_2_fu_602_p4);
    sensitive << ( col_i_mid2_fu_495_p3 );

    SC_METHOD(thread_tmp_4_cast_i_fu_457_p1);
    sensitive << ( width );

    SC_METHOD(thread_tmp_5_i_fu_461_p2);
    sensitive << ( tmp_4_cast_i_fu_457_p1 );

    SC_METHOD(thread_tmp_8_i_fu_514_p2);
    sensitive << ( height );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_484_p2 );
    sensitive << ( row_i_reg_378 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tmp_8_i_mid1_fu_509_p2);
    sensitive << ( height );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_484_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( row_fu_503_p2 );

    SC_METHOD(thread_tmp_8_i_mid2_fu_519_p3);
    sensitive << ( tmp_10_i_fu_479_p2 );
    sensitive << ( tmp_8_i_fu_514_p2 );
    sensitive << ( tmp_8_i_mid1_fu_509_p2 );

    SC_METHOD(thread_tmp_9_i_mid2_fu_559_p3);
    sensitive << ( tmp_10_i_fu_479_p2 );
    sensitive << ( icmp2_fu_553_p2 );
    sensitive << ( icmp1_fu_537_p2 );

    SC_METHOD(thread_tmp_V_1_trunc_i_fu_807_p1);
    sensitive << ( tmp_data_V_reg_1071 );

    SC_METHOD(thread_tmp_fu_527_p4);
    sensitive << ( row_fu_503_p2 );

    SC_METHOD(thread_width_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( width_out_full_n );

    SC_METHOD(thread_width_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( width );
    sensitive << ( height_out_full_n );
    sensitive << ( width_out_full_n );

    SC_METHOD(thread_width_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( height_out_full_n );
    sensitive << ( width_out_full_n );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( height_out_full_n );
    sensitive << ( width_out_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    inp1_img_V_data_V_0_sel_rd = SC_LOGIC_0;
    inp1_img_V_data_V_0_sel_wr = SC_LOGIC_0;
    inp1_img_V_data_V_0_state = "00";
    inp1_img_V_last_V_0_state = "00";
    inp2_img_V_data_V_0_sel_rd = SC_LOGIC_0;
    inp2_img_V_data_V_0_sel_wr = SC_LOGIC_0;
    inp2_img_V_data_V_0_state = "00";
    inp2_img_V_last_V_0_state = "00";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "hls_twoIsotropicFilt_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, inp1_img_TDATA, "(port)inp1_img_TDATA");
    sc_trace(mVcdFile, inp1_img_TVALID, "(port)inp1_img_TVALID");
    sc_trace(mVcdFile, inp1_img_TREADY, "(port)inp1_img_TREADY");
    sc_trace(mVcdFile, inp1_img_TLAST, "(port)inp1_img_TLAST");
    sc_trace(mVcdFile, inp2_img_TDATA, "(port)inp2_img_TDATA");
    sc_trace(mVcdFile, inp2_img_TVALID, "(port)inp2_img_TVALID");
    sc_trace(mVcdFile, inp2_img_TREADY, "(port)inp2_img_TREADY");
    sc_trace(mVcdFile, inp2_img_TLAST, "(port)inp2_img_TLAST");
    sc_trace(mVcdFile, out1_img_V_din, "(port)out1_img_V_din");
    sc_trace(mVcdFile, out1_img_V_full_n, "(port)out1_img_V_full_n");
    sc_trace(mVcdFile, out1_img_V_write, "(port)out1_img_V_write");
    sc_trace(mVcdFile, out2_img_V_din, "(port)out2_img_V_din");
    sc_trace(mVcdFile, out2_img_V_full_n, "(port)out2_img_V_full_n");
    sc_trace(mVcdFile, out2_img_V_write, "(port)out2_img_V_write");
    sc_trace(mVcdFile, height, "(port)height");
    sc_trace(mVcdFile, width, "(port)width");
    sc_trace(mVcdFile, height_out_din, "(port)height_out_din");
    sc_trace(mVcdFile, height_out_full_n, "(port)height_out_full_n");
    sc_trace(mVcdFile, height_out_write, "(port)height_out_write");
    sc_trace(mVcdFile, width_out_din, "(port)width_out_din");
    sc_trace(mVcdFile, width_out_full_n, "(port)width_out_full_n");
    sc_trace(mVcdFile, width_out_write, "(port)width_out_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, inp1_img_V_data_V_0_data_out, "inp1_img_V_data_V_0_data_out");
    sc_trace(mVcdFile, inp1_img_V_data_V_0_vld_in, "inp1_img_V_data_V_0_vld_in");
    sc_trace(mVcdFile, inp1_img_V_data_V_0_vld_out, "inp1_img_V_data_V_0_vld_out");
    sc_trace(mVcdFile, inp1_img_V_data_V_0_ack_in, "inp1_img_V_data_V_0_ack_in");
    sc_trace(mVcdFile, inp1_img_V_data_V_0_ack_out, "inp1_img_V_data_V_0_ack_out");
    sc_trace(mVcdFile, inp1_img_V_data_V_0_payload_A, "inp1_img_V_data_V_0_payload_A");
    sc_trace(mVcdFile, inp1_img_V_data_V_0_payload_B, "inp1_img_V_data_V_0_payload_B");
    sc_trace(mVcdFile, inp1_img_V_data_V_0_sel_rd, "inp1_img_V_data_V_0_sel_rd");
    sc_trace(mVcdFile, inp1_img_V_data_V_0_sel_wr, "inp1_img_V_data_V_0_sel_wr");
    sc_trace(mVcdFile, inp1_img_V_data_V_0_sel, "inp1_img_V_data_V_0_sel");
    sc_trace(mVcdFile, inp1_img_V_data_V_0_load_A, "inp1_img_V_data_V_0_load_A");
    sc_trace(mVcdFile, inp1_img_V_data_V_0_load_B, "inp1_img_V_data_V_0_load_B");
    sc_trace(mVcdFile, inp1_img_V_data_V_0_state, "inp1_img_V_data_V_0_state");
    sc_trace(mVcdFile, inp1_img_V_data_V_0_state_cmp_full, "inp1_img_V_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, inp1_img_V_last_V_0_vld_in, "inp1_img_V_last_V_0_vld_in");
    sc_trace(mVcdFile, inp1_img_V_last_V_0_ack_out, "inp1_img_V_last_V_0_ack_out");
    sc_trace(mVcdFile, inp1_img_V_last_V_0_state, "inp1_img_V_last_V_0_state");
    sc_trace(mVcdFile, inp2_img_V_data_V_0_data_out, "inp2_img_V_data_V_0_data_out");
    sc_trace(mVcdFile, inp2_img_V_data_V_0_vld_in, "inp2_img_V_data_V_0_vld_in");
    sc_trace(mVcdFile, inp2_img_V_data_V_0_vld_out, "inp2_img_V_data_V_0_vld_out");
    sc_trace(mVcdFile, inp2_img_V_data_V_0_ack_in, "inp2_img_V_data_V_0_ack_in");
    sc_trace(mVcdFile, inp2_img_V_data_V_0_ack_out, "inp2_img_V_data_V_0_ack_out");
    sc_trace(mVcdFile, inp2_img_V_data_V_0_payload_A, "inp2_img_V_data_V_0_payload_A");
    sc_trace(mVcdFile, inp2_img_V_data_V_0_payload_B, "inp2_img_V_data_V_0_payload_B");
    sc_trace(mVcdFile, inp2_img_V_data_V_0_sel_rd, "inp2_img_V_data_V_0_sel_rd");
    sc_trace(mVcdFile, inp2_img_V_data_V_0_sel_wr, "inp2_img_V_data_V_0_sel_wr");
    sc_trace(mVcdFile, inp2_img_V_data_V_0_sel, "inp2_img_V_data_V_0_sel");
    sc_trace(mVcdFile, inp2_img_V_data_V_0_load_A, "inp2_img_V_data_V_0_load_A");
    sc_trace(mVcdFile, inp2_img_V_data_V_0_load_B, "inp2_img_V_data_V_0_load_B");
    sc_trace(mVcdFile, inp2_img_V_data_V_0_state, "inp2_img_V_data_V_0_state");
    sc_trace(mVcdFile, inp2_img_V_data_V_0_state_cmp_full, "inp2_img_V_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, inp2_img_V_last_V_0_vld_in, "inp2_img_V_last_V_0_vld_in");
    sc_trace(mVcdFile, inp2_img_V_last_V_0_ack_out, "inp2_img_V_last_V_0_ack_out");
    sc_trace(mVcdFile, inp2_img_V_last_V_0_state, "inp2_img_V_last_V_0_state");
    sc_trace(mVcdFile, lpf_lines_buffer_V_1_address0, "lpf_lines_buffer_V_1_address0");
    sc_trace(mVcdFile, lpf_lines_buffer_V_1_ce0, "lpf_lines_buffer_V_1_ce0");
    sc_trace(mVcdFile, lpf_lines_buffer_V_1_q0, "lpf_lines_buffer_V_1_q0");
    sc_trace(mVcdFile, lpf_lines_buffer_V_1_ce1, "lpf_lines_buffer_V_1_ce1");
    sc_trace(mVcdFile, lpf_lines_buffer_V_1_we1, "lpf_lines_buffer_V_1_we1");
    sc_trace(mVcdFile, lpf_lines_buffer_V_2_address0, "lpf_lines_buffer_V_2_address0");
    sc_trace(mVcdFile, lpf_lines_buffer_V_2_ce0, "lpf_lines_buffer_V_2_ce0");
    sc_trace(mVcdFile, lpf_lines_buffer_V_2_q0, "lpf_lines_buffer_V_2_q0");
    sc_trace(mVcdFile, lpf_lines_buffer_V_2_ce1, "lpf_lines_buffer_V_2_ce1");
    sc_trace(mVcdFile, lpf_lines_buffer_V_2_we1, "lpf_lines_buffer_V_2_we1");
    sc_trace(mVcdFile, lpf_lines_buffer_V_3_address0, "lpf_lines_buffer_V_3_address0");
    sc_trace(mVcdFile, lpf_lines_buffer_V_3_ce0, "lpf_lines_buffer_V_3_ce0");
    sc_trace(mVcdFile, lpf_lines_buffer_V_3_q0, "lpf_lines_buffer_V_3_q0");
    sc_trace(mVcdFile, lpf_lines_buffer_V_3_ce1, "lpf_lines_buffer_V_3_ce1");
    sc_trace(mVcdFile, lpf_lines_buffer_V_3_we1, "lpf_lines_buffer_V_3_we1");
    sc_trace(mVcdFile, lpf_lines_buffer_V_4_address0, "lpf_lines_buffer_V_4_address0");
    sc_trace(mVcdFile, lpf_lines_buffer_V_4_ce0, "lpf_lines_buffer_V_4_ce0");
    sc_trace(mVcdFile, lpf_lines_buffer_V_4_q0, "lpf_lines_buffer_V_4_q0");
    sc_trace(mVcdFile, lpf_lines_buffer_V_4_address1, "lpf_lines_buffer_V_4_address1");
    sc_trace(mVcdFile, lpf_lines_buffer_V_4_ce1, "lpf_lines_buffer_V_4_ce1");
    sc_trace(mVcdFile, lpf_lines_buffer_V_4_we1, "lpf_lines_buffer_V_4_we1");
    sc_trace(mVcdFile, inp1_img_TDATA_blk_n, "inp1_img_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, exitcond_flatten_fu_484_p2, "exitcond_flatten_fu_484_p2");
    sc_trace(mVcdFile, or_cond_i_fu_588_p2, "or_cond_i_fu_588_p2");
    sc_trace(mVcdFile, inp2_img_TDATA_blk_n, "inp2_img_TDATA_blk_n");
    sc_trace(mVcdFile, out1_img_V_blk_n, "out1_img_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, tmp_17_i_reg_1081, "tmp_17_i_reg_1081");
    sc_trace(mVcdFile, tmp_17_i_reg_1081_pp0_iter2_reg, "tmp_17_i_reg_1081_pp0_iter2_reg");
    sc_trace(mVcdFile, out2_img_V_blk_n, "out2_img_V_blk_n");
    sc_trace(mVcdFile, height_out_blk_n, "height_out_blk_n");
    sc_trace(mVcdFile, width_out_blk_n, "width_out_blk_n");
    sc_trace(mVcdFile, indvar_flatten_reg_367, "indvar_flatten_reg_367");
    sc_trace(mVcdFile, row_i_reg_378, "row_i_reg_378");
    sc_trace(mVcdFile, col_i_reg_389, "col_i_reg_389");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, tmp_5_i_fu_461_p2, "tmp_5_i_fu_461_p2");
    sc_trace(mVcdFile, tmp_5_i_reg_1011, "tmp_5_i_reg_1011");
    sc_trace(mVcdFile, grp_fu_867_p3, "grp_fu_867_p3");
    sc_trace(mVcdFile, bound_reg_1016, "bound_reg_1016");
    sc_trace(mVcdFile, exitcond_flatten_reg_1021, "exitcond_flatten_reg_1021");
    sc_trace(mVcdFile, ap_predicate_op81_read_state2, "ap_predicate_op81_read_state2");
    sc_trace(mVcdFile, ap_predicate_op83_read_state2, "ap_predicate_op83_read_state2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, exitcond_flatten_reg_1021_pp0_iter1_reg, "exitcond_flatten_reg_1021_pp0_iter1_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_1021_pp0_iter2_reg, "exitcond_flatten_reg_1021_pp0_iter2_reg");
    sc_trace(mVcdFile, indvar_flatten_next_fu_489_p2, "indvar_flatten_next_fu_489_p2");
    sc_trace(mVcdFile, col_i_mid2_fu_495_p3, "col_i_mid2_fu_495_p3");
    sc_trace(mVcdFile, col_i_mid2_reg_1030, "col_i_mid2_reg_1030");
    sc_trace(mVcdFile, row_i_mid2_fu_567_p3, "row_i_mid2_fu_567_p3");
    sc_trace(mVcdFile, tmp_12_i_fu_575_p2, "tmp_12_i_fu_575_p2");
    sc_trace(mVcdFile, tmp_12_i_reg_1040, "tmp_12_i_reg_1040");
    sc_trace(mVcdFile, lpf_lines_buffer_V_1_1_reg_1044, "lpf_lines_buffer_V_1_1_reg_1044");
    sc_trace(mVcdFile, lpf_lines_buffer_V_2_1_reg_1050, "lpf_lines_buffer_V_2_1_reg_1050");
    sc_trace(mVcdFile, lpf_lines_buffer_V_3_1_reg_1056, "lpf_lines_buffer_V_3_1_reg_1056");
    sc_trace(mVcdFile, or_cond_i_reg_1067, "or_cond_i_reg_1067");
    sc_trace(mVcdFile, tmp_data_V_reg_1071, "tmp_data_V_reg_1071");
    sc_trace(mVcdFile, tmp_data_V_1_reg_1076, "tmp_data_V_1_reg_1076");
    sc_trace(mVcdFile, tmp_17_i_fu_618_p2, "tmp_17_i_fu_618_p2");
    sc_trace(mVcdFile, tmp_17_i_reg_1081_pp0_iter1_reg, "tmp_17_i_reg_1081_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_19_i_fu_624_p2, "tmp_19_i_fu_624_p2");
    sc_trace(mVcdFile, tmp_19_i_reg_1085, "tmp_19_i_reg_1085");
    sc_trace(mVcdFile, tmp_19_i_reg_1085_pp0_iter1_reg, "tmp_19_i_reg_1085_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_19_i_reg_1085_pp0_iter2_reg, "tmp_19_i_reg_1085_pp0_iter2_reg");
    sc_trace(mVcdFile, col_fu_630_p2, "col_fu_630_p2");
    sc_trace(mVcdFile, window_0_V_load_reg_1094, "window_0_V_load_reg_1094");
    sc_trace(mVcdFile, window_1_V_load_reg_1099, "window_1_V_load_reg_1099");
    sc_trace(mVcdFile, window_2_V_load_reg_1104, "window_2_V_load_reg_1104");
    sc_trace(mVcdFile, window_22_V_load_reg_1109, "window_22_V_load_reg_1109");
    sc_trace(mVcdFile, window_5_V_load_reg_1114, "window_5_V_load_reg_1114");
    sc_trace(mVcdFile, window_6_V_load_reg_1119, "window_6_V_load_reg_1119");
    sc_trace(mVcdFile, window_7_V_load_reg_1124, "window_7_V_load_reg_1124");
    sc_trace(mVcdFile, window_21_V_load_reg_1129, "window_21_V_load_reg_1129");
    sc_trace(mVcdFile, window_10_V_load_reg_1134, "window_10_V_load_reg_1134");
    sc_trace(mVcdFile, window_11_V_load_reg_1139, "window_11_V_load_reg_1139");
    sc_trace(mVcdFile, window_12_V_load_reg_1144, "window_12_V_load_reg_1144");
    sc_trace(mVcdFile, window_20_V_load_reg_1149, "window_20_V_load_reg_1149");
    sc_trace(mVcdFile, window_15_V_load_reg_1154, "window_15_V_load_reg_1154");
    sc_trace(mVcdFile, window_16_V_load_reg_1159, "window_16_V_load_reg_1159");
    sc_trace(mVcdFile, window_17_V_load_reg_1164, "window_17_V_load_reg_1164");
    sc_trace(mVcdFile, window_23_V_1_reg_1169, "window_23_V_1_reg_1169");
    sc_trace(mVcdFile, window_3_V_1_reg_1174, "window_3_V_1_reg_1174");
    sc_trace(mVcdFile, window_8_V_1_reg_1179, "window_8_V_1_reg_1179");
    sc_trace(mVcdFile, window_13_V_1_reg_1184, "window_13_V_1_reg_1184");
    sc_trace(mVcdFile, window_18_V_1_reg_1189, "window_18_V_1_reg_1189");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter1_state3, "ap_condition_pp0_exit_iter1_state3");
    sc_trace(mVcdFile, grp_hls_isotropic_kernel_fu_424_ap_return, "grp_hls_isotropic_kernel_fu_424_ap_return");
    sc_trace(mVcdFile, grp_hls_isotropic_kernel_fu_424_ap_ce, "grp_hls_isotropic_kernel_fu_424_ap_ce");
    sc_trace(mVcdFile, ap_predicate_op157_call_state4, "ap_predicate_op157_call_state4");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0_ignore_call5, "ap_block_state2_pp0_stage0_iter0_ignore_call5");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1_ignore_call5, "ap_block_state3_pp0_stage0_iter1_ignore_call5");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2_ignore_call5, "ap_block_state4_pp0_stage0_iter2_ignore_call5");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3_ignore_call5, "ap_block_state5_pp0_stage0_iter3_ignore_call5");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001_ignoreCallOp157, "ap_block_pp0_stage0_11001_ignoreCallOp157");
    sc_trace(mVcdFile, ap_phi_mux_p_1_i_phi_fu_404_p4, "ap_phi_mux_p_1_i_phi_fu_404_p4");
    sc_trace(mVcdFile, filt_out1_V_fu_851_p1, "filt_out1_V_fu_851_p1");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter3_p_1_i_reg_400, "ap_phi_reg_pp0_iter3_p_1_i_reg_400");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_p_1_i_reg_400, "ap_phi_reg_pp0_iter0_p_1_i_reg_400");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_p_1_i_reg_400, "ap_phi_reg_pp0_iter1_p_1_i_reg_400");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter2_p_1_i_reg_400, "ap_phi_reg_pp0_iter2_p_1_i_reg_400");
    sc_trace(mVcdFile, ap_phi_mux_p_2_i_phi_fu_416_p4, "ap_phi_mux_p_2_i_phi_fu_416_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter3_p_2_i_reg_412, "ap_phi_reg_pp0_iter3_p_2_i_reg_412");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_p_2_i_reg_412, "ap_phi_reg_pp0_iter0_p_2_i_reg_412");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_p_2_i_reg_412, "ap_phi_reg_pp0_iter1_p_2_i_reg_412");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter2_p_2_i_reg_412, "ap_phi_reg_pp0_iter2_p_2_i_reg_412");
    sc_trace(mVcdFile, tmp_13_i_fu_580_p1, "tmp_13_i_fu_580_p1");
    sc_trace(mVcdFile, tmp_15_i_fu_822_p1, "tmp_15_i_fu_822_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, window_0_V_fu_150, "window_0_V_fu_150");
    sc_trace(mVcdFile, window_1_V_fu_154, "window_1_V_fu_154");
    sc_trace(mVcdFile, window_2_V_fu_158, "window_2_V_fu_158");
    sc_trace(mVcdFile, window_22_V_fu_162, "window_22_V_fu_162");
    sc_trace(mVcdFile, window_5_V_fu_166, "window_5_V_fu_166");
    sc_trace(mVcdFile, window_6_V_fu_170, "window_6_V_fu_170");
    sc_trace(mVcdFile, window_7_V_fu_174, "window_7_V_fu_174");
    sc_trace(mVcdFile, window_21_V_fu_178, "window_21_V_fu_178");
    sc_trace(mVcdFile, window_10_V_fu_182, "window_10_V_fu_182");
    sc_trace(mVcdFile, window_11_V_fu_186, "window_11_V_fu_186");
    sc_trace(mVcdFile, window_12_V_fu_190, "window_12_V_fu_190");
    sc_trace(mVcdFile, window_20_V_fu_194, "window_20_V_fu_194");
    sc_trace(mVcdFile, window_15_V_fu_198, "window_15_V_fu_198");
    sc_trace(mVcdFile, window_16_V_fu_202, "window_16_V_fu_202");
    sc_trace(mVcdFile, window_17_V_fu_206, "window_17_V_fu_206");
    sc_trace(mVcdFile, window_23_V_fu_210, "window_23_V_fu_210");
    sc_trace(mVcdFile, p_Result_s_fu_818_p1, "p_Result_s_fu_818_p1");
    sc_trace(mVcdFile, window_3_V_fu_214, "window_3_V_fu_214");
    sc_trace(mVcdFile, pixels_0_V_fu_771_p1, "pixels_0_V_fu_771_p1");
    sc_trace(mVcdFile, window_8_V_fu_218, "window_8_V_fu_218");
    sc_trace(mVcdFile, pixels_1_V_fu_775_p1, "pixels_1_V_fu_775_p1");
    sc_trace(mVcdFile, window_13_V_fu_222, "window_13_V_fu_222");
    sc_trace(mVcdFile, pixels_2_V_fu_779_p1, "pixels_2_V_fu_779_p1");
    sc_trace(mVcdFile, window_18_V_fu_226, "window_18_V_fu_226");
    sc_trace(mVcdFile, pixels_3_V_fu_783_p1, "pixels_3_V_fu_783_p1");
    sc_trace(mVcdFile, tmp_14_i_fu_810_p3, "tmp_14_i_fu_810_p3");
    sc_trace(mVcdFile, tmp_4_cast_i_fu_457_p1, "tmp_4_cast_i_fu_457_p1");
    sc_trace(mVcdFile, tmp_1_cast_i_fu_475_p1, "tmp_1_cast_i_fu_475_p1");
    sc_trace(mVcdFile, indvar_flatten_cast_fu_471_p1, "indvar_flatten_cast_fu_471_p1");
    sc_trace(mVcdFile, tmp_10_i_fu_479_p2, "tmp_10_i_fu_479_p2");
    sc_trace(mVcdFile, row_fu_503_p2, "row_fu_503_p2");
    sc_trace(mVcdFile, tmp_8_i_fu_514_p2, "tmp_8_i_fu_514_p2");
    sc_trace(mVcdFile, tmp_8_i_mid1_fu_509_p2, "tmp_8_i_mid1_fu_509_p2");
    sc_trace(mVcdFile, tmp_fu_527_p4, "tmp_fu_527_p4");
    sc_trace(mVcdFile, tmp_1_fu_543_p4, "tmp_1_fu_543_p4");
    sc_trace(mVcdFile, icmp2_fu_553_p2, "icmp2_fu_553_p2");
    sc_trace(mVcdFile, icmp1_fu_537_p2, "icmp1_fu_537_p2");
    sc_trace(mVcdFile, tmp_8_i_mid2_fu_519_p3, "tmp_8_i_mid2_fu_519_p3");
    sc_trace(mVcdFile, tmp_2_fu_602_p4, "tmp_2_fu_602_p4");
    sc_trace(mVcdFile, tmp_9_i_mid2_fu_559_p3, "tmp_9_i_mid2_fu_559_p3");
    sc_trace(mVcdFile, icmp_fu_612_p2, "icmp_fu_612_p2");
    sc_trace(mVcdFile, tmp_V_1_trunc_i_fu_807_p1, "tmp_V_1_trunc_i_fu_807_p1");
    sc_trace(mVcdFile, grp_fu_867_p0, "grp_fu_867_p0");
    sc_trace(mVcdFile, grp_fu_867_p1, "grp_fu_867_p1");
    sc_trace(mVcdFile, grp_fu_867_p2, "grp_fu_867_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, grp_fu_867_p00, "grp_fu_867_p00");
    sc_trace(mVcdFile, grp_fu_867_p20, "grp_fu_867_p20");
    sc_trace(mVcdFile, ap_condition_433, "ap_condition_433");
#endif

    }
}

hls_twoIsotropicFilt::~hls_twoIsotropicFilt() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete lpf_lines_buffer_V_1_U;
    delete lpf_lines_buffer_V_2_U;
    delete lpf_lines_buffer_V_3_U;
    delete lpf_lines_buffer_V_4_U;
    delete grp_hls_isotropic_kernel_fu_424;
    delete hls_LK_am_addmul_16ns_3ns_17ns_34_1_1_U26;
}

void hls_twoIsotropicFilt::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_484_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, height_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, width_out_full_n.read())))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter1_state3.read())) {
                ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter0.read();
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, height_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, width_out_full_n.read())))) {
            ap_enable_reg_pp0_iter3 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_433.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_484_p2.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_i_fu_624_p2.read()))) {
            ap_phi_reg_pp0_iter1_p_1_i_reg_400 = ap_const_lv12_0;
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter1_p_1_i_reg_400 = ap_phi_reg_pp0_iter0_p_1_i_reg_400.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_433.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_484_p2.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_i_fu_624_p2.read()))) {
            ap_phi_reg_pp0_iter1_p_2_i_reg_412 = ap_const_lv12_0;
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter1_p_2_i_reg_412 = ap_phi_reg_pp0_iter0_p_2_i_reg_412.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_484_p2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        col_i_reg_389 = col_fu_630_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, height_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, width_out_full_n.read())))) {
        col_i_reg_389 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_484_p2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        indvar_flatten_reg_367 = indvar_flatten_next_fu_489_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, height_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, width_out_full_n.read())))) {
        indvar_flatten_reg_367 = ap_const_lv33_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        inp1_img_V_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, inp1_img_V_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, inp1_img_V_data_V_0_vld_out.read()))) {
            inp1_img_V_data_V_0_sel_rd =  (sc_logic) (~inp1_img_V_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        inp1_img_V_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, inp1_img_V_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, inp1_img_V_data_V_0_ack_in.read()))) {
            inp1_img_V_data_V_0_sel_wr =  (sc_logic) (~inp1_img_V_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        inp1_img_V_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, inp1_img_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, inp1_img_V_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(inp1_img_V_data_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, inp1_img_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(inp1_img_V_data_V_0_state.read(), ap_const_lv2_2)))) {
            inp1_img_V_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inp1_img_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, inp1_img_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(inp1_img_V_data_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, inp1_img_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(inp1_img_V_data_V_0_state.read(), ap_const_lv2_1)))) {
            inp1_img_V_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inp1_img_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(inp1_img_V_data_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, inp1_img_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(inp1_img_V_data_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(inp1_img_V_data_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, inp1_img_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, inp1_img_V_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, inp1_img_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, inp1_img_V_data_V_0_ack_out.read()))))) {
            inp1_img_V_data_V_0_state = ap_const_lv2_3;
        } else {
            inp1_img_V_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        inp1_img_V_last_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, inp1_img_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, inp1_img_V_last_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, inp1_img_V_last_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, inp1_img_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, inp1_img_V_last_V_0_state.read())))) {
            inp1_img_V_last_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inp1_img_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, inp1_img_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, inp1_img_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, inp1_img_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, inp1_img_V_last_V_0_state.read())))) {
            inp1_img_V_last_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inp1_img_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, inp1_img_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, inp1_img_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, inp1_img_V_last_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, inp1_img_V_last_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, inp1_img_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, inp1_img_V_last_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, inp1_img_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, inp1_img_V_last_V_0_ack_out.read()))))) {
            inp1_img_V_last_V_0_state = ap_const_lv2_3;
        } else {
            inp1_img_V_last_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        inp2_img_V_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, inp2_img_V_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, inp2_img_V_data_V_0_vld_out.read()))) {
            inp2_img_V_data_V_0_sel_rd =  (sc_logic) (~inp2_img_V_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        inp2_img_V_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, inp2_img_V_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, inp2_img_V_data_V_0_ack_in.read()))) {
            inp2_img_V_data_V_0_sel_wr =  (sc_logic) (~inp2_img_V_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        inp2_img_V_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, inp2_img_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, inp2_img_V_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, inp2_img_V_data_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, inp2_img_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, inp2_img_V_data_V_0_state.read())))) {
            inp2_img_V_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inp2_img_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, inp2_img_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, inp2_img_V_data_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, inp2_img_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, inp2_img_V_data_V_0_state.read())))) {
            inp2_img_V_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inp2_img_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, inp2_img_V_data_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, inp2_img_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, inp2_img_V_data_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, inp2_img_V_data_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, inp2_img_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, inp2_img_V_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, inp2_img_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, inp2_img_V_data_V_0_ack_out.read()))))) {
            inp2_img_V_data_V_0_state = ap_const_lv2_3;
        } else {
            inp2_img_V_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        inp2_img_V_last_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, inp2_img_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, inp2_img_V_last_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, inp2_img_V_last_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, inp2_img_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, inp2_img_V_last_V_0_state.read())))) {
            inp2_img_V_last_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inp2_img_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, inp2_img_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, inp2_img_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, inp2_img_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, inp2_img_V_last_V_0_state.read())))) {
            inp2_img_V_last_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inp2_img_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, inp2_img_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, inp2_img_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, inp2_img_V_last_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, inp2_img_V_last_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, inp2_img_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, inp2_img_V_last_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, inp2_img_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, inp2_img_V_last_V_0_ack_out.read()))))) {
            inp2_img_V_last_V_0_state = ap_const_lv2_3;
        } else {
            inp2_img_V_last_V_0_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_484_p2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        row_i_reg_378 = row_i_mid2_fu_567_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, height_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, width_out_full_n.read())))) {
        row_i_reg_378 = ap_const_lv16_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        ap_phi_reg_pp0_iter2_p_1_i_reg_400 = ap_phi_reg_pp0_iter1_p_1_i_reg_400.read();
        ap_phi_reg_pp0_iter2_p_2_i_reg_412 = ap_phi_reg_pp0_iter1_p_2_i_reg_412.read();
        window_0_V_fu_150 = window_1_V_fu_154.read();
        window_10_V_fu_182 = window_11_V_fu_186.read();
        window_11_V_fu_186 = window_12_V_fu_190.read();
        window_12_V_fu_190 = window_13_V_fu_222.read();
        window_15_V_fu_198 = window_16_V_fu_202.read();
        window_16_V_fu_202 = window_17_V_fu_206.read();
        window_17_V_fu_206 = window_18_V_fu_226.read();
        window_1_V_fu_154 = window_2_V_fu_158.read();
        window_20_V_fu_194 = window_21_V_fu_178.read();
        window_21_V_fu_178 = window_22_V_fu_162.read();
        window_22_V_fu_162 = window_23_V_fu_210.read();
        window_2_V_fu_158 = window_3_V_fu_214.read();
        window_5_V_fu_166 = window_6_V_fu_170.read();
        window_6_V_fu_170 = window_7_V_fu_174.read();
        window_7_V_fu_174 = window_8_V_fu_218.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        ap_phi_reg_pp0_iter3_p_1_i_reg_400 = ap_phi_reg_pp0_iter2_p_1_i_reg_400.read();
        ap_phi_reg_pp0_iter3_p_2_i_reg_412 = ap_phi_reg_pp0_iter2_p_2_i_reg_412.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, height_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, width_out_full_n.read())))) {
        bound_reg_1016 = grp_fu_867_p3.read();
        tmp_5_i_reg_1011 = tmp_5_i_fu_461_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_484_p2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        col_i_mid2_reg_1030 = col_i_mid2_fu_495_p3.read();
        or_cond_i_reg_1067 = or_cond_i_fu_588_p2.read();
        tmp_12_i_reg_1040 = tmp_12_i_fu_575_p2.read();
        tmp_17_i_reg_1081 = tmp_17_i_fu_618_p2.read();
        tmp_19_i_reg_1085 = tmp_19_i_fu_624_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_flatten_reg_1021 = exitcond_flatten_fu_484_p2.read();
        exitcond_flatten_reg_1021_pp0_iter1_reg = exitcond_flatten_reg_1021.read();
        tmp_17_i_reg_1081_pp0_iter1_reg = tmp_17_i_reg_1081.read();
        tmp_19_i_reg_1085_pp0_iter1_reg = tmp_19_i_reg_1085.read();
        window_0_V_load_reg_1094 = window_0_V_fu_150.read();
        window_10_V_load_reg_1134 = window_10_V_fu_182.read();
        window_11_V_load_reg_1139 = window_11_V_fu_186.read();
        window_12_V_load_reg_1144 = window_12_V_fu_190.read();
        window_13_V_1_reg_1184 = window_13_V_fu_222.read();
        window_15_V_load_reg_1154 = window_15_V_fu_198.read();
        window_16_V_load_reg_1159 = window_16_V_fu_202.read();
        window_17_V_load_reg_1164 = window_17_V_fu_206.read();
        window_18_V_1_reg_1189 = window_18_V_fu_226.read();
        window_1_V_load_reg_1099 = window_1_V_fu_154.read();
        window_20_V_load_reg_1149 = window_20_V_fu_194.read();
        window_21_V_load_reg_1129 = window_21_V_fu_178.read();
        window_22_V_load_reg_1109 = window_22_V_fu_162.read();
        window_23_V_1_reg_1169 = window_23_V_fu_210.read();
        window_2_V_load_reg_1104 = window_2_V_fu_158.read();
        window_3_V_1_reg_1174 = window_3_V_fu_214.read();
        window_5_V_load_reg_1114 = window_5_V_fu_166.read();
        window_6_V_load_reg_1119 = window_6_V_fu_170.read();
        window_7_V_load_reg_1124 = window_7_V_fu_174.read();
        window_8_V_1_reg_1179 = window_8_V_fu_218.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        exitcond_flatten_reg_1021_pp0_iter2_reg = exitcond_flatten_reg_1021_pp0_iter1_reg.read();
        tmp_17_i_reg_1081_pp0_iter2_reg = tmp_17_i_reg_1081_pp0_iter1_reg.read();
        tmp_19_i_reg_1085_pp0_iter2_reg = tmp_19_i_reg_1085_pp0_iter1_reg.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, inp1_img_V_data_V_0_load_A.read())) {
        inp1_img_V_data_V_0_payload_A = inp1_img_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, inp1_img_V_data_V_0_load_B.read())) {
        inp1_img_V_data_V_0_payload_B = inp1_img_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, inp2_img_V_data_V_0_load_A.read())) {
        inp2_img_V_data_V_0_payload_A = inp2_img_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, inp2_img_V_data_V_0_load_B.read())) {
        inp2_img_V_data_V_0_payload_B = inp2_img_TDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_484_p2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_12_i_fu_575_p2.read()))) {
        lpf_lines_buffer_V_1_1_reg_1044 =  (sc_lv<9>) (tmp_13_i_fu_580_p1.read());
        lpf_lines_buffer_V_2_1_reg_1050 =  (sc_lv<9>) (tmp_13_i_fu_580_p1.read());
        lpf_lines_buffer_V_3_1_reg_1056 =  (sc_lv<9>) (tmp_13_i_fu_580_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_484_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_i_fu_588_p2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_data_V_1_reg_1076 = inp2_img_V_data_V_0_data_out.read();
        tmp_data_V_reg_1071 = inp1_img_V_data_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1021.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_12_i_reg_1040.read()))) {
        window_13_V_fu_222 = pixels_2_V_fu_779_p1.read();
        window_18_V_fu_226 = pixels_3_V_fu_783_p1.read();
        window_3_V_fu_214 = pixels_0_V_fu_771_p1.read();
        window_8_V_fu_218 = pixels_1_V_fu_775_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1021.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_i_reg_1067.read()))) {
        window_23_V_fu_210 = p_Result_s_fu_818_p1.read();
    }
}

void hls_twoIsotropicFilt::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void hls_twoIsotropicFilt::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void hls_twoIsotropicFilt::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[2];
}

void hls_twoIsotropicFilt::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void hls_twoIsotropicFilt::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  ((esl_seteq<1,1,1>(ap_const_logic_0, inp1_img_V_data_V_0_vld_out.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op81_read_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, inp2_img_V_data_V_0_vld_out.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op83_read_state2.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_17_i_reg_1081_pp0_iter2_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, out1_img_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_17_i_reg_1081_pp0_iter2_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, out2_img_V_full_n.read())))));
}

void hls_twoIsotropicFilt::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  ((esl_seteq<1,1,1>(ap_const_logic_0, inp1_img_V_data_V_0_vld_out.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op81_read_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, inp2_img_V_data_V_0_vld_out.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op83_read_state2.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_17_i_reg_1081_pp0_iter2_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, out1_img_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_17_i_reg_1081_pp0_iter2_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, out2_img_V_full_n.read())))));
}

void hls_twoIsotropicFilt::thread_ap_block_pp0_stage0_11001_ignoreCallOp157() {
    ap_block_pp0_stage0_11001_ignoreCallOp157 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  ((esl_seteq<1,1,1>(ap_const_logic_0, inp1_img_V_data_V_0_vld_out.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op81_read_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, inp2_img_V_data_V_0_vld_out.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op83_read_state2.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_17_i_reg_1081_pp0_iter2_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, out1_img_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_17_i_reg_1081_pp0_iter2_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, out2_img_V_full_n.read())))));
}

void hls_twoIsotropicFilt::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  ((esl_seteq<1,1,1>(ap_const_logic_0, inp1_img_V_data_V_0_vld_out.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op81_read_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, inp2_img_V_data_V_0_vld_out.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op83_read_state2.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_17_i_reg_1081_pp0_iter2_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, out1_img_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_17_i_reg_1081_pp0_iter2_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, out2_img_V_full_n.read())))));
}

void hls_twoIsotropicFilt::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, height_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, width_out_full_n.read()));
}

void hls_twoIsotropicFilt::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = ((esl_seteq<1,1,1>(ap_const_logic_0, inp1_img_V_data_V_0_vld_out.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op81_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, inp2_img_V_data_V_0_vld_out.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op83_read_state2.read())));
}

void hls_twoIsotropicFilt::thread_ap_block_state2_pp0_stage0_iter0_ignore_call5() {
    ap_block_state2_pp0_stage0_iter0_ignore_call5 = ((esl_seteq<1,1,1>(ap_const_logic_0, inp1_img_V_data_V_0_vld_out.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op81_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, inp2_img_V_data_V_0_vld_out.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op83_read_state2.read())));
}

void hls_twoIsotropicFilt::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void hls_twoIsotropicFilt::thread_ap_block_state3_pp0_stage0_iter1_ignore_call5() {
    ap_block_state3_pp0_stage0_iter1_ignore_call5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void hls_twoIsotropicFilt::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void hls_twoIsotropicFilt::thread_ap_block_state4_pp0_stage0_iter2_ignore_call5() {
    ap_block_state4_pp0_stage0_iter2_ignore_call5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void hls_twoIsotropicFilt::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_17_i_reg_1081_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out1_img_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_17_i_reg_1081_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out2_img_V_full_n.read())));
}

void hls_twoIsotropicFilt::thread_ap_block_state5_pp0_stage0_iter3_ignore_call5() {
    ap_block_state5_pp0_stage0_iter3_ignore_call5 = ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_17_i_reg_1081_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out1_img_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_17_i_reg_1081_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out2_img_V_full_n.read())));
}

void hls_twoIsotropicFilt::thread_ap_condition_433() {
    ap_condition_433 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0));
}

void hls_twoIsotropicFilt::thread_ap_condition_pp0_exit_iter1_state3() {
    if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
        ap_condition_pp0_exit_iter1_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter1_state3 = ap_const_logic_0;
    }
}

void hls_twoIsotropicFilt::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void hls_twoIsotropicFilt::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void hls_twoIsotropicFilt::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void hls_twoIsotropicFilt::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void hls_twoIsotropicFilt::thread_ap_phi_mux_p_1_i_phi_fu_404_p4() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1021_pp0_iter2_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_19_i_reg_1085_pp0_iter2_reg.read()))) {
        ap_phi_mux_p_1_i_phi_fu_404_p4 = filt_out1_V_fu_851_p1.read();
    } else {
        ap_phi_mux_p_1_i_phi_fu_404_p4 = ap_phi_reg_pp0_iter3_p_1_i_reg_400.read();
    }
}

void hls_twoIsotropicFilt::thread_ap_phi_mux_p_2_i_phi_fu_416_p4() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1021_pp0_iter2_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_19_i_reg_1085_pp0_iter2_reg.read()))) {
        ap_phi_mux_p_2_i_phi_fu_416_p4 = grp_hls_isotropic_kernel_fu_424_ap_return.read().range(23, 12);
    } else {
        ap_phi_mux_p_2_i_phi_fu_416_p4 = ap_phi_reg_pp0_iter3_p_2_i_reg_412.read();
    }
}

void hls_twoIsotropicFilt::thread_ap_phi_reg_pp0_iter0_p_1_i_reg_400() {
    ap_phi_reg_pp0_iter0_p_1_i_reg_400 =  (sc_lv<12>) ("XXXXXXXXXXXX");
}

void hls_twoIsotropicFilt::thread_ap_phi_reg_pp0_iter0_p_2_i_reg_412() {
    ap_phi_reg_pp0_iter0_p_2_i_reg_412 =  (sc_lv<12>) ("XXXXXXXXXXXX");
}

void hls_twoIsotropicFilt::thread_ap_predicate_op157_call_state4() {
    ap_predicate_op157_call_state4 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1021_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_19_i_reg_1085_pp0_iter1_reg.read()));
}

void hls_twoIsotropicFilt::thread_ap_predicate_op81_read_state2() {
    ap_predicate_op81_read_state2 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_484_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_i_fu_588_p2.read()));
}

void hls_twoIsotropicFilt::thread_ap_predicate_op83_read_state2() {
    ap_predicate_op83_read_state2 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_484_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_i_fu_588_p2.read()));
}

void hls_twoIsotropicFilt::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void hls_twoIsotropicFilt::thread_col_fu_630_p2() {
    col_fu_630_p2 = (!col_i_mid2_fu_495_p3.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(col_i_mid2_fu_495_p3.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void hls_twoIsotropicFilt::thread_col_i_mid2_fu_495_p3() {
    col_i_mid2_fu_495_p3 = (!tmp_10_i_fu_479_p2.read()[0].is_01())? sc_lv<16>(): ((tmp_10_i_fu_479_p2.read()[0].to_bool())? col_i_reg_389.read(): ap_const_lv16_0);
}

void hls_twoIsotropicFilt::thread_exitcond_flatten_fu_484_p2() {
    exitcond_flatten_fu_484_p2 = (!indvar_flatten_cast_fu_471_p1.read().is_01() || !bound_reg_1016.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_cast_fu_471_p1.read() == bound_reg_1016.read());
}

void hls_twoIsotropicFilt::thread_filt_out1_V_fu_851_p1() {
    filt_out1_V_fu_851_p1 = grp_hls_isotropic_kernel_fu_424_ap_return.read().range(12-1, 0);
}

void hls_twoIsotropicFilt::thread_grp_fu_867_p0() {
    grp_fu_867_p0 =  (sc_lv<16>) (grp_fu_867_p00.read());
}

void hls_twoIsotropicFilt::thread_grp_fu_867_p00() {
    grp_fu_867_p00 = esl_zext<17,16>(height.read());
}

void hls_twoIsotropicFilt::thread_grp_fu_867_p1() {
    grp_fu_867_p1 =  (sc_lv<3>) (ap_const_lv17_2);
}

void hls_twoIsotropicFilt::thread_grp_fu_867_p2() {
    grp_fu_867_p2 =  (sc_lv<17>) (grp_fu_867_p20.read());
}

void hls_twoIsotropicFilt::thread_grp_fu_867_p20() {
    grp_fu_867_p20 = esl_zext<34,17>(tmp_5_i_fu_461_p2.read());
}

void hls_twoIsotropicFilt::thread_grp_hls_isotropic_kernel_fu_424_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001_ignoreCallOp157.read(), ap_const_boolean_0))) {
        grp_hls_isotropic_kernel_fu_424_ap_ce = ap_const_logic_1;
    } else {
        grp_hls_isotropic_kernel_fu_424_ap_ce = ap_const_logic_0;
    }
}

void hls_twoIsotropicFilt::thread_height_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        height_out_blk_n = height_out_full_n.read();
    } else {
        height_out_blk_n = ap_const_logic_1;
    }
}

void hls_twoIsotropicFilt::thread_height_out_din() {
    height_out_din = height.read();
}

void hls_twoIsotropicFilt::thread_height_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, height_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, width_out_full_n.read())))) {
        height_out_write = ap_const_logic_1;
    } else {
        height_out_write = ap_const_logic_0;
    }
}

void hls_twoIsotropicFilt::thread_icmp1_fu_537_p2() {
    icmp1_fu_537_p2 = (!tmp_fu_527_p4.read().is_01() || !ap_const_lv15_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_527_p4.read() != ap_const_lv15_0);
}

void hls_twoIsotropicFilt::thread_icmp2_fu_553_p2() {
    icmp2_fu_553_p2 = (!tmp_1_fu_543_p4.read().is_01() || !ap_const_lv15_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_1_fu_543_p4.read() != ap_const_lv15_0);
}

void hls_twoIsotropicFilt::thread_icmp_fu_612_p2() {
    icmp_fu_612_p2 = (!tmp_2_fu_602_p4.read().is_01() || !ap_const_lv15_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_2_fu_602_p4.read() != ap_const_lv15_0);
}

void hls_twoIsotropicFilt::thread_indvar_flatten_cast_fu_471_p1() {
    indvar_flatten_cast_fu_471_p1 = esl_zext<34,33>(indvar_flatten_reg_367.read());
}

void hls_twoIsotropicFilt::thread_indvar_flatten_next_fu_489_p2() {
    indvar_flatten_next_fu_489_p2 = (!indvar_flatten_reg_367.read().is_01() || !ap_const_lv33_1.is_01())? sc_lv<33>(): (sc_biguint<33>(indvar_flatten_reg_367.read()) + sc_biguint<33>(ap_const_lv33_1));
}

void hls_twoIsotropicFilt::thread_inp1_img_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_484_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_i_fu_588_p2.read()))) {
        inp1_img_TDATA_blk_n = inp1_img_V_data_V_0_state.read()[0];
    } else {
        inp1_img_TDATA_blk_n = ap_const_logic_1;
    }
}

void hls_twoIsotropicFilt::thread_inp1_img_TREADY() {
    inp1_img_TREADY = inp1_img_V_last_V_0_state.read()[1];
}

void hls_twoIsotropicFilt::thread_inp1_img_V_data_V_0_ack_in() {
    inp1_img_V_data_V_0_ack_in = inp1_img_V_data_V_0_state.read()[1];
}

void hls_twoIsotropicFilt::thread_inp1_img_V_data_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op81_read_state2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        inp1_img_V_data_V_0_ack_out = ap_const_logic_1;
    } else {
        inp1_img_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void hls_twoIsotropicFilt::thread_inp1_img_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, inp1_img_V_data_V_0_sel.read())) {
        inp1_img_V_data_V_0_data_out = inp1_img_V_data_V_0_payload_B.read();
    } else {
        inp1_img_V_data_V_0_data_out = inp1_img_V_data_V_0_payload_A.read();
    }
}

void hls_twoIsotropicFilt::thread_inp1_img_V_data_V_0_load_A() {
    inp1_img_V_data_V_0_load_A = (inp1_img_V_data_V_0_state_cmp_full.read() & ~inp1_img_V_data_V_0_sel_wr.read());
}

void hls_twoIsotropicFilt::thread_inp1_img_V_data_V_0_load_B() {
    inp1_img_V_data_V_0_load_B = (inp1_img_V_data_V_0_sel_wr.read() & inp1_img_V_data_V_0_state_cmp_full.read());
}

void hls_twoIsotropicFilt::thread_inp1_img_V_data_V_0_sel() {
    inp1_img_V_data_V_0_sel = inp1_img_V_data_V_0_sel_rd.read();
}

void hls_twoIsotropicFilt::thread_inp1_img_V_data_V_0_state_cmp_full() {
    inp1_img_V_data_V_0_state_cmp_full =  (sc_logic) ((!inp1_img_V_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(inp1_img_V_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void hls_twoIsotropicFilt::thread_inp1_img_V_data_V_0_vld_in() {
    inp1_img_V_data_V_0_vld_in = inp1_img_TVALID.read();
}

void hls_twoIsotropicFilt::thread_inp1_img_V_data_V_0_vld_out() {
    inp1_img_V_data_V_0_vld_out = inp1_img_V_data_V_0_state.read()[0];
}

void hls_twoIsotropicFilt::thread_inp1_img_V_last_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op81_read_state2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        inp1_img_V_last_V_0_ack_out = ap_const_logic_1;
    } else {
        inp1_img_V_last_V_0_ack_out = ap_const_logic_0;
    }
}

void hls_twoIsotropicFilt::thread_inp1_img_V_last_V_0_vld_in() {
    inp1_img_V_last_V_0_vld_in = inp1_img_TVALID.read();
}

void hls_twoIsotropicFilt::thread_inp2_img_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_484_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_i_fu_588_p2.read()))) {
        inp2_img_TDATA_blk_n = inp2_img_V_data_V_0_state.read()[0];
    } else {
        inp2_img_TDATA_blk_n = ap_const_logic_1;
    }
}

void hls_twoIsotropicFilt::thread_inp2_img_TREADY() {
    inp2_img_TREADY = inp2_img_V_last_V_0_state.read()[1];
}

void hls_twoIsotropicFilt::thread_inp2_img_V_data_V_0_ack_in() {
    inp2_img_V_data_V_0_ack_in = inp2_img_V_data_V_0_state.read()[1];
}

void hls_twoIsotropicFilt::thread_inp2_img_V_data_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op83_read_state2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        inp2_img_V_data_V_0_ack_out = ap_const_logic_1;
    } else {
        inp2_img_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void hls_twoIsotropicFilt::thread_inp2_img_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, inp2_img_V_data_V_0_sel.read())) {
        inp2_img_V_data_V_0_data_out = inp2_img_V_data_V_0_payload_B.read();
    } else {
        inp2_img_V_data_V_0_data_out = inp2_img_V_data_V_0_payload_A.read();
    }
}

void hls_twoIsotropicFilt::thread_inp2_img_V_data_V_0_load_A() {
    inp2_img_V_data_V_0_load_A = (inp2_img_V_data_V_0_state_cmp_full.read() & ~inp2_img_V_data_V_0_sel_wr.read());
}

void hls_twoIsotropicFilt::thread_inp2_img_V_data_V_0_load_B() {
    inp2_img_V_data_V_0_load_B = (inp2_img_V_data_V_0_sel_wr.read() & inp2_img_V_data_V_0_state_cmp_full.read());
}

void hls_twoIsotropicFilt::thread_inp2_img_V_data_V_0_sel() {
    inp2_img_V_data_V_0_sel = inp2_img_V_data_V_0_sel_rd.read();
}

void hls_twoIsotropicFilt::thread_inp2_img_V_data_V_0_state_cmp_full() {
    inp2_img_V_data_V_0_state_cmp_full =  (sc_logic) ((!inp2_img_V_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(inp2_img_V_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void hls_twoIsotropicFilt::thread_inp2_img_V_data_V_0_vld_in() {
    inp2_img_V_data_V_0_vld_in = inp2_img_TVALID.read();
}

void hls_twoIsotropicFilt::thread_inp2_img_V_data_V_0_vld_out() {
    inp2_img_V_data_V_0_vld_out = inp2_img_V_data_V_0_state.read()[0];
}

void hls_twoIsotropicFilt::thread_inp2_img_V_last_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op83_read_state2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        inp2_img_V_last_V_0_ack_out = ap_const_logic_1;
    } else {
        inp2_img_V_last_V_0_ack_out = ap_const_logic_0;
    }
}

void hls_twoIsotropicFilt::thread_inp2_img_V_last_V_0_vld_in() {
    inp2_img_V_last_V_0_vld_in = inp2_img_TVALID.read();
}

void hls_twoIsotropicFilt::thread_internal_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void hls_twoIsotropicFilt::thread_lpf_lines_buffer_V_1_address0() {
    lpf_lines_buffer_V_1_address0 =  (sc_lv<9>) (tmp_13_i_fu_580_p1.read());
}

void hls_twoIsotropicFilt::thread_lpf_lines_buffer_V_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        lpf_lines_buffer_V_1_ce0 = ap_const_logic_1;
    } else {
        lpf_lines_buffer_V_1_ce0 = ap_const_logic_0;
    }
}

void hls_twoIsotropicFilt::thread_lpf_lines_buffer_V_1_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        lpf_lines_buffer_V_1_ce1 = ap_const_logic_1;
    } else {
        lpf_lines_buffer_V_1_ce1 = ap_const_logic_0;
    }
}

void hls_twoIsotropicFilt::thread_lpf_lines_buffer_V_1_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1021.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_12_i_reg_1040.read()))) {
        lpf_lines_buffer_V_1_we1 = ap_const_logic_1;
    } else {
        lpf_lines_buffer_V_1_we1 = ap_const_logic_0;
    }
}

void hls_twoIsotropicFilt::thread_lpf_lines_buffer_V_2_address0() {
    lpf_lines_buffer_V_2_address0 =  (sc_lv<9>) (tmp_13_i_fu_580_p1.read());
}

void hls_twoIsotropicFilt::thread_lpf_lines_buffer_V_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        lpf_lines_buffer_V_2_ce0 = ap_const_logic_1;
    } else {
        lpf_lines_buffer_V_2_ce0 = ap_const_logic_0;
    }
}

void hls_twoIsotropicFilt::thread_lpf_lines_buffer_V_2_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        lpf_lines_buffer_V_2_ce1 = ap_const_logic_1;
    } else {
        lpf_lines_buffer_V_2_ce1 = ap_const_logic_0;
    }
}

void hls_twoIsotropicFilt::thread_lpf_lines_buffer_V_2_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1021.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_12_i_reg_1040.read()))) {
        lpf_lines_buffer_V_2_we1 = ap_const_logic_1;
    } else {
        lpf_lines_buffer_V_2_we1 = ap_const_logic_0;
    }
}

void hls_twoIsotropicFilt::thread_lpf_lines_buffer_V_3_address0() {
    lpf_lines_buffer_V_3_address0 =  (sc_lv<9>) (tmp_13_i_fu_580_p1.read());
}

void hls_twoIsotropicFilt::thread_lpf_lines_buffer_V_3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        lpf_lines_buffer_V_3_ce0 = ap_const_logic_1;
    } else {
        lpf_lines_buffer_V_3_ce0 = ap_const_logic_0;
    }
}

void hls_twoIsotropicFilt::thread_lpf_lines_buffer_V_3_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        lpf_lines_buffer_V_3_ce1 = ap_const_logic_1;
    } else {
        lpf_lines_buffer_V_3_ce1 = ap_const_logic_0;
    }
}

void hls_twoIsotropicFilt::thread_lpf_lines_buffer_V_3_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1021.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_12_i_reg_1040.read()))) {
        lpf_lines_buffer_V_3_we1 = ap_const_logic_1;
    } else {
        lpf_lines_buffer_V_3_we1 = ap_const_logic_0;
    }
}

void hls_twoIsotropicFilt::thread_lpf_lines_buffer_V_4_address0() {
    lpf_lines_buffer_V_4_address0 =  (sc_lv<9>) (tmp_13_i_fu_580_p1.read());
}

void hls_twoIsotropicFilt::thread_lpf_lines_buffer_V_4_address1() {
    lpf_lines_buffer_V_4_address1 =  (sc_lv<9>) (tmp_15_i_fu_822_p1.read());
}

void hls_twoIsotropicFilt::thread_lpf_lines_buffer_V_4_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        lpf_lines_buffer_V_4_ce0 = ap_const_logic_1;
    } else {
        lpf_lines_buffer_V_4_ce0 = ap_const_logic_0;
    }
}

void hls_twoIsotropicFilt::thread_lpf_lines_buffer_V_4_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        lpf_lines_buffer_V_4_ce1 = ap_const_logic_1;
    } else {
        lpf_lines_buffer_V_4_ce1 = ap_const_logic_0;
    }
}

void hls_twoIsotropicFilt::thread_lpf_lines_buffer_V_4_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1021.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_i_reg_1067.read()))) {
        lpf_lines_buffer_V_4_we1 = ap_const_logic_1;
    } else {
        lpf_lines_buffer_V_4_we1 = ap_const_logic_0;
    }
}

void hls_twoIsotropicFilt::thread_or_cond_i_fu_588_p2() {
    or_cond_i_fu_588_p2 = (tmp_12_i_fu_575_p2.read() & tmp_8_i_mid2_fu_519_p3.read());
}

void hls_twoIsotropicFilt::thread_out1_img_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_17_i_reg_1081_pp0_iter2_reg.read()))) {
        out1_img_V_blk_n = out1_img_V_full_n.read();
    } else {
        out1_img_V_blk_n = ap_const_logic_1;
    }
}

void hls_twoIsotropicFilt::thread_out1_img_V_din() {
    out1_img_V_din = ap_phi_mux_p_1_i_phi_fu_404_p4.read();
}

void hls_twoIsotropicFilt::thread_out1_img_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_17_i_reg_1081_pp0_iter2_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        out1_img_V_write = ap_const_logic_1;
    } else {
        out1_img_V_write = ap_const_logic_0;
    }
}

void hls_twoIsotropicFilt::thread_out2_img_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_17_i_reg_1081_pp0_iter2_reg.read()))) {
        out2_img_V_blk_n = out2_img_V_full_n.read();
    } else {
        out2_img_V_blk_n = ap_const_logic_1;
    }
}

void hls_twoIsotropicFilt::thread_out2_img_V_din() {
    out2_img_V_din = ap_phi_mux_p_2_i_phi_fu_416_p4.read();
}

void hls_twoIsotropicFilt::thread_out2_img_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_17_i_reg_1081_pp0_iter2_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        out2_img_V_write = ap_const_logic_1;
    } else {
        out2_img_V_write = ap_const_logic_0;
    }
}

void hls_twoIsotropicFilt::thread_p_Result_s_fu_818_p1() {
    p_Result_s_fu_818_p1 = esl_zext<24,20>(tmp_14_i_fu_810_p3.read());
}

void hls_twoIsotropicFilt::thread_pixels_0_V_fu_771_p1() {
    pixels_0_V_fu_771_p1 = esl_zext<24,20>(lpf_lines_buffer_V_1_q0.read());
}

void hls_twoIsotropicFilt::thread_pixels_1_V_fu_775_p1() {
    pixels_1_V_fu_775_p1 = esl_zext<24,20>(lpf_lines_buffer_V_2_q0.read());
}

void hls_twoIsotropicFilt::thread_pixels_2_V_fu_779_p1() {
    pixels_2_V_fu_779_p1 = esl_zext<24,20>(lpf_lines_buffer_V_3_q0.read());
}

void hls_twoIsotropicFilt::thread_pixels_3_V_fu_783_p1() {
    pixels_3_V_fu_783_p1 = esl_zext<24,20>(lpf_lines_buffer_V_4_q0.read());
}

void hls_twoIsotropicFilt::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void hls_twoIsotropicFilt::thread_row_fu_503_p2() {
    row_fu_503_p2 = (!row_i_reg_378.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(row_i_reg_378.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void hls_twoIsotropicFilt::thread_row_i_mid2_fu_567_p3() {
    row_i_mid2_fu_567_p3 = (!tmp_10_i_fu_479_p2.read()[0].is_01())? sc_lv<16>(): ((tmp_10_i_fu_479_p2.read()[0].to_bool())? row_i_reg_378.read(): row_fu_503_p2.read());
}

void hls_twoIsotropicFilt::thread_start_out() {
    start_out = real_start.read();
}

void hls_twoIsotropicFilt::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void hls_twoIsotropicFilt::thread_tmp_10_i_fu_479_p2() {
    tmp_10_i_fu_479_p2 = (!tmp_1_cast_i_fu_475_p1.read().is_01() || !tmp_5_i_reg_1011.read().is_01())? sc_lv<1>(): (sc_biguint<17>(tmp_1_cast_i_fu_475_p1.read()) < sc_biguint<17>(tmp_5_i_reg_1011.read()));
}

void hls_twoIsotropicFilt::thread_tmp_12_i_fu_575_p2() {
    tmp_12_i_fu_575_p2 = (!col_i_mid2_fu_495_p3.read().is_01() || !width.read().is_01())? sc_lv<1>(): (sc_biguint<16>(col_i_mid2_fu_495_p3.read()) < sc_biguint<16>(width.read()));
}

void hls_twoIsotropicFilt::thread_tmp_13_i_fu_580_p1() {
    tmp_13_i_fu_580_p1 = esl_zext<64,16>(col_i_mid2_fu_495_p3.read());
}

void hls_twoIsotropicFilt::thread_tmp_14_i_fu_810_p3() {
    tmp_14_i_fu_810_p3 = esl_concat<8,12>(tmp_data_V_1_reg_1076.read(), tmp_V_1_trunc_i_fu_807_p1.read());
}

void hls_twoIsotropicFilt::thread_tmp_15_i_fu_822_p1() {
    tmp_15_i_fu_822_p1 = esl_zext<64,16>(col_i_mid2_reg_1030.read());
}

void hls_twoIsotropicFilt::thread_tmp_17_i_fu_618_p2() {
    tmp_17_i_fu_618_p2 = (tmp_9_i_mid2_fu_559_p3.read() & icmp_fu_612_p2.read());
}

void hls_twoIsotropicFilt::thread_tmp_19_i_fu_624_p2() {
    tmp_19_i_fu_624_p2 = (or_cond_i_fu_588_p2.read() & tmp_17_i_fu_618_p2.read());
}

void hls_twoIsotropicFilt::thread_tmp_1_cast_i_fu_475_p1() {
    tmp_1_cast_i_fu_475_p1 = esl_zext<17,16>(col_i_reg_389.read());
}

void hls_twoIsotropicFilt::thread_tmp_1_fu_543_p4() {
    tmp_1_fu_543_p4 = row_i_reg_378.read().range(15, 1);
}

void hls_twoIsotropicFilt::thread_tmp_2_fu_602_p4() {
    tmp_2_fu_602_p4 = col_i_mid2_fu_495_p3.read().range(15, 1);
}

void hls_twoIsotropicFilt::thread_tmp_4_cast_i_fu_457_p1() {
    tmp_4_cast_i_fu_457_p1 = esl_zext<17,16>(width.read());
}

void hls_twoIsotropicFilt::thread_tmp_5_i_fu_461_p2() {
    tmp_5_i_fu_461_p2 = (!tmp_4_cast_i_fu_457_p1.read().is_01() || !ap_const_lv17_2.is_01())? sc_lv<17>(): (sc_biguint<17>(tmp_4_cast_i_fu_457_p1.read()) + sc_biguint<17>(ap_const_lv17_2));
}

void hls_twoIsotropicFilt::thread_tmp_8_i_fu_514_p2() {
    tmp_8_i_fu_514_p2 = (!row_i_reg_378.read().is_01() || !height.read().is_01())? sc_lv<1>(): (sc_biguint<16>(row_i_reg_378.read()) < sc_biguint<16>(height.read()));
}

void hls_twoIsotropicFilt::thread_tmp_8_i_mid1_fu_509_p2() {
    tmp_8_i_mid1_fu_509_p2 = (!row_fu_503_p2.read().is_01() || !height.read().is_01())? sc_lv<1>(): (sc_biguint<16>(row_fu_503_p2.read()) < sc_biguint<16>(height.read()));
}

void hls_twoIsotropicFilt::thread_tmp_8_i_mid2_fu_519_p3() {
    tmp_8_i_mid2_fu_519_p3 = (!tmp_10_i_fu_479_p2.read()[0].is_01())? sc_lv<1>(): ((tmp_10_i_fu_479_p2.read()[0].to_bool())? tmp_8_i_fu_514_p2.read(): tmp_8_i_mid1_fu_509_p2.read());
}

void hls_twoIsotropicFilt::thread_tmp_9_i_mid2_fu_559_p3() {
    tmp_9_i_mid2_fu_559_p3 = (!tmp_10_i_fu_479_p2.read()[0].is_01())? sc_lv<1>(): ((tmp_10_i_fu_479_p2.read()[0].to_bool())? icmp2_fu_553_p2.read(): icmp1_fu_537_p2.read());
}

void hls_twoIsotropicFilt::thread_tmp_V_1_trunc_i_fu_807_p1() {
    tmp_V_1_trunc_i_fu_807_p1 = esl_zext<12,8>(tmp_data_V_reg_1071.read());
}

void hls_twoIsotropicFilt::thread_tmp_fu_527_p4() {
    tmp_fu_527_p4 = row_fu_503_p2.read().range(15, 1);
}

void hls_twoIsotropicFilt::thread_width_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        width_out_blk_n = width_out_full_n.read();
    } else {
        width_out_blk_n = ap_const_logic_1;
    }
}

void hls_twoIsotropicFilt::thread_width_out_din() {
    width_out_din = width.read();
}

void hls_twoIsotropicFilt::thread_width_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, height_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, width_out_full_n.read())))) {
        width_out_write = ap_const_logic_1;
    } else {
        width_out_write = ap_const_logic_0;
    }
}

void hls_twoIsotropicFilt::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, height_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, width_out_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

