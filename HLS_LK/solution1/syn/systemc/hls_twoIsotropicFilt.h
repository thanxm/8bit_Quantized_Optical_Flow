// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _hls_twoIsotropicFilt_HH_
#define _hls_twoIsotropicFilt_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "hls_isotropic_kernel.h"
#include "hls_LK_am_addmul_16ns_3ns_17ns_34_1_1.h"
#include "hls_twoIsotropicFilt_lpf_lines_buffer_V_1.h"

namespace ap_rtl {

struct hls_twoIsotropicFilt : public sc_module {
    // Port declarations 32
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<8> > inp1_img_TDATA;
    sc_in< sc_logic > inp1_img_TVALID;
    sc_out< sc_logic > inp1_img_TREADY;
    sc_in< sc_lv<1> > inp1_img_TLAST;
    sc_in< sc_lv<8> > inp2_img_TDATA;
    sc_in< sc_logic > inp2_img_TVALID;
    sc_out< sc_logic > inp2_img_TREADY;
    sc_in< sc_lv<1> > inp2_img_TLAST;
    sc_out< sc_lv<12> > out1_img_V_din;
    sc_in< sc_logic > out1_img_V_full_n;
    sc_out< sc_logic > out1_img_V_write;
    sc_out< sc_lv<12> > out2_img_V_din;
    sc_in< sc_logic > out2_img_V_full_n;
    sc_out< sc_logic > out2_img_V_write;
    sc_in< sc_lv<16> > height;
    sc_in< sc_lv<16> > width;
    sc_out< sc_lv<16> > height_out_din;
    sc_in< sc_logic > height_out_full_n;
    sc_out< sc_logic > height_out_write;
    sc_out< sc_lv<16> > width_out_din;
    sc_in< sc_logic > width_out_full_n;
    sc_out< sc_logic > width_out_write;


    // Module declarations
    hls_twoIsotropicFilt(sc_module_name name);
    SC_HAS_PROCESS(hls_twoIsotropicFilt);

    ~hls_twoIsotropicFilt();

    sc_trace_file* mVcdFile;

    hls_twoIsotropicFilt_lpf_lines_buffer_V_1* lpf_lines_buffer_V_1_U;
    hls_twoIsotropicFilt_lpf_lines_buffer_V_1* lpf_lines_buffer_V_2_U;
    hls_twoIsotropicFilt_lpf_lines_buffer_V_1* lpf_lines_buffer_V_3_U;
    hls_twoIsotropicFilt_lpf_lines_buffer_V_1* lpf_lines_buffer_V_4_U;
    hls_isotropic_kernel* grp_hls_isotropic_kernel_fu_424;
    hls_LK_am_addmul_16ns_3ns_17ns_34_1_1<1,1,16,3,17,34>* hls_LK_am_addmul_16ns_3ns_17ns_34_1_1_U26;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_lv<8> > inp1_img_V_data_V_0_data_out;
    sc_signal< sc_logic > inp1_img_V_data_V_0_vld_in;
    sc_signal< sc_logic > inp1_img_V_data_V_0_vld_out;
    sc_signal< sc_logic > inp1_img_V_data_V_0_ack_in;
    sc_signal< sc_logic > inp1_img_V_data_V_0_ack_out;
    sc_signal< sc_lv<8> > inp1_img_V_data_V_0_payload_A;
    sc_signal< sc_lv<8> > inp1_img_V_data_V_0_payload_B;
    sc_signal< sc_logic > inp1_img_V_data_V_0_sel_rd;
    sc_signal< sc_logic > inp1_img_V_data_V_0_sel_wr;
    sc_signal< sc_logic > inp1_img_V_data_V_0_sel;
    sc_signal< sc_logic > inp1_img_V_data_V_0_load_A;
    sc_signal< sc_logic > inp1_img_V_data_V_0_load_B;
    sc_signal< sc_lv<2> > inp1_img_V_data_V_0_state;
    sc_signal< sc_logic > inp1_img_V_data_V_0_state_cmp_full;
    sc_signal< sc_logic > inp1_img_V_last_V_0_vld_in;
    sc_signal< sc_logic > inp1_img_V_last_V_0_ack_out;
    sc_signal< sc_lv<2> > inp1_img_V_last_V_0_state;
    sc_signal< sc_lv<8> > inp2_img_V_data_V_0_data_out;
    sc_signal< sc_logic > inp2_img_V_data_V_0_vld_in;
    sc_signal< sc_logic > inp2_img_V_data_V_0_vld_out;
    sc_signal< sc_logic > inp2_img_V_data_V_0_ack_in;
    sc_signal< sc_logic > inp2_img_V_data_V_0_ack_out;
    sc_signal< sc_lv<8> > inp2_img_V_data_V_0_payload_A;
    sc_signal< sc_lv<8> > inp2_img_V_data_V_0_payload_B;
    sc_signal< sc_logic > inp2_img_V_data_V_0_sel_rd;
    sc_signal< sc_logic > inp2_img_V_data_V_0_sel_wr;
    sc_signal< sc_logic > inp2_img_V_data_V_0_sel;
    sc_signal< sc_logic > inp2_img_V_data_V_0_load_A;
    sc_signal< sc_logic > inp2_img_V_data_V_0_load_B;
    sc_signal< sc_lv<2> > inp2_img_V_data_V_0_state;
    sc_signal< sc_logic > inp2_img_V_data_V_0_state_cmp_full;
    sc_signal< sc_logic > inp2_img_V_last_V_0_vld_in;
    sc_signal< sc_logic > inp2_img_V_last_V_0_ack_out;
    sc_signal< sc_lv<2> > inp2_img_V_last_V_0_state;
    sc_signal< sc_lv<9> > lpf_lines_buffer_V_1_address0;
    sc_signal< sc_logic > lpf_lines_buffer_V_1_ce0;
    sc_signal< sc_lv<20> > lpf_lines_buffer_V_1_q0;
    sc_signal< sc_logic > lpf_lines_buffer_V_1_ce1;
    sc_signal< sc_logic > lpf_lines_buffer_V_1_we1;
    sc_signal< sc_lv<9> > lpf_lines_buffer_V_2_address0;
    sc_signal< sc_logic > lpf_lines_buffer_V_2_ce0;
    sc_signal< sc_lv<20> > lpf_lines_buffer_V_2_q0;
    sc_signal< sc_logic > lpf_lines_buffer_V_2_ce1;
    sc_signal< sc_logic > lpf_lines_buffer_V_2_we1;
    sc_signal< sc_lv<9> > lpf_lines_buffer_V_3_address0;
    sc_signal< sc_logic > lpf_lines_buffer_V_3_ce0;
    sc_signal< sc_lv<20> > lpf_lines_buffer_V_3_q0;
    sc_signal< sc_logic > lpf_lines_buffer_V_3_ce1;
    sc_signal< sc_logic > lpf_lines_buffer_V_3_we1;
    sc_signal< sc_lv<9> > lpf_lines_buffer_V_4_address0;
    sc_signal< sc_logic > lpf_lines_buffer_V_4_ce0;
    sc_signal< sc_lv<20> > lpf_lines_buffer_V_4_q0;
    sc_signal< sc_lv<9> > lpf_lines_buffer_V_4_address1;
    sc_signal< sc_logic > lpf_lines_buffer_V_4_ce1;
    sc_signal< sc_logic > lpf_lines_buffer_V_4_we1;
    sc_signal< sc_logic > inp1_img_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_484_p2;
    sc_signal< sc_lv<1> > or_cond_i_fu_588_p2;
    sc_signal< sc_logic > inp2_img_TDATA_blk_n;
    sc_signal< sc_logic > out1_img_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<1> > tmp_17_i_reg_1081;
    sc_signal< sc_lv<1> > tmp_17_i_reg_1081_pp0_iter2_reg;
    sc_signal< sc_logic > out2_img_V_blk_n;
    sc_signal< sc_logic > height_out_blk_n;
    sc_signal< sc_logic > width_out_blk_n;
    sc_signal< sc_lv<33> > indvar_flatten_reg_367;
    sc_signal< sc_lv<16> > row_i_reg_378;
    sc_signal< sc_lv<16> > col_i_reg_389;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<17> > tmp_5_i_fu_461_p2;
    sc_signal< sc_lv<17> > tmp_5_i_reg_1011;
    sc_signal< sc_lv<34> > grp_fu_867_p3;
    sc_signal< sc_lv<34> > bound_reg_1016;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_1021;
    sc_signal< bool > ap_predicate_op81_read_state2;
    sc_signal< bool > ap_predicate_op83_read_state2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_1021_pp0_iter1_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_1021_pp0_iter2_reg;
    sc_signal< sc_lv<33> > indvar_flatten_next_fu_489_p2;
    sc_signal< sc_lv<16> > col_i_mid2_fu_495_p3;
    sc_signal< sc_lv<16> > col_i_mid2_reg_1030;
    sc_signal< sc_lv<16> > row_i_mid2_fu_567_p3;
    sc_signal< sc_lv<1> > tmp_12_i_fu_575_p2;
    sc_signal< sc_lv<1> > tmp_12_i_reg_1040;
    sc_signal< sc_lv<9> > lpf_lines_buffer_V_1_1_reg_1044;
    sc_signal< sc_lv<9> > lpf_lines_buffer_V_2_1_reg_1050;
    sc_signal< sc_lv<9> > lpf_lines_buffer_V_3_1_reg_1056;
    sc_signal< sc_lv<1> > or_cond_i_reg_1067;
    sc_signal< sc_lv<8> > tmp_data_V_reg_1071;
    sc_signal< sc_lv<8> > tmp_data_V_1_reg_1076;
    sc_signal< sc_lv<1> > tmp_17_i_fu_618_p2;
    sc_signal< sc_lv<1> > tmp_17_i_reg_1081_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_19_i_fu_624_p2;
    sc_signal< sc_lv<1> > tmp_19_i_reg_1085;
    sc_signal< sc_lv<1> > tmp_19_i_reg_1085_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_19_i_reg_1085_pp0_iter2_reg;
    sc_signal< sc_lv<16> > col_fu_630_p2;
    sc_signal< sc_lv<24> > window_0_V_load_reg_1094;
    sc_signal< sc_lv<24> > window_1_V_load_reg_1099;
    sc_signal< sc_lv<24> > window_2_V_load_reg_1104;
    sc_signal< sc_lv<24> > window_22_V_load_reg_1109;
    sc_signal< sc_lv<24> > window_5_V_load_reg_1114;
    sc_signal< sc_lv<24> > window_6_V_load_reg_1119;
    sc_signal< sc_lv<24> > window_7_V_load_reg_1124;
    sc_signal< sc_lv<24> > window_21_V_load_reg_1129;
    sc_signal< sc_lv<24> > window_10_V_load_reg_1134;
    sc_signal< sc_lv<24> > window_11_V_load_reg_1139;
    sc_signal< sc_lv<24> > window_12_V_load_reg_1144;
    sc_signal< sc_lv<24> > window_20_V_load_reg_1149;
    sc_signal< sc_lv<24> > window_15_V_load_reg_1154;
    sc_signal< sc_lv<24> > window_16_V_load_reg_1159;
    sc_signal< sc_lv<24> > window_17_V_load_reg_1164;
    sc_signal< sc_lv<24> > window_23_V_1_reg_1169;
    sc_signal< sc_lv<24> > window_3_V_1_reg_1174;
    sc_signal< sc_lv<24> > window_8_V_1_reg_1179;
    sc_signal< sc_lv<24> > window_13_V_1_reg_1184;
    sc_signal< sc_lv<24> > window_18_V_1_reg_1189;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter1_state3;
    sc_signal< sc_lv<24> > grp_hls_isotropic_kernel_fu_424_ap_return;
    sc_signal< sc_logic > grp_hls_isotropic_kernel_fu_424_ap_ce;
    sc_signal< bool > ap_predicate_op157_call_state4;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0_ignore_call5;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1_ignore_call5;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2_ignore_call5;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3_ignore_call5;
    sc_signal< bool > ap_block_pp0_stage0_11001_ignoreCallOp157;
    sc_signal< sc_lv<12> > ap_phi_mux_p_1_i_phi_fu_404_p4;
    sc_signal< sc_lv<12> > filt_out1_V_fu_851_p1;
    sc_signal< sc_lv<12> > ap_phi_reg_pp0_iter3_p_1_i_reg_400;
    sc_signal< sc_lv<12> > ap_phi_reg_pp0_iter0_p_1_i_reg_400;
    sc_signal< sc_lv<12> > ap_phi_reg_pp0_iter1_p_1_i_reg_400;
    sc_signal< sc_lv<12> > ap_phi_reg_pp0_iter2_p_1_i_reg_400;
    sc_signal< sc_lv<12> > ap_phi_mux_p_2_i_phi_fu_416_p4;
    sc_signal< sc_lv<12> > ap_phi_reg_pp0_iter3_p_2_i_reg_412;
    sc_signal< sc_lv<12> > ap_phi_reg_pp0_iter0_p_2_i_reg_412;
    sc_signal< sc_lv<12> > ap_phi_reg_pp0_iter1_p_2_i_reg_412;
    sc_signal< sc_lv<12> > ap_phi_reg_pp0_iter2_p_2_i_reg_412;
    sc_signal< sc_lv<64> > tmp_13_i_fu_580_p1;
    sc_signal< sc_lv<64> > tmp_15_i_fu_822_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<24> > window_0_V_fu_150;
    sc_signal< sc_lv<24> > window_1_V_fu_154;
    sc_signal< sc_lv<24> > window_2_V_fu_158;
    sc_signal< sc_lv<24> > window_22_V_fu_162;
    sc_signal< sc_lv<24> > window_5_V_fu_166;
    sc_signal< sc_lv<24> > window_6_V_fu_170;
    sc_signal< sc_lv<24> > window_7_V_fu_174;
    sc_signal< sc_lv<24> > window_21_V_fu_178;
    sc_signal< sc_lv<24> > window_10_V_fu_182;
    sc_signal< sc_lv<24> > window_11_V_fu_186;
    sc_signal< sc_lv<24> > window_12_V_fu_190;
    sc_signal< sc_lv<24> > window_20_V_fu_194;
    sc_signal< sc_lv<24> > window_15_V_fu_198;
    sc_signal< sc_lv<24> > window_16_V_fu_202;
    sc_signal< sc_lv<24> > window_17_V_fu_206;
    sc_signal< sc_lv<24> > window_23_V_fu_210;
    sc_signal< sc_lv<24> > p_Result_s_fu_818_p1;
    sc_signal< sc_lv<24> > window_3_V_fu_214;
    sc_signal< sc_lv<24> > pixels_0_V_fu_771_p1;
    sc_signal< sc_lv<24> > window_8_V_fu_218;
    sc_signal< sc_lv<24> > pixels_1_V_fu_775_p1;
    sc_signal< sc_lv<24> > window_13_V_fu_222;
    sc_signal< sc_lv<24> > pixels_2_V_fu_779_p1;
    sc_signal< sc_lv<24> > window_18_V_fu_226;
    sc_signal< sc_lv<24> > pixels_3_V_fu_783_p1;
    sc_signal< sc_lv<20> > tmp_14_i_fu_810_p3;
    sc_signal< sc_lv<17> > tmp_4_cast_i_fu_457_p1;
    sc_signal< sc_lv<17> > tmp_1_cast_i_fu_475_p1;
    sc_signal< sc_lv<34> > indvar_flatten_cast_fu_471_p1;
    sc_signal< sc_lv<1> > tmp_10_i_fu_479_p2;
    sc_signal< sc_lv<16> > row_fu_503_p2;
    sc_signal< sc_lv<1> > tmp_8_i_fu_514_p2;
    sc_signal< sc_lv<1> > tmp_8_i_mid1_fu_509_p2;
    sc_signal< sc_lv<15> > tmp_fu_527_p4;
    sc_signal< sc_lv<15> > tmp_1_fu_543_p4;
    sc_signal< sc_lv<1> > icmp2_fu_553_p2;
    sc_signal< sc_lv<1> > icmp1_fu_537_p2;
    sc_signal< sc_lv<1> > tmp_8_i_mid2_fu_519_p3;
    sc_signal< sc_lv<15> > tmp_2_fu_602_p4;
    sc_signal< sc_lv<1> > tmp_9_i_mid2_fu_559_p3;
    sc_signal< sc_lv<1> > icmp_fu_612_p2;
    sc_signal< sc_lv<12> > tmp_V_1_trunc_i_fu_807_p1;
    sc_signal< sc_lv<16> > grp_fu_867_p0;
    sc_signal< sc_lv<3> > grp_fu_867_p1;
    sc_signal< sc_lv<17> > grp_fu_867_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<17> > grp_fu_867_p00;
    sc_signal< sc_lv<34> > grp_fu_867_p20;
    sc_signal< bool > ap_condition_433;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state6;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<33> ap_const_lv33_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<17> ap_const_lv17_2;
    static const sc_lv<33> ap_const_lv33_1;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<15> ap_const_lv15_0;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_11001_ignoreCallOp157();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter0_ignore_call5();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter1_ignore_call5();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state4_pp0_stage0_iter2_ignore_call5();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state5_pp0_stage0_iter3_ignore_call5();
    void thread_ap_condition_433();
    void thread_ap_condition_pp0_exit_iter1_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_p_1_i_phi_fu_404_p4();
    void thread_ap_phi_mux_p_2_i_phi_fu_416_p4();
    void thread_ap_phi_reg_pp0_iter0_p_1_i_reg_400();
    void thread_ap_phi_reg_pp0_iter0_p_2_i_reg_412();
    void thread_ap_predicate_op157_call_state4();
    void thread_ap_predicate_op81_read_state2();
    void thread_ap_predicate_op83_read_state2();
    void thread_ap_ready();
    void thread_col_fu_630_p2();
    void thread_col_i_mid2_fu_495_p3();
    void thread_exitcond_flatten_fu_484_p2();
    void thread_filt_out1_V_fu_851_p1();
    void thread_grp_fu_867_p0();
    void thread_grp_fu_867_p00();
    void thread_grp_fu_867_p1();
    void thread_grp_fu_867_p2();
    void thread_grp_fu_867_p20();
    void thread_grp_hls_isotropic_kernel_fu_424_ap_ce();
    void thread_height_out_blk_n();
    void thread_height_out_din();
    void thread_height_out_write();
    void thread_icmp1_fu_537_p2();
    void thread_icmp2_fu_553_p2();
    void thread_icmp_fu_612_p2();
    void thread_indvar_flatten_cast_fu_471_p1();
    void thread_indvar_flatten_next_fu_489_p2();
    void thread_inp1_img_TDATA_blk_n();
    void thread_inp1_img_TREADY();
    void thread_inp1_img_V_data_V_0_ack_in();
    void thread_inp1_img_V_data_V_0_ack_out();
    void thread_inp1_img_V_data_V_0_data_out();
    void thread_inp1_img_V_data_V_0_load_A();
    void thread_inp1_img_V_data_V_0_load_B();
    void thread_inp1_img_V_data_V_0_sel();
    void thread_inp1_img_V_data_V_0_state_cmp_full();
    void thread_inp1_img_V_data_V_0_vld_in();
    void thread_inp1_img_V_data_V_0_vld_out();
    void thread_inp1_img_V_last_V_0_ack_out();
    void thread_inp1_img_V_last_V_0_vld_in();
    void thread_inp2_img_TDATA_blk_n();
    void thread_inp2_img_TREADY();
    void thread_inp2_img_V_data_V_0_ack_in();
    void thread_inp2_img_V_data_V_0_ack_out();
    void thread_inp2_img_V_data_V_0_data_out();
    void thread_inp2_img_V_data_V_0_load_A();
    void thread_inp2_img_V_data_V_0_load_B();
    void thread_inp2_img_V_data_V_0_sel();
    void thread_inp2_img_V_data_V_0_state_cmp_full();
    void thread_inp2_img_V_data_V_0_vld_in();
    void thread_inp2_img_V_data_V_0_vld_out();
    void thread_inp2_img_V_last_V_0_ack_out();
    void thread_inp2_img_V_last_V_0_vld_in();
    void thread_internal_ap_ready();
    void thread_lpf_lines_buffer_V_1_address0();
    void thread_lpf_lines_buffer_V_1_ce0();
    void thread_lpf_lines_buffer_V_1_ce1();
    void thread_lpf_lines_buffer_V_1_we1();
    void thread_lpf_lines_buffer_V_2_address0();
    void thread_lpf_lines_buffer_V_2_ce0();
    void thread_lpf_lines_buffer_V_2_ce1();
    void thread_lpf_lines_buffer_V_2_we1();
    void thread_lpf_lines_buffer_V_3_address0();
    void thread_lpf_lines_buffer_V_3_ce0();
    void thread_lpf_lines_buffer_V_3_ce1();
    void thread_lpf_lines_buffer_V_3_we1();
    void thread_lpf_lines_buffer_V_4_address0();
    void thread_lpf_lines_buffer_V_4_address1();
    void thread_lpf_lines_buffer_V_4_ce0();
    void thread_lpf_lines_buffer_V_4_ce1();
    void thread_lpf_lines_buffer_V_4_we1();
    void thread_or_cond_i_fu_588_p2();
    void thread_out1_img_V_blk_n();
    void thread_out1_img_V_din();
    void thread_out1_img_V_write();
    void thread_out2_img_V_blk_n();
    void thread_out2_img_V_din();
    void thread_out2_img_V_write();
    void thread_p_Result_s_fu_818_p1();
    void thread_pixels_0_V_fu_771_p1();
    void thread_pixels_1_V_fu_775_p1();
    void thread_pixels_2_V_fu_779_p1();
    void thread_pixels_3_V_fu_783_p1();
    void thread_real_start();
    void thread_row_fu_503_p2();
    void thread_row_i_mid2_fu_567_p3();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp_10_i_fu_479_p2();
    void thread_tmp_12_i_fu_575_p2();
    void thread_tmp_13_i_fu_580_p1();
    void thread_tmp_14_i_fu_810_p3();
    void thread_tmp_15_i_fu_822_p1();
    void thread_tmp_17_i_fu_618_p2();
    void thread_tmp_19_i_fu_624_p2();
    void thread_tmp_1_cast_i_fu_475_p1();
    void thread_tmp_1_fu_543_p4();
    void thread_tmp_2_fu_602_p4();
    void thread_tmp_4_cast_i_fu_457_p1();
    void thread_tmp_5_i_fu_461_p2();
    void thread_tmp_8_i_fu_514_p2();
    void thread_tmp_8_i_mid1_fu_509_p2();
    void thread_tmp_8_i_mid2_fu_519_p3();
    void thread_tmp_9_i_mid2_fu_559_p3();
    void thread_tmp_V_1_trunc_i_fu_807_p1();
    void thread_tmp_fu_527_p4();
    void thread_width_out_blk_n();
    void thread_width_out_din();
    void thread_width_out_write();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
