// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _hls_LK_HH_
#define _hls_LK_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "hls_twoIsotropicFilt.h"
#include "hls_SpatialTemporalD.h"
#include "hls_ComputeIntegrals.h"
#include "hls_ComputeVectors.h"
#include "fifo_w12_d10_A.h"
#include "fifo_w16_d2_A.h"
#include "fifo_w13_d10_A.h"
#include "fifo_w34_d10_A.h"
#include "start_for_hls_SpatialTemporalD_U0.h"
#include "start_for_hls_ComputeIntegrals_U0.h"
#include "start_for_hls_ComputeVectors_U0.h"
#include "hls_LK_CONTROL_BUS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CONTROL_BUS_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_CONTROL_BUS_DATA_WIDTH = 32>
struct hls_LK : public sc_module {
    // Port declarations 36
    sc_in< sc_logic > s_axi_CONTROL_BUS_AWVALID;
    sc_out< sc_logic > s_axi_CONTROL_BUS_AWREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_BUS_ADDR_WIDTH> > s_axi_CONTROL_BUS_AWADDR;
    sc_in< sc_logic > s_axi_CONTROL_BUS_WVALID;
    sc_out< sc_logic > s_axi_CONTROL_BUS_WREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_BUS_DATA_WIDTH> > s_axi_CONTROL_BUS_WDATA;
    sc_in< sc_uint<C_S_AXI_CONTROL_BUS_DATA_WIDTH/8> > s_axi_CONTROL_BUS_WSTRB;
    sc_in< sc_logic > s_axi_CONTROL_BUS_ARVALID;
    sc_out< sc_logic > s_axi_CONTROL_BUS_ARREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_BUS_ADDR_WIDTH> > s_axi_CONTROL_BUS_ARADDR;
    sc_out< sc_logic > s_axi_CONTROL_BUS_RVALID;
    sc_in< sc_logic > s_axi_CONTROL_BUS_RREADY;
    sc_out< sc_uint<C_S_AXI_CONTROL_BUS_DATA_WIDTH> > s_axi_CONTROL_BUS_RDATA;
    sc_out< sc_lv<2> > s_axi_CONTROL_BUS_RRESP;
    sc_out< sc_logic > s_axi_CONTROL_BUS_BVALID;
    sc_in< sc_logic > s_axi_CONTROL_BUS_BREADY;
    sc_out< sc_lv<2> > s_axi_CONTROL_BUS_BRESP;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > interrupt;
    sc_in< sc_lv<8> > inp1_img_TDATA;
    sc_in< sc_lv<1> > inp1_img_TLAST;
    sc_in< sc_lv<8> > inp2_img_TDATA;
    sc_in< sc_lv<1> > inp2_img_TLAST;
    sc_out< sc_lv<8> > vx_img_TDATA;
    sc_out< sc_lv<1> > vx_img_TLAST;
    sc_out< sc_lv<8> > vy_img_TDATA;
    sc_out< sc_lv<1> > vy_img_TLAST;
    sc_in< sc_logic > inp1_img_TVALID;
    sc_out< sc_logic > inp1_img_TREADY;
    sc_in< sc_logic > inp2_img_TVALID;
    sc_out< sc_logic > inp2_img_TREADY;
    sc_out< sc_logic > vx_img_TVALID;
    sc_in< sc_logic > vx_img_TREADY;
    sc_out< sc_logic > vy_img_TVALID;
    sc_in< sc_logic > vy_img_TREADY;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    hls_LK(sc_module_name name);
    SC_HAS_PROCESS(hls_LK);

    ~hls_LK();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    hls_LK_CONTROL_BUS_s_axi<C_S_AXI_CONTROL_BUS_ADDR_WIDTH,C_S_AXI_CONTROL_BUS_DATA_WIDTH>* hls_LK_CONTROL_BUS_s_axi_U;
    hls_twoIsotropicFilt* hls_twoIsotropicFilt_U0;
    hls_SpatialTemporalD* hls_SpatialTemporalD_U0;
    hls_ComputeIntegrals* hls_ComputeIntegrals_U0;
    hls_ComputeVectors* hls_ComputeVectors_U0;
    fifo_w12_d10_A* flt1_img_channel_U;
    fifo_w12_d10_A* flt2_img_channel_U;
    fifo_w16_d2_A* height_c_U;
    fifo_w16_d2_A* width_c_U;
    fifo_w13_d10_A* Dx1_img_channel_U;
    fifo_w13_d10_A* Dy1_img_channel_U;
    fifo_w13_d10_A* Dt_img_channel_U;
    fifo_w16_d2_A* height_c9_U;
    fifo_w16_d2_A* width_c10_U;
    fifo_w34_d10_A* A11_img_channel_U;
    fifo_w34_d10_A* A12_img_channel_U;
    fifo_w34_d10_A* A22_img_channel_U;
    fifo_w34_d10_A* B1_img_channel_U;
    fifo_w34_d10_A* B2_img_channel_U;
    fifo_w16_d2_A* height_c11_U;
    fifo_w16_d2_A* width_c12_U;
    start_for_hls_SpatialTemporalD_U0* start_for_hls_SpatialTemporalD_U0_U;
    start_for_hls_ComputeIntegrals_U0* start_for_hls_ComputeIntegrals_U0_U;
    start_for_hls_ComputeVectors_U0* start_for_hls_ComputeVectors_U0_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<16> > height;
    sc_signal< sc_lv<16> > width;
    sc_signal< sc_logic > hls_twoIsotropicFilt_U0_ap_start;
    sc_signal< sc_logic > hls_twoIsotropicFilt_U0_ap_done;
    sc_signal< sc_logic > hls_twoIsotropicFilt_U0_ap_continue;
    sc_signal< sc_logic > hls_twoIsotropicFilt_U0_ap_idle;
    sc_signal< sc_logic > hls_twoIsotropicFilt_U0_ap_ready;
    sc_signal< sc_logic > hls_twoIsotropicFilt_U0_start_out;
    sc_signal< sc_logic > hls_twoIsotropicFilt_U0_start_write;
    sc_signal< sc_logic > hls_twoIsotropicFilt_U0_inp1_img_TREADY;
    sc_signal< sc_logic > hls_twoIsotropicFilt_U0_inp2_img_TREADY;
    sc_signal< sc_lv<12> > hls_twoIsotropicFilt_U0_out1_img_V_din;
    sc_signal< sc_logic > hls_twoIsotropicFilt_U0_out1_img_V_write;
    sc_signal< sc_lv<12> > hls_twoIsotropicFilt_U0_out2_img_V_din;
    sc_signal< sc_logic > hls_twoIsotropicFilt_U0_out2_img_V_write;
    sc_signal< sc_lv<16> > hls_twoIsotropicFilt_U0_height_out_din;
    sc_signal< sc_logic > hls_twoIsotropicFilt_U0_height_out_write;
    sc_signal< sc_lv<16> > hls_twoIsotropicFilt_U0_width_out_din;
    sc_signal< sc_logic > hls_twoIsotropicFilt_U0_width_out_write;
    sc_signal< sc_logic > hls_SpatialTemporalD_U0_ap_start;
    sc_signal< sc_logic > hls_SpatialTemporalD_U0_ap_done;
    sc_signal< sc_logic > hls_SpatialTemporalD_U0_ap_continue;
    sc_signal< sc_logic > hls_SpatialTemporalD_U0_ap_idle;
    sc_signal< sc_logic > hls_SpatialTemporalD_U0_ap_ready;
    sc_signal< sc_logic > hls_SpatialTemporalD_U0_start_out;
    sc_signal< sc_logic > hls_SpatialTemporalD_U0_start_write;
    sc_signal< sc_logic > hls_SpatialTemporalD_U0_inp1_img_V_read;
    sc_signal< sc_logic > hls_SpatialTemporalD_U0_inp2_img_V_read;
    sc_signal< sc_lv<13> > hls_SpatialTemporalD_U0_out_Ix_img_V_din;
    sc_signal< sc_logic > hls_SpatialTemporalD_U0_out_Ix_img_V_write;
    sc_signal< sc_lv<13> > hls_SpatialTemporalD_U0_out_Iy_img_V_din;
    sc_signal< sc_logic > hls_SpatialTemporalD_U0_out_Iy_img_V_write;
    sc_signal< sc_lv<13> > hls_SpatialTemporalD_U0_out_It_img_V_din;
    sc_signal< sc_logic > hls_SpatialTemporalD_U0_out_It_img_V_write;
    sc_signal< sc_logic > hls_SpatialTemporalD_U0_height_read;
    sc_signal< sc_logic > hls_SpatialTemporalD_U0_width_read;
    sc_signal< sc_lv<16> > hls_SpatialTemporalD_U0_height_out_din;
    sc_signal< sc_logic > hls_SpatialTemporalD_U0_height_out_write;
    sc_signal< sc_lv<16> > hls_SpatialTemporalD_U0_width_out_din;
    sc_signal< sc_logic > hls_SpatialTemporalD_U0_width_out_write;
    sc_signal< sc_logic > hls_ComputeIntegrals_U0_ap_start;
    sc_signal< sc_logic > hls_ComputeIntegrals_U0_ap_done;
    sc_signal< sc_logic > hls_ComputeIntegrals_U0_ap_continue;
    sc_signal< sc_logic > hls_ComputeIntegrals_U0_ap_idle;
    sc_signal< sc_logic > hls_ComputeIntegrals_U0_ap_ready;
    sc_signal< sc_logic > hls_ComputeIntegrals_U0_start_out;
    sc_signal< sc_logic > hls_ComputeIntegrals_U0_start_write;
    sc_signal< sc_logic > hls_ComputeIntegrals_U0_Ix_img_V_read;
    sc_signal< sc_logic > hls_ComputeIntegrals_U0_Iy_img_V_read;
    sc_signal< sc_logic > hls_ComputeIntegrals_U0_It_img_V_read;
    sc_signal< sc_lv<34> > hls_ComputeIntegrals_U0_A11_img_V_din;
    sc_signal< sc_logic > hls_ComputeIntegrals_U0_A11_img_V_write;
    sc_signal< sc_lv<34> > hls_ComputeIntegrals_U0_A12_img_V_din;
    sc_signal< sc_logic > hls_ComputeIntegrals_U0_A12_img_V_write;
    sc_signal< sc_lv<34> > hls_ComputeIntegrals_U0_A22_img_V_din;
    sc_signal< sc_logic > hls_ComputeIntegrals_U0_A22_img_V_write;
    sc_signal< sc_lv<34> > hls_ComputeIntegrals_U0_B1_img_V_din;
    sc_signal< sc_logic > hls_ComputeIntegrals_U0_B1_img_V_write;
    sc_signal< sc_lv<34> > hls_ComputeIntegrals_U0_B2_img_V_din;
    sc_signal< sc_logic > hls_ComputeIntegrals_U0_B2_img_V_write;
    sc_signal< sc_logic > hls_ComputeIntegrals_U0_height_read;
    sc_signal< sc_logic > hls_ComputeIntegrals_U0_width_read;
    sc_signal< sc_lv<16> > hls_ComputeIntegrals_U0_height_out_din;
    sc_signal< sc_logic > hls_ComputeIntegrals_U0_height_out_write;
    sc_signal< sc_lv<16> > hls_ComputeIntegrals_U0_width_out_din;
    sc_signal< sc_logic > hls_ComputeIntegrals_U0_width_out_write;
    sc_signal< sc_logic > hls_ComputeVectors_U0_ap_start;
    sc_signal< sc_logic > hls_ComputeVectors_U0_ap_done;
    sc_signal< sc_logic > hls_ComputeVectors_U0_ap_continue;
    sc_signal< sc_logic > hls_ComputeVectors_U0_ap_idle;
    sc_signal< sc_logic > hls_ComputeVectors_U0_ap_ready;
    sc_signal< sc_logic > hls_ComputeVectors_U0_A11_img_V_read;
    sc_signal< sc_logic > hls_ComputeVectors_U0_A12_img_V_read;
    sc_signal< sc_logic > hls_ComputeVectors_U0_A22_img_V_read;
    sc_signal< sc_logic > hls_ComputeVectors_U0_B1_img_V_read;
    sc_signal< sc_logic > hls_ComputeVectors_U0_B2_img_V_read;
    sc_signal< sc_lv<8> > hls_ComputeVectors_U0_vx_img_TDATA;
    sc_signal< sc_logic > hls_ComputeVectors_U0_vx_img_TVALID;
    sc_signal< sc_lv<1> > hls_ComputeVectors_U0_vx_img_TLAST;
    sc_signal< sc_lv<8> > hls_ComputeVectors_U0_vy_img_TDATA;
    sc_signal< sc_logic > hls_ComputeVectors_U0_vy_img_TVALID;
    sc_signal< sc_lv<1> > hls_ComputeVectors_U0_vy_img_TLAST;
    sc_signal< sc_logic > hls_ComputeVectors_U0_height_read;
    sc_signal< sc_logic > hls_ComputeVectors_U0_width_read;
    sc_signal< sc_lv<32> > hls_ComputeVectors_U0_ap_return;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > flt1_img_channel_full_n;
    sc_signal< sc_lv<12> > flt1_img_channel_dout;
    sc_signal< sc_logic > flt1_img_channel_empty_n;
    sc_signal< sc_logic > flt2_img_channel_full_n;
    sc_signal< sc_lv<12> > flt2_img_channel_dout;
    sc_signal< sc_logic > flt2_img_channel_empty_n;
    sc_signal< sc_logic > height_c_full_n;
    sc_signal< sc_lv<16> > height_c_dout;
    sc_signal< sc_logic > height_c_empty_n;
    sc_signal< sc_logic > width_c_full_n;
    sc_signal< sc_lv<16> > width_c_dout;
    sc_signal< sc_logic > width_c_empty_n;
    sc_signal< sc_logic > Dx1_img_channel_full_n;
    sc_signal< sc_lv<13> > Dx1_img_channel_dout;
    sc_signal< sc_logic > Dx1_img_channel_empty_n;
    sc_signal< sc_logic > Dy1_img_channel_full_n;
    sc_signal< sc_lv<13> > Dy1_img_channel_dout;
    sc_signal< sc_logic > Dy1_img_channel_empty_n;
    sc_signal< sc_logic > Dt_img_channel_full_n;
    sc_signal< sc_lv<13> > Dt_img_channel_dout;
    sc_signal< sc_logic > Dt_img_channel_empty_n;
    sc_signal< sc_logic > height_c9_full_n;
    sc_signal< sc_lv<16> > height_c9_dout;
    sc_signal< sc_logic > height_c9_empty_n;
    sc_signal< sc_logic > width_c10_full_n;
    sc_signal< sc_lv<16> > width_c10_dout;
    sc_signal< sc_logic > width_c10_empty_n;
    sc_signal< sc_logic > A11_img_channel_full_n;
    sc_signal< sc_lv<34> > A11_img_channel_dout;
    sc_signal< sc_logic > A11_img_channel_empty_n;
    sc_signal< sc_logic > A12_img_channel_full_n;
    sc_signal< sc_lv<34> > A12_img_channel_dout;
    sc_signal< sc_logic > A12_img_channel_empty_n;
    sc_signal< sc_logic > A22_img_channel_full_n;
    sc_signal< sc_lv<34> > A22_img_channel_dout;
    sc_signal< sc_logic > A22_img_channel_empty_n;
    sc_signal< sc_logic > B1_img_channel_full_n;
    sc_signal< sc_lv<34> > B1_img_channel_dout;
    sc_signal< sc_logic > B1_img_channel_empty_n;
    sc_signal< sc_logic > B2_img_channel_full_n;
    sc_signal< sc_lv<34> > B2_img_channel_dout;
    sc_signal< sc_logic > B2_img_channel_empty_n;
    sc_signal< sc_logic > height_c11_full_n;
    sc_signal< sc_lv<16> > height_c11_dout;
    sc_signal< sc_logic > height_c11_empty_n;
    sc_signal< sc_logic > width_c12_full_n;
    sc_signal< sc_lv<16> > width_c12_dout;
    sc_signal< sc_logic > width_c12_empty_n;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_lv<1> > start_for_hls_SpatialTemporalD_U0_din;
    sc_signal< sc_logic > start_for_hls_SpatialTemporalD_U0_full_n;
    sc_signal< sc_lv<1> > start_for_hls_SpatialTemporalD_U0_dout;
    sc_signal< sc_logic > start_for_hls_SpatialTemporalD_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_hls_ComputeIntegrals_U0_din;
    sc_signal< sc_logic > start_for_hls_ComputeIntegrals_U0_full_n;
    sc_signal< sc_lv<1> > start_for_hls_ComputeIntegrals_U0_dout;
    sc_signal< sc_logic > start_for_hls_ComputeIntegrals_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_hls_ComputeVectors_U0_din;
    sc_signal< sc_logic > start_for_hls_ComputeVectors_U0_full_n;
    sc_signal< sc_lv<1> > start_for_hls_ComputeVectors_U0_dout;
    sc_signal< sc_logic > start_for_hls_ComputeVectors_U0_empty_n;
    sc_signal< sc_logic > hls_ComputeVectors_U0_start_full_n;
    sc_signal< sc_logic > hls_ComputeVectors_U0_start_write;
    sc_signal< sc_lv<32> > ap_return;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_S_AXI_WSTRB_WIDTH;
    static const int C_S_AXI_ADDR_WIDTH;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sync_continue();
    void thread_ap_sync_done();
    void thread_ap_sync_ready();
    void thread_hls_ComputeIntegrals_U0_ap_continue();
    void thread_hls_ComputeIntegrals_U0_ap_start();
    void thread_hls_ComputeVectors_U0_ap_continue();
    void thread_hls_ComputeVectors_U0_ap_start();
    void thread_hls_ComputeVectors_U0_start_full_n();
    void thread_hls_ComputeVectors_U0_start_write();
    void thread_hls_SpatialTemporalD_U0_ap_continue();
    void thread_hls_SpatialTemporalD_U0_ap_start();
    void thread_hls_twoIsotropicFilt_U0_ap_continue();
    void thread_hls_twoIsotropicFilt_U0_ap_start();
    void thread_inp1_img_TREADY();
    void thread_inp2_img_TREADY();
    void thread_start_for_hls_ComputeIntegrals_U0_din();
    void thread_start_for_hls_ComputeVectors_U0_din();
    void thread_start_for_hls_SpatialTemporalD_U0_din();
    void thread_vx_img_TDATA();
    void thread_vx_img_TLAST();
    void thread_vx_img_TVALID();
    void thread_vy_img_TDATA();
    void thread_vy_img_TLAST();
    void thread_vy_img_TVALID();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
