// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module hls_ComputeIntegrals (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        Ix_img_V_dout,
        Ix_img_V_empty_n,
        Ix_img_V_read,
        Iy_img_V_dout,
        Iy_img_V_empty_n,
        Iy_img_V_read,
        It_img_V_dout,
        It_img_V_empty_n,
        It_img_V_read,
        A11_img_V_din,
        A11_img_V_full_n,
        A11_img_V_write,
        A12_img_V_din,
        A12_img_V_full_n,
        A12_img_V_write,
        A22_img_V_din,
        A22_img_V_full_n,
        A22_img_V_write,
        B1_img_V_din,
        B1_img_V_full_n,
        B1_img_V_write,
        B2_img_V_din,
        B2_img_V_full_n,
        B2_img_V_write,
        height_dout,
        height_empty_n,
        height_read,
        width_dout,
        width_empty_n,
        width_read,
        height_out_din,
        height_out_full_n,
        height_out_write,
        width_out_din,
        width_out_full_n,
        width_out_write
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_pp0_stage0 = 6'd4;
parameter    ap_ST_fsm_pp0_stage1 = 6'd8;
parameter    ap_ST_fsm_pp0_stage2 = 6'd16;
parameter    ap_ST_fsm_state8 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [12:0] Ix_img_V_dout;
input   Ix_img_V_empty_n;
output   Ix_img_V_read;
input  [12:0] Iy_img_V_dout;
input   Iy_img_V_empty_n;
output   Iy_img_V_read;
input  [12:0] It_img_V_dout;
input   It_img_V_empty_n;
output   It_img_V_read;
output  [33:0] A11_img_V_din;
input   A11_img_V_full_n;
output   A11_img_V_write;
output  [33:0] A12_img_V_din;
input   A12_img_V_full_n;
output   A12_img_V_write;
output  [33:0] A22_img_V_din;
input   A22_img_V_full_n;
output   A22_img_V_write;
output  [33:0] B1_img_V_din;
input   B1_img_V_full_n;
output   B1_img_V_write;
output  [33:0] B2_img_V_din;
input   B2_img_V_full_n;
output   B2_img_V_write;
input  [15:0] height_dout;
input   height_empty_n;
output   height_read;
input  [15:0] width_dout;
input   width_empty_n;
output   width_read;
output  [15:0] height_out_din;
input   height_out_full_n;
output   height_out_write;
output  [15:0] width_out_din;
input   width_out_full_n;
output   width_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg Ix_img_V_read;
reg Iy_img_V_read;
reg It_img_V_read;
reg A11_img_V_write;
reg A12_img_V_write;
reg A22_img_V_write;
reg B1_img_V_write;
reg B2_img_V_write;
reg height_read;
reg width_read;
reg height_out_write;
reg width_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [8:0] packed3_lines_buffer_10_address0;
reg    packed3_lines_buffer_10_ce0;
reg    packed3_lines_buffer_10_we0;
wire   [38:0] packed3_lines_buffer_10_q0;
reg   [8:0] packed3_lines_buffer_7_address0;
reg    packed3_lines_buffer_7_ce0;
reg    packed3_lines_buffer_7_we0;
wire   [38:0] packed3_lines_buffer_7_q0;
reg   [8:0] packed3_lines_buffer_6_address0;
reg    packed3_lines_buffer_6_ce0;
reg    packed3_lines_buffer_6_we0;
wire   [38:0] packed3_lines_buffer_6_q0;
reg   [8:0] packed3_lines_buffer_5_address0;
reg    packed3_lines_buffer_5_ce0;
reg    packed3_lines_buffer_5_we0;
wire   [38:0] packed3_lines_buffer_5_q0;
reg   [8:0] packed3_lines_buffer_4_address0;
reg    packed3_lines_buffer_4_ce0;
reg    packed3_lines_buffer_4_we0;
wire   [38:0] packed3_lines_buffer_4_q0;
reg   [8:0] packed3_lines_buffer_3_address0;
reg    packed3_lines_buffer_3_ce0;
reg    packed3_lines_buffer_3_we0;
wire   [38:0] packed3_lines_buffer_3_q0;
reg   [8:0] packed3_lines_buffer_2_address0;
reg    packed3_lines_buffer_2_ce0;
reg    packed3_lines_buffer_2_we0;
wire   [38:0] packed3_lines_buffer_2_q0;
reg   [8:0] packed3_lines_buffer_1_address0;
reg    packed3_lines_buffer_1_ce0;
reg    packed3_lines_buffer_1_we0;
wire   [38:0] packed3_lines_buffer_1_q0;
reg   [8:0] packed3_lines_buffer_address0;
reg    packed3_lines_buffer_ce0;
reg    packed3_lines_buffer_we0;
wire   [38:0] packed3_lines_buffer_q0;
reg   [8:0] packed3_lines_buffer_9_address0;
reg    packed3_lines_buffer_9_ce0;
reg    packed3_lines_buffer_9_we0;
wire   [38:0] packed3_lines_buffer_9_q0;
reg   [8:0] packed3_lines_buffer_8_address0;
reg    packed3_lines_buffer_8_ce0;
reg    packed3_lines_buffer_8_we0;
wire   [38:0] packed3_lines_buffer_8_d0;
wire   [38:0] packed3_lines_buffer_8_q0;
wire   [8:0] csIxix_address0;
reg    csIxix_ce0;
wire   [31:0] csIxix_q0;
wire   [8:0] csIxix_address1;
reg    csIxix_ce1;
reg    csIxix_we1;
wire   [8:0] csIxiy_address0;
reg    csIxiy_ce0;
wire   [31:0] csIxiy_q0;
wire   [8:0] csIxiy_address1;
reg    csIxiy_ce1;
reg    csIxiy_we1;
wire   [8:0] csIyiy_address0;
reg    csIyiy_ce0;
wire   [31:0] csIyiy_q0;
wire   [8:0] csIyiy_address1;
reg    csIyiy_ce1;
reg    csIyiy_we1;
wire   [8:0] csDix_address0;
reg    csDix_ce0;
wire   [31:0] csDix_q0;
wire   [8:0] csDix_address1;
reg    csDix_ce1;
reg    csDix_we1;
wire   [8:0] csDiy_address0;
reg    csDiy_ce0;
wire   [31:0] csDiy_q0;
wire   [8:0] csDiy_address1;
reg    csDiy_ce1;
reg    csDiy_we1;
wire   [8:0] cbIxix_address0;
reg    cbIxix_ce0;
wire   [31:0] cbIxix_q0;
wire   [8:0] cbIxix_address1;
reg    cbIxix_ce1;
reg    cbIxix_we1;
wire   [8:0] cbIxiy_address0;
reg    cbIxiy_ce0;
wire   [31:0] cbIxiy_q0;
wire   [8:0] cbIxiy_address1;
reg    cbIxiy_ce1;
reg    cbIxiy_we1;
wire   [8:0] cbIyiy_address0;
reg    cbIyiy_ce0;
wire   [31:0] cbIyiy_q0;
wire   [8:0] cbIyiy_address1;
reg    cbIyiy_ce1;
reg    cbIyiy_we1;
wire   [8:0] cbDix_address0;
reg    cbDix_ce0;
wire   [31:0] cbDix_q0;
wire   [8:0] cbDix_address1;
reg    cbDix_ce1;
reg    cbDix_we1;
wire   [8:0] cbDiy_address0;
reg    cbDiy_ce0;
wire   [31:0] cbDiy_q0;
wire   [8:0] cbDiy_address1;
reg    cbDiy_ce1;
reg    cbDiy_we1;
reg   [31:0] sum_Ixx;
reg   [31:0] sum_Ixy;
reg   [31:0] sum_Iyy;
reg   [31:0] sum_Itx;
reg   [31:0] sum_Ity;
reg    Ix_img_V_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] exitcond_flatten_reg_1664;
reg   [0:0] tmp_91_i_reg_1757;
reg    Iy_img_V_blk_n;
reg    It_img_V_blk_n;
reg    A11_img_V_blk_n;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] tmp_132_i_reg_1949;
reg    A12_img_V_blk_n;
reg    A22_img_V_blk_n;
reg    B1_img_V_blk_n;
reg    B2_img_V_blk_n;
reg    height_blk_n;
reg    width_blk_n;
reg    height_out_blk_n;
reg    width_out_blk_n;
reg   [32:0] indvar_flatten_reg_764;
reg   [15:0] row_i_reg_775;
reg   [33:0] p_01072_1_i_reg_787;
reg   [33:0] p_01064_1_i_reg_799;
reg   [33:0] p_01056_1_i_reg_811;
reg   [33:0] p_01048_1_i_reg_823;
reg   [33:0] p_01040_1_i_reg_835;
reg   [15:0] col_i_reg_847;
reg   [15:0] height_read_reg_1623;
reg    ap_block_state1;
reg   [15:0] width_read_reg_1632;
wire   [31:0] tmp_78_i_fu_921_p1;
reg   [31:0] tmp_78_i_reg_1640;
wire    ap_CS_fsm_state2;
wire   [16:0] tmp_79_i_fu_927_p2;
reg   [16:0] tmp_79_i_reg_1646;
wire   [33:0] grp_fu_1527_p3;
reg   [33:0] bound_reg_1651;
wire   [0:0] tmp_88_i_fu_945_p2;
reg   [0:0] tmp_88_i_reg_1656;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] exitcond_flatten_fu_950_p2;
reg   [0:0] exitcond_flatten_reg_1664_pp0_iter1_reg;
wire   [32:0] indvar_flatten_next_fu_955_p2;
reg   [32:0] indvar_flatten_next_reg_1668;
wire   [15:0] col_i_mid2_fu_961_p3;
reg   [15:0] col_i_mid2_reg_1673;
wire   [15:0] row_fu_969_p2;
reg   [15:0] row_reg_1681;
wire   [0:0] ult1_fu_993_p2;
reg   [0:0] ult1_reg_1688;
wire   [0:0] ult2_fu_998_p2;
reg   [0:0] ult2_reg_1693;
wire   [0:0] tmp_89_i_fu_1003_p2;
reg   [0:0] tmp_89_i_reg_1698;
reg   [8:0] packed3_lines_buffer_11_reg_1702;
reg   [8:0] packed3_lines_buffer_12_reg_1707;
reg   [8:0] packed3_lines_buffer_14_reg_1712;
reg   [8:0] packed3_lines_buffer_16_reg_1717;
reg   [8:0] packed3_lines_buffer_18_reg_1722;
reg   [8:0] packed3_lines_buffer_20_reg_1727;
reg   [8:0] packed3_lines_buffer_22_reg_1732;
reg   [8:0] packed3_lines_buffer_24_reg_1737;
reg   [8:0] packed3_lines_buffer_26_reg_1742;
reg   [8:0] packed3_lines_buffer_28_reg_1747;
wire   [0:0] tmp_91_i_fu_1023_p2;
wire   [0:0] ult_fu_1029_p2;
reg   [0:0] ult_reg_1761;
reg   [0:0] tmp_reg_1766;
reg    ap_predicate_op122_read_state4;
reg    ap_predicate_op123_read_state4;
reg    ap_predicate_op124_read_state4;
reg    ap_block_state4_pp0_stage1_iter0;
reg    ap_block_state7_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
wire  signed [25:0] tmp_100_i_fu_1077_p1;
reg  signed [25:0] tmp_100_i_reg_1800;
wire  signed [25:0] bot_Iyy_V_fu_1535_p2;
reg  signed [25:0] bot_Iyy_V_reg_1806;
wire  signed [25:0] bot_Ixy_V_fu_1541_p2;
reg  signed [25:0] bot_Ixy_V_reg_1811;
wire  signed [25:0] bot_Itx_V_fu_1547_p2;
reg  signed [25:0] bot_Itx_V_reg_1816;
wire  signed [25:0] bot_Ity_V_fu_1553_p2;
reg  signed [25:0] bot_Ity_V_reg_1821;
wire  signed [63:0] tmp_103_i_fu_1089_p1;
reg  signed [63:0] tmp_103_i_reg_1826;
reg   [8:0] cbIxix_addr_reg_1835;
reg   [8:0] cbIxiy_addr_reg_1841;
reg   [8:0] cbIyiy_addr_reg_1847;
reg   [8:0] cbDix_addr_reg_1853;
reg   [8:0] cbDiy_addr_reg_1859;
wire   [15:0] row_i_mid2_fu_1199_p3;
reg   [15:0] row_i_mid2_reg_1865;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state5_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
reg   [31:0] csIxixL_reg_1870;
reg   [31:0] csIxiyL_reg_1875;
reg   [31:0] csIyiyL_reg_1880;
reg   [31:0] csDixL_reg_1885;
reg   [31:0] csDiyL_reg_1890;
wire  signed [31:0] grp_fu_1559_p3;
reg  signed [31:0] tmp_106_i_reg_1895;
reg   [31:0] cbIxiy_load_reg_1900;
wire  signed [25:0] grp_fu_1574_p3;
reg  signed [25:0] tmp_109_i_reg_1905;
reg   [31:0] cbIyiy_load_reg_1910;
wire  signed [25:0] grp_fu_1567_p3;
reg  signed [25:0] tmp_112_i_reg_1915;
reg   [31:0] cbDix_load_reg_1920;
wire  signed [25:0] grp_fu_1581_p3;
reg  signed [25:0] tmp_115_i_reg_1925;
reg   [31:0] cbDiy_load_reg_1930;
wire  signed [25:0] grp_fu_1588_p3;
reg  signed [25:0] tmp_118_i_reg_1935;
wire   [0:0] tmp_130_i_fu_1266_p2;
reg   [0:0] tmp_130_i_reg_1940;
wire   [0:0] tmp_132_i_fu_1277_p2;
wire   [15:0] col_fu_1283_p2;
reg   [15:0] col_reg_1953;
wire  signed [33:0] a11_V_fu_1467_p1;
wire  signed [33:0] a12_V_fu_1471_p1;
wire  signed [33:0] a22_V_fu_1475_p1;
wire  signed [33:0] b1_V_fu_1479_p1;
wire  signed [33:0] b2_V_fu_1483_p1;
wire   [33:0] p_01072_2_i_52_fu_1487_p3;
wire   [33:0] p_01064_2_i_53_fu_1495_p3;
wire   [33:0] p_01056_2_i_54_fu_1503_p3;
wire   [33:0] p_01048_2_i_55_fu_1511_p3;
wire   [33:0] p_01040_2_i_56_fu_1519_p3;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
wire    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage1_subdone;
reg   [32:0] ap_phi_mux_indvar_flatten_phi_fu_768_p4;
wire    ap_block_pp0_stage0;
reg   [15:0] ap_phi_mux_row_i_phi_fu_779_p4;
reg   [15:0] ap_phi_mux_col_i_phi_fu_851_p4;
wire   [33:0] ap_phi_reg_pp0_iter0_p_01072_2_i_reg_858;
reg   [33:0] ap_phi_reg_pp0_iter1_p_01072_2_i_reg_858;
wire   [33:0] ap_phi_reg_pp0_iter0_p_01064_2_i_reg_868;
reg   [33:0] ap_phi_reg_pp0_iter1_p_01064_2_i_reg_868;
wire   [33:0] ap_phi_reg_pp0_iter0_p_01056_2_i_reg_878;
reg   [33:0] ap_phi_reg_pp0_iter1_p_01056_2_i_reg_878;
wire   [33:0] ap_phi_reg_pp0_iter0_p_01048_2_i_reg_888;
reg   [33:0] ap_phi_reg_pp0_iter1_p_01048_2_i_reg_888;
wire   [33:0] ap_phi_reg_pp0_iter0_p_01040_2_i_reg_898;
reg   [33:0] ap_phi_reg_pp0_iter1_p_01040_2_i_reg_898;
wire   [63:0] tmp_90_i_fu_1008_p1;
wire   [63:0] tmp_94_i_fu_1056_p1;
wire   [63:0] tmp_96_i_fu_1068_p1;
reg    ap_block_pp0_stage1_01001;
wire  signed [31:0] val_assign_fu_1367_p2;
wire  signed [31:0] val_assign_4_fu_1389_p2;
wire  signed [31:0] val_assign_5_fu_1411_p2;
wire  signed [31:0] val_assign_6_fu_1433_p2;
wire  signed [31:0] val_assign_7_fu_1455_p2;
reg   [31:0] nIdx_2_fu_300;
wire   [31:0] nIdx_1_fu_1128_p3;
reg   [31:0] zIdx_1_i_fu_304;
wire   [31:0] p_i_fu_1109_p3;
reg   [38:0] p_Val2_s_fu_308;
wire    ap_block_pp0_stage2;
wire   [31:0] grp_fu_1595_p3;
wire   [31:0] csIxiyR_fu_1321_p2;
wire   [31:0] csIyiyR_fu_1331_p2;
wire   [31:0] csDixR_fu_1341_p2;
wire   [31:0] csDiyR_fu_1351_p2;
wire   [16:0] tmp_78_cast_i_fu_924_p1;
wire   [16:0] tmp_87_cast_i_fu_941_p1;
wire   [33:0] indvar_flatten_cast_fu_937_p1;
wire   [0:0] tmp_82_i_fu_980_p2;
wire   [0:0] tmp_82_i_mid1_fu_975_p2;
wire   [0:0] tmp_82_i_mid2_fu_985_p3;
wire  signed [12:0] p_Result_s_fu_1045_p1;
wire  signed [12:0] p_Result_s_fu_1045_p2;
wire  signed [12:0] p_Result_s_fu_1045_p3;
wire  signed [12:0] tmp_100_i_fu_1077_p0;
wire  signed [12:0] tmp_101_i_fu_1081_p0;
wire  signed [12:0] tmp_102_i_fu_1085_p0;
wire  signed [31:0] tmp_103_i_fu_1089_p0;
wire   [31:0] zIdx_fu_1098_p2;
wire   [0:0] tmp_124_i_fu_1104_p2;
wire  signed [31:0] nIdx_fu_1117_p1;
wire   [31:0] nIdx_fu_1117_p2;
wire   [0:0] tmp_125_i_fu_1123_p2;
wire   [0:0] tmp_84_i_fu_1151_p2;
wire   [0:0] tmp_84_i_mid1_fu_1146_p2;
wire   [0:0] rev2_fu_1169_p2;
wire   [0:0] rev1_fu_1164_p2;
wire   [0:0] tmp_86_i_fu_1186_p2;
wire   [0:0] tmp_86_i_mid1_fu_1181_p2;
wire   [12:0] x_der_V_1_fu_1208_p1;
wire   [12:0] y_der_V_1_fu_1212_p4;
wire   [12:0] t_der_V_1_fu_1222_p4;
wire   [0:0] tmp_126_i_fu_1244_p2;
wire   [0:0] tmp_85_i_mid2_fu_1174_p3;
wire   [0:0] tmp_84_i_mid2_fu_1157_p3;
wire   [0:0] rev_fu_1249_p2;
wire   [0:0] tmp2_fu_1260_p2;
wire   [0:0] tmp1_fu_1254_p2;
wire   [0:0] tmp_86_i_mid2_fu_1192_p3;
wire   [0:0] tmp_131_i_fu_1272_p2;
wire  signed [31:0] tmp_109_cast_i_fu_1318_p1;
wire  signed [31:0] tmp_112_cast_i_fu_1328_p1;
wire  signed [31:0] tmp_115_cast_i_fu_1338_p1;
wire  signed [31:0] tmp_118_cast_i_fu_1348_p1;
wire   [31:0] csIxixL1_i_fu_1288_p3;
(* use_dsp48 = "no" *) wire   [31:0] tmp_119_i_fu_1362_p2;
wire   [31:0] csIxiyL1_i_fu_1294_p3;
wire   [31:0] tmp_120_i_fu_1383_p2;
wire   [31:0] csIyiyL1_i_fu_1300_p3;
wire   [31:0] tmp_121_i_fu_1405_p2;
wire   [31:0] csDixL1_i_fu_1306_p3;
wire   [31:0] tmp_122_i_fu_1427_p2;
wire   [31:0] csDiyL1_i_fu_1312_p3;
wire   [31:0] tmp_123_i_fu_1449_p2;
wire   [15:0] grp_fu_1527_p0;
wire   [3:0] grp_fu_1527_p1;
wire   [16:0] grp_fu_1527_p2;
wire  signed [12:0] bot_Iyy_V_fu_1535_p0;
wire  signed [25:0] tmp_101_i_fu_1081_p1;
wire  signed [12:0] bot_Iyy_V_fu_1535_p1;
wire  signed [12:0] bot_Ixy_V_fu_1541_p0;
wire  signed [12:0] bot_Ixy_V_fu_1541_p1;
wire  signed [12:0] bot_Itx_V_fu_1547_p0;
wire  signed [25:0] tmp_102_i_fu_1085_p1;
wire  signed [12:0] bot_Itx_V_fu_1547_p1;
wire  signed [12:0] bot_Ity_V_fu_1553_p0;
wire  signed [12:0] bot_Ity_V_fu_1553_p1;
wire  signed [12:0] grp_fu_1559_p0;
wire  signed [25:0] tmp_97_i_fu_1232_p1;
wire  signed [12:0] grp_fu_1559_p1;
wire  signed [12:0] grp_fu_1567_p0;
wire  signed [25:0] tmp_98_i_fu_1236_p1;
wire  signed [12:0] grp_fu_1567_p1;
wire  signed [12:0] grp_fu_1574_p0;
wire  signed [12:0] grp_fu_1574_p1;
wire  signed [12:0] grp_fu_1581_p0;
wire  signed [25:0] tmp_99_i_fu_1240_p1;
wire  signed [12:0] grp_fu_1581_p1;
wire  signed [12:0] grp_fu_1588_p0;
wire  signed [12:0] grp_fu_1588_p1;
wire  signed [12:0] grp_fu_1595_p0;
wire  signed [12:0] grp_fu_1595_p1;
wire    ap_CS_fsm_state8;
reg   [5:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_predicate_op132_load_state4;
reg    ap_enable_operation_132;
reg    ap_enable_state4_pp0_iter0_stage1;
reg    ap_predicate_op184_load_state5;
reg    ap_enable_operation_184;
reg    ap_enable_state5_pp0_iter0_stage2;
reg    ap_predicate_op269_store_state6;
reg    ap_enable_operation_269;
reg    ap_enable_state6_pp0_iter1_stage0;
reg    ap_predicate_op134_load_state4;
reg    ap_enable_operation_134;
reg    ap_predicate_op185_load_state5;
reg    ap_enable_operation_185;
reg    ap_predicate_op271_store_state6;
reg    ap_enable_operation_271;
reg    ap_predicate_op136_load_state4;
reg    ap_enable_operation_136;
reg    ap_predicate_op186_load_state5;
reg    ap_enable_operation_186;
reg    ap_predicate_op273_store_state6;
reg    ap_enable_operation_273;
reg    ap_predicate_op138_load_state4;
reg    ap_enable_operation_138;
reg    ap_predicate_op187_load_state5;
reg    ap_enable_operation_187;
reg    ap_predicate_op275_store_state6;
reg    ap_enable_operation_275;
reg    ap_predicate_op140_load_state4;
reg    ap_enable_operation_140;
reg    ap_predicate_op188_load_state5;
reg    ap_enable_operation_188;
reg    ap_predicate_op277_store_state6;
reg    ap_enable_operation_277;
reg    ap_predicate_op150_load_state4;
reg    ap_enable_operation_150;
reg    ap_predicate_op200_load_state5;
reg    ap_enable_operation_200;
reg    ap_predicate_op263_store_state6;
reg    ap_enable_operation_263;
reg    ap_predicate_op152_load_state4;
reg    ap_enable_operation_152;
reg    ap_predicate_op203_load_state5;
reg    ap_enable_operation_203;
reg    ap_predicate_op264_store_state6;
reg    ap_enable_operation_264;
reg    ap_predicate_op154_load_state4;
reg    ap_enable_operation_154;
reg    ap_predicate_op205_load_state5;
reg    ap_enable_operation_205;
reg    ap_predicate_op265_store_state6;
reg    ap_enable_operation_265;
reg    ap_predicate_op156_load_state4;
reg    ap_enable_operation_156;
reg    ap_predicate_op207_load_state5;
reg    ap_enable_operation_207;
reg    ap_predicate_op266_store_state6;
reg    ap_enable_operation_266;
reg    ap_predicate_op158_load_state4;
reg    ap_enable_operation_158;
reg    ap_predicate_op209_load_state5;
reg    ap_enable_operation_209;
reg    ap_predicate_op267_store_state6;
reg    ap_enable_operation_267;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [16:0] grp_fu_1527_p00;
wire   [33:0] grp_fu_1527_p20;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 sum_Ixx = 32'd0;
#0 sum_Ixy = 32'd0;
#0 sum_Iyy = 32'd0;
#0 sum_Itx = 32'd0;
#0 sum_Ity = 32'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

hls_ComputeIntegrals_packed3_lines_buffer_10 #(
    .DataWidth( 39 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
packed3_lines_buffer_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(packed3_lines_buffer_10_address0),
    .ce0(packed3_lines_buffer_10_ce0),
    .we0(packed3_lines_buffer_10_we0),
    .d0(packed3_lines_buffer_7_q0),
    .q0(packed3_lines_buffer_10_q0)
);

hls_ComputeIntegrals_packed3_lines_buffer_10 #(
    .DataWidth( 39 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
packed3_lines_buffer_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(packed3_lines_buffer_7_address0),
    .ce0(packed3_lines_buffer_7_ce0),
    .we0(packed3_lines_buffer_7_we0),
    .d0(packed3_lines_buffer_6_q0),
    .q0(packed3_lines_buffer_7_q0)
);

hls_ComputeIntegrals_packed3_lines_buffer_10 #(
    .DataWidth( 39 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
packed3_lines_buffer_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(packed3_lines_buffer_6_address0),
    .ce0(packed3_lines_buffer_6_ce0),
    .we0(packed3_lines_buffer_6_we0),
    .d0(packed3_lines_buffer_5_q0),
    .q0(packed3_lines_buffer_6_q0)
);

hls_ComputeIntegrals_packed3_lines_buffer_10 #(
    .DataWidth( 39 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
packed3_lines_buffer_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(packed3_lines_buffer_5_address0),
    .ce0(packed3_lines_buffer_5_ce0),
    .we0(packed3_lines_buffer_5_we0),
    .d0(packed3_lines_buffer_4_q0),
    .q0(packed3_lines_buffer_5_q0)
);

hls_ComputeIntegrals_packed3_lines_buffer_10 #(
    .DataWidth( 39 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
packed3_lines_buffer_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(packed3_lines_buffer_4_address0),
    .ce0(packed3_lines_buffer_4_ce0),
    .we0(packed3_lines_buffer_4_we0),
    .d0(packed3_lines_buffer_3_q0),
    .q0(packed3_lines_buffer_4_q0)
);

hls_ComputeIntegrals_packed3_lines_buffer_10 #(
    .DataWidth( 39 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
packed3_lines_buffer_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(packed3_lines_buffer_3_address0),
    .ce0(packed3_lines_buffer_3_ce0),
    .we0(packed3_lines_buffer_3_we0),
    .d0(packed3_lines_buffer_2_q0),
    .q0(packed3_lines_buffer_3_q0)
);

hls_ComputeIntegrals_packed3_lines_buffer_10 #(
    .DataWidth( 39 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
packed3_lines_buffer_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(packed3_lines_buffer_2_address0),
    .ce0(packed3_lines_buffer_2_ce0),
    .we0(packed3_lines_buffer_2_we0),
    .d0(packed3_lines_buffer_1_q0),
    .q0(packed3_lines_buffer_2_q0)
);

hls_ComputeIntegrals_packed3_lines_buffer_10 #(
    .DataWidth( 39 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
packed3_lines_buffer_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(packed3_lines_buffer_1_address0),
    .ce0(packed3_lines_buffer_1_ce0),
    .we0(packed3_lines_buffer_1_we0),
    .d0(packed3_lines_buffer_q0),
    .q0(packed3_lines_buffer_1_q0)
);

hls_ComputeIntegrals_packed3_lines_buffer_10 #(
    .DataWidth( 39 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
packed3_lines_buffer_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(packed3_lines_buffer_address0),
    .ce0(packed3_lines_buffer_ce0),
    .we0(packed3_lines_buffer_we0),
    .d0(packed3_lines_buffer_9_q0),
    .q0(packed3_lines_buffer_q0)
);

hls_ComputeIntegrals_packed3_lines_buffer_10 #(
    .DataWidth( 39 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
packed3_lines_buffer_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(packed3_lines_buffer_9_address0),
    .ce0(packed3_lines_buffer_9_ce0),
    .we0(packed3_lines_buffer_9_we0),
    .d0(packed3_lines_buffer_8_q0),
    .q0(packed3_lines_buffer_9_q0)
);

hls_ComputeIntegrals_packed3_lines_buffer_10 #(
    .DataWidth( 39 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
packed3_lines_buffer_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(packed3_lines_buffer_8_address0),
    .ce0(packed3_lines_buffer_8_ce0),
    .we0(packed3_lines_buffer_8_we0),
    .d0(packed3_lines_buffer_8_d0),
    .q0(packed3_lines_buffer_8_q0)
);

hls_ComputeIntegrals_csIxix #(
    .DataWidth( 32 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
csIxix_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(csIxix_address0),
    .ce0(csIxix_ce0),
    .q0(csIxix_q0),
    .address1(csIxix_address1),
    .ce1(csIxix_ce1),
    .we1(csIxix_we1),
    .d1(grp_fu_1595_p3)
);

hls_ComputeIntegrals_csIxix #(
    .DataWidth( 32 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
csIxiy_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(csIxiy_address0),
    .ce0(csIxiy_ce0),
    .q0(csIxiy_q0),
    .address1(csIxiy_address1),
    .ce1(csIxiy_ce1),
    .we1(csIxiy_we1),
    .d1(csIxiyR_fu_1321_p2)
);

hls_ComputeIntegrals_csIxix #(
    .DataWidth( 32 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
csIyiy_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(csIyiy_address0),
    .ce0(csIyiy_ce0),
    .q0(csIyiy_q0),
    .address1(csIyiy_address1),
    .ce1(csIyiy_ce1),
    .we1(csIyiy_we1),
    .d1(csIyiyR_fu_1331_p2)
);

hls_ComputeIntegrals_csIxix #(
    .DataWidth( 32 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
csDix_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(csDix_address0),
    .ce0(csDix_ce0),
    .q0(csDix_q0),
    .address1(csDix_address1),
    .ce1(csDix_ce1),
    .we1(csDix_we1),
    .d1(csDixR_fu_1341_p2)
);

hls_ComputeIntegrals_csIxix #(
    .DataWidth( 32 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
csDiy_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(csDiy_address0),
    .ce0(csDiy_ce0),
    .q0(csDiy_q0),
    .address1(csDiy_address1),
    .ce1(csDiy_ce1),
    .we1(csDiy_we1),
    .d1(csDiyR_fu_1351_p2)
);

hls_ComputeIntegrals_csIxix #(
    .DataWidth( 32 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
cbIxix_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cbIxix_address0),
    .ce0(cbIxix_ce0),
    .q0(cbIxix_q0),
    .address1(cbIxix_address1),
    .ce1(cbIxix_ce1),
    .we1(cbIxix_we1),
    .d1(grp_fu_1595_p3)
);

hls_ComputeIntegrals_csIxix #(
    .DataWidth( 32 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
cbIxiy_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cbIxiy_address0),
    .ce0(cbIxiy_ce0),
    .q0(cbIxiy_q0),
    .address1(cbIxiy_address1),
    .ce1(cbIxiy_ce1),
    .we1(cbIxiy_we1),
    .d1(csIxiyR_fu_1321_p2)
);

hls_ComputeIntegrals_csIxix #(
    .DataWidth( 32 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
cbIyiy_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cbIyiy_address0),
    .ce0(cbIyiy_ce0),
    .q0(cbIyiy_q0),
    .address1(cbIyiy_address1),
    .ce1(cbIyiy_ce1),
    .we1(cbIyiy_we1),
    .d1(csIyiyR_fu_1331_p2)
);

hls_ComputeIntegrals_csIxix #(
    .DataWidth( 32 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
cbDix_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cbDix_address0),
    .ce0(cbDix_ce0),
    .q0(cbDix_q0),
    .address1(cbDix_address1),
    .ce1(cbDix_ce1),
    .we1(cbDix_we1),
    .d1(csDixR_fu_1341_p2)
);

hls_ComputeIntegrals_csIxix #(
    .DataWidth( 32 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
cbDiy_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cbDiy_address0),
    .ce0(cbDiy_ce0),
    .q0(cbDiy_q0),
    .address1(cbDiy_address1),
    .ce1(cbDiy_ce1),
    .we1(cbDiy_we1),
    .d1(csDiyR_fu_1351_p2)
);

hls_LK_am_addmul_16ns_4ns_17ns_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 34 ))
hls_LK_am_addmul_16ns_4ns_17ns_34_1_1_U53(
    .din0(grp_fu_1527_p0),
    .din1(grp_fu_1527_p1),
    .din2(grp_fu_1527_p2),
    .dout(grp_fu_1527_p3)
);

hls_LK_mul_mul_13s_13s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
hls_LK_mul_mul_13s_13s_26_1_1_U54(
    .din0(bot_Iyy_V_fu_1535_p0),
    .din1(bot_Iyy_V_fu_1535_p1),
    .dout(bot_Iyy_V_fu_1535_p2)
);

hls_LK_mul_mul_13s_13s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
hls_LK_mul_mul_13s_13s_26_1_1_U55(
    .din0(bot_Ixy_V_fu_1541_p0),
    .din1(bot_Ixy_V_fu_1541_p1),
    .dout(bot_Ixy_V_fu_1541_p2)
);

hls_LK_mul_mul_13s_13s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
hls_LK_mul_mul_13s_13s_26_1_1_U56(
    .din0(bot_Itx_V_fu_1547_p0),
    .din1(bot_Itx_V_fu_1547_p1),
    .dout(bot_Itx_V_fu_1547_p2)
);

hls_LK_mul_mul_13s_13s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
hls_LK_mul_mul_13s_13s_26_1_1_U57(
    .din0(bot_Ity_V_fu_1553_p0),
    .din1(bot_Ity_V_fu_1553_p1),
    .dout(bot_Ity_V_fu_1553_p2)
);

hls_LK_mac_mulsub_13s_13s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
hls_LK_mac_mulsub_13s_13s_32ns_32_1_1_U58(
    .din0(grp_fu_1559_p0),
    .din1(grp_fu_1559_p1),
    .din2(cbIxix_q0),
    .dout(grp_fu_1559_p3)
);

hls_LK_mac_mulsub_13s_13s_26s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 26 ),
    .dout_WIDTH( 26 ))
hls_LK_mac_mulsub_13s_13s_26s_26_1_1_U59(
    .din0(grp_fu_1567_p0),
    .din1(grp_fu_1567_p1),
    .din2(bot_Iyy_V_reg_1806),
    .dout(grp_fu_1567_p3)
);

hls_LK_mac_mulsub_13s_13s_26s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 26 ),
    .dout_WIDTH( 26 ))
hls_LK_mac_mulsub_13s_13s_26s_26_1_1_U60(
    .din0(grp_fu_1574_p0),
    .din1(grp_fu_1574_p1),
    .din2(bot_Ixy_V_reg_1811),
    .dout(grp_fu_1574_p3)
);

hls_LK_mac_mulsub_13s_13s_26s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 26 ),
    .dout_WIDTH( 26 ))
hls_LK_mac_mulsub_13s_13s_26s_26_1_1_U61(
    .din0(grp_fu_1581_p0),
    .din1(grp_fu_1581_p1),
    .din2(bot_Itx_V_reg_1816),
    .dout(grp_fu_1581_p3)
);

hls_LK_mac_mulsub_13s_13s_26s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 26 ),
    .dout_WIDTH( 26 ))
hls_LK_mac_mulsub_13s_13s_26s_26_1_1_U62(
    .din0(grp_fu_1588_p0),
    .din1(grp_fu_1588_p1),
    .din2(bot_Ity_V_reg_1821),
    .dout(grp_fu_1588_p3)
);

hls_LK_mac_muladd_13s_13s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
hls_LK_mac_muladd_13s_13s_32s_32_1_1_U63(
    .din0(grp_fu_1595_p0),
    .din1(grp_fu_1595_p1),
    .din2(tmp_106_i_reg_1895),
    .dout(grp_fu_1595_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (tmp_91_i_reg_1757 == 1'd0) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_01040_2_i_reg_898 <= p_01040_1_i_reg_835;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_01040_2_i_reg_898 <= b2_V_fu_1483_p1;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_01040_2_i_reg_898 <= ap_phi_reg_pp0_iter0_p_01040_2_i_reg_898;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (tmp_91_i_reg_1757 == 1'd0) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_01048_2_i_reg_888 <= p_01048_1_i_reg_823;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_01048_2_i_reg_888 <= b1_V_fu_1479_p1;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_01048_2_i_reg_888 <= ap_phi_reg_pp0_iter0_p_01048_2_i_reg_888;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (tmp_91_i_reg_1757 == 1'd0) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_01056_2_i_reg_878 <= p_01056_1_i_reg_811;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_01056_2_i_reg_878 <= a22_V_fu_1475_p1;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_01056_2_i_reg_878 <= ap_phi_reg_pp0_iter0_p_01056_2_i_reg_878;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (tmp_91_i_reg_1757 == 1'd0) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_01064_2_i_reg_868 <= p_01064_1_i_reg_799;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_01064_2_i_reg_868 <= a12_V_fu_1471_p1;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_01064_2_i_reg_868 <= ap_phi_reg_pp0_iter0_p_01064_2_i_reg_868;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (tmp_91_i_reg_1757 == 1'd0) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_01072_2_i_reg_858 <= p_01072_1_i_reg_787;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_01072_2_i_reg_858 <= a11_V_fu_1467_p1;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_01072_2_i_reg_858 <= ap_phi_reg_pp0_iter0_p_01072_2_i_reg_858;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        col_i_reg_847 <= col_reg_1953;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        col_i_reg_847 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten_reg_764 <= indvar_flatten_next_reg_1668;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        indvar_flatten_reg_764 <= 33'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        nIdx_2_fu_300 <= nIdx_1_fu_1128_p3;
    end else if ((~((width_out_full_n == 1'b0) | (height_out_full_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        nIdx_2_fu_300 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        row_i_reg_775 <= row_i_mid2_reg_1865;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        row_i_reg_775 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        zIdx_1_i_fu_304 <= p_i_fu_1109_p3;
    end else if ((~((width_out_full_n == 1'b0) | (height_out_full_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        zIdx_1_i_fu_304 <= 32'd4294967285;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bot_Itx_V_reg_1816 <= bot_Itx_V_fu_1547_p2;
        bot_Ity_V_reg_1821 <= bot_Ity_V_fu_1553_p2;
        bot_Ixy_V_reg_1811 <= bot_Ixy_V_fu_1541_p2;
        bot_Iyy_V_reg_1806 <= bot_Iyy_V_fu_1535_p2;
        cbDix_addr_reg_1853 <= tmp_103_i_fu_1089_p1;
        cbDiy_addr_reg_1859 <= tmp_103_i_fu_1089_p1;
        cbIxix_addr_reg_1835 <= tmp_103_i_fu_1089_p1;
        cbIxiy_addr_reg_1841 <= tmp_103_i_fu_1089_p1;
        cbIyiy_addr_reg_1847 <= tmp_103_i_fu_1089_p1;
        tmp_100_i_reg_1800 <= tmp_100_i_fu_1077_p1;
        tmp_103_i_reg_1826 <= tmp_103_i_fu_1089_p1;
        tmp_reg_1766 <= zIdx_1_i_fu_304[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        bound_reg_1651 <= grp_fu_1527_p3;
        tmp_78_i_reg_1640[15 : 0] <= tmp_78_i_fu_921_p1[15 : 0];
        tmp_79_i_reg_1646 <= tmp_79_i_fu_927_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        cbDix_load_reg_1920 <= cbDix_q0;
        cbDiy_load_reg_1930 <= cbDiy_q0;
        cbIxiy_load_reg_1900 <= cbIxiy_q0;
        cbIyiy_load_reg_1910 <= cbIyiy_q0;
        csDixL_reg_1885 <= csDix_q0;
        csDiyL_reg_1890 <= csDiy_q0;
        csIxixL_reg_1870 <= csIxix_q0;
        csIxiyL_reg_1875 <= csIxiy_q0;
        csIyiyL_reg_1880 <= csIyiy_q0;
        tmp_106_i_reg_1895 <= grp_fu_1559_p3;
        tmp_109_i_reg_1905 <= grp_fu_1574_p3;
        tmp_112_i_reg_1915 <= grp_fu_1567_p3;
        tmp_115_i_reg_1925 <= grp_fu_1581_p3;
        tmp_118_i_reg_1935 <= grp_fu_1588_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_950_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        col_i_mid2_reg_1673 <= col_i_mid2_fu_961_p3;
        row_reg_1681 <= row_fu_969_p2;
        tmp_89_i_reg_1698 <= tmp_89_i_fu_1003_p2;
        tmp_91_i_reg_1757 <= tmp_91_i_fu_1023_p2;
        ult1_reg_1688 <= ult1_fu_993_p2;
        ult2_reg_1693 <= ult2_fu_998_p2;
        ult_reg_1761 <= ult_fu_1029_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        col_reg_1953 <= col_fu_1283_p2;
        row_i_mid2_reg_1865 <= row_i_mid2_fu_1199_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_flatten_reg_1664 <= exitcond_flatten_fu_950_p2;
        exitcond_flatten_reg_1664_pp0_iter1_reg <= exitcond_flatten_reg_1664;
        tmp_88_i_reg_1656 <= tmp_88_i_fu_945_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((width_out_full_n == 1'b0) | (height_out_full_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_read_reg_1623 <= height_dout;
        width_read_reg_1632 <= width_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_flatten_next_reg_1668 <= indvar_flatten_next_fu_955_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (exitcond_flatten_reg_1664_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_01040_1_i_reg_835 <= p_01040_2_i_56_fu_1519_p3;
        p_01048_1_i_reg_823 <= p_01048_2_i_55_fu_1511_p3;
        p_01056_1_i_reg_811 <= p_01056_2_i_54_fu_1503_p3;
        p_01064_1_i_reg_799 <= p_01064_2_i_53_fu_1495_p3;
        p_01072_1_i_reg_787 <= p_01072_2_i_52_fu_1487_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_89_i_reg_1698 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_Val2_s_fu_308 <= packed3_lines_buffer_10_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_89_i_fu_1003_p2 == 1'd1) & (exitcond_flatten_fu_950_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        packed3_lines_buffer_11_reg_1702 <= tmp_90_i_fu_1008_p1;
        packed3_lines_buffer_12_reg_1707 <= tmp_90_i_fu_1008_p1;
        packed3_lines_buffer_14_reg_1712 <= tmp_90_i_fu_1008_p1;
        packed3_lines_buffer_16_reg_1717 <= tmp_90_i_fu_1008_p1;
        packed3_lines_buffer_18_reg_1722 <= tmp_90_i_fu_1008_p1;
        packed3_lines_buffer_20_reg_1727 <= tmp_90_i_fu_1008_p1;
        packed3_lines_buffer_22_reg_1732 <= tmp_90_i_fu_1008_p1;
        packed3_lines_buffer_24_reg_1737 <= tmp_90_i_fu_1008_p1;
        packed3_lines_buffer_26_reg_1742 <= tmp_90_i_fu_1008_p1;
        packed3_lines_buffer_28_reg_1747 <= tmp_90_i_fu_1008_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        sum_Itx <= val_assign_6_fu_1433_p2;
        sum_Ity <= val_assign_7_fu_1455_p2;
        sum_Ixx <= val_assign_fu_1367_p2;
        sum_Ixy <= val_assign_4_fu_1389_p2;
        sum_Iyy <= val_assign_5_fu_1411_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_130_i_reg_1940 <= tmp_130_i_fu_1266_p2;
        tmp_132_i_reg_1949 <= tmp_132_i_fu_1277_p2;
    end
end

always @ (*) begin
    if (((tmp_132_i_reg_1949 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        A11_img_V_blk_n = A11_img_V_full_n;
    end else begin
        A11_img_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_132_i_reg_1949 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        A11_img_V_write = 1'b1;
    end else begin
        A11_img_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_132_i_reg_1949 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        A12_img_V_blk_n = A12_img_V_full_n;
    end else begin
        A12_img_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_132_i_reg_1949 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        A12_img_V_write = 1'b1;
    end else begin
        A12_img_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_132_i_reg_1949 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        A22_img_V_blk_n = A22_img_V_full_n;
    end else begin
        A22_img_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_132_i_reg_1949 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        A22_img_V_write = 1'b1;
    end else begin
        A22_img_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_132_i_reg_1949 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        B1_img_V_blk_n = B1_img_V_full_n;
    end else begin
        B1_img_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_132_i_reg_1949 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        B1_img_V_write = 1'b1;
    end else begin
        B1_img_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_132_i_reg_1949 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        B2_img_V_blk_n = B2_img_V_full_n;
    end else begin
        B2_img_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_132_i_reg_1949 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        B2_img_V_write = 1'b1;
    end else begin
        B2_img_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        It_img_V_blk_n = It_img_V_empty_n;
    end else begin
        It_img_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_predicate_op124_read_state4 == 1'b1))) begin
        It_img_V_read = 1'b1;
    end else begin
        It_img_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Ix_img_V_blk_n = Ix_img_V_empty_n;
    end else begin
        Ix_img_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_predicate_op122_read_state4 == 1'b1))) begin
        Ix_img_V_read = 1'b1;
    end else begin
        Ix_img_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Iy_img_V_blk_n = Iy_img_V_empty_n;
    end else begin
        Iy_img_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_predicate_op123_read_state4 == 1'b1))) begin
        Iy_img_V_read = 1'b1;
    end else begin
        Iy_img_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_950_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_col_i_phi_fu_851_p4 = col_reg_1953;
    end else begin
        ap_phi_mux_col_i_phi_fu_851_p4 = col_i_reg_847;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten_phi_fu_768_p4 = indvar_flatten_next_reg_1668;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_768_p4 = indvar_flatten_reg_764;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_row_i_phi_fu_779_p4 = row_i_mid2_reg_1865;
    end else begin
        ap_phi_mux_row_i_phi_fu_779_p4 = row_i_reg_775;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        cbDix_ce0 = 1'b1;
    end else begin
        cbDix_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        cbDix_ce1 = 1'b1;
    end else begin
        cbDix_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        cbDix_we1 = 1'b1;
    end else begin
        cbDix_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        cbDiy_ce0 = 1'b1;
    end else begin
        cbDiy_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        cbDiy_ce1 = 1'b1;
    end else begin
        cbDiy_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        cbDiy_we1 = 1'b1;
    end else begin
        cbDiy_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        cbIxix_ce0 = 1'b1;
    end else begin
        cbIxix_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        cbIxix_ce1 = 1'b1;
    end else begin
        cbIxix_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        cbIxix_we1 = 1'b1;
    end else begin
        cbIxix_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        cbIxiy_ce0 = 1'b1;
    end else begin
        cbIxiy_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        cbIxiy_ce1 = 1'b1;
    end else begin
        cbIxiy_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        cbIxiy_we1 = 1'b1;
    end else begin
        cbIxiy_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        cbIyiy_ce0 = 1'b1;
    end else begin
        cbIyiy_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        cbIyiy_ce1 = 1'b1;
    end else begin
        cbIyiy_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        cbIyiy_we1 = 1'b1;
    end else begin
        cbIyiy_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        csDix_ce0 = 1'b1;
    end else begin
        csDix_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        csDix_ce1 = 1'b1;
    end else begin
        csDix_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        csDix_we1 = 1'b1;
    end else begin
        csDix_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        csDiy_ce0 = 1'b1;
    end else begin
        csDiy_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        csDiy_ce1 = 1'b1;
    end else begin
        csDiy_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        csDiy_we1 = 1'b1;
    end else begin
        csDiy_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        csIxix_ce0 = 1'b1;
    end else begin
        csIxix_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        csIxix_ce1 = 1'b1;
    end else begin
        csIxix_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        csIxix_we1 = 1'b1;
    end else begin
        csIxix_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        csIxiy_ce0 = 1'b1;
    end else begin
        csIxiy_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        csIxiy_ce1 = 1'b1;
    end else begin
        csIxiy_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        csIxiy_we1 = 1'b1;
    end else begin
        csIxiy_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        csIyiy_ce0 = 1'b1;
    end else begin
        csIyiy_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        csIyiy_ce1 = 1'b1;
    end else begin
        csIyiy_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        csIyiy_we1 = 1'b1;
    end else begin
        csIyiy_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_blk_n = height_empty_n;
    end else begin
        height_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_out_blk_n = height_out_full_n;
    end else begin
        height_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((width_out_full_n == 1'b0) | (height_out_full_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_out_write = 1'b1;
    end else begin
        height_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((width_out_full_n == 1'b0) | (height_out_full_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_read = 1'b1;
    end else begin
        height_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            packed3_lines_buffer_10_address0 = packed3_lines_buffer_11_reg_1702;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            packed3_lines_buffer_10_address0 = tmp_90_i_fu_1008_p1;
        end else begin
            packed3_lines_buffer_10_address0 = 'bx;
        end
    end else begin
        packed3_lines_buffer_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        packed3_lines_buffer_10_ce0 = 1'b1;
    end else begin
        packed3_lines_buffer_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_89_i_reg_1698 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        packed3_lines_buffer_10_we0 = 1'b1;
    end else begin
        packed3_lines_buffer_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            packed3_lines_buffer_1_address0 = packed3_lines_buffer_24_reg_1737;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            packed3_lines_buffer_1_address0 = tmp_90_i_fu_1008_p1;
        end else begin
            packed3_lines_buffer_1_address0 = 'bx;
        end
    end else begin
        packed3_lines_buffer_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        packed3_lines_buffer_1_ce0 = 1'b1;
    end else begin
        packed3_lines_buffer_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_89_i_reg_1698 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        packed3_lines_buffer_1_we0 = 1'b1;
    end else begin
        packed3_lines_buffer_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            packed3_lines_buffer_2_address0 = packed3_lines_buffer_22_reg_1732;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            packed3_lines_buffer_2_address0 = tmp_90_i_fu_1008_p1;
        end else begin
            packed3_lines_buffer_2_address0 = 'bx;
        end
    end else begin
        packed3_lines_buffer_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        packed3_lines_buffer_2_ce0 = 1'b1;
    end else begin
        packed3_lines_buffer_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_89_i_reg_1698 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        packed3_lines_buffer_2_we0 = 1'b1;
    end else begin
        packed3_lines_buffer_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            packed3_lines_buffer_3_address0 = packed3_lines_buffer_20_reg_1727;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            packed3_lines_buffer_3_address0 = tmp_90_i_fu_1008_p1;
        end else begin
            packed3_lines_buffer_3_address0 = 'bx;
        end
    end else begin
        packed3_lines_buffer_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        packed3_lines_buffer_3_ce0 = 1'b1;
    end else begin
        packed3_lines_buffer_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_89_i_reg_1698 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        packed3_lines_buffer_3_we0 = 1'b1;
    end else begin
        packed3_lines_buffer_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            packed3_lines_buffer_4_address0 = packed3_lines_buffer_18_reg_1722;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            packed3_lines_buffer_4_address0 = tmp_90_i_fu_1008_p1;
        end else begin
            packed3_lines_buffer_4_address0 = 'bx;
        end
    end else begin
        packed3_lines_buffer_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        packed3_lines_buffer_4_ce0 = 1'b1;
    end else begin
        packed3_lines_buffer_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_89_i_reg_1698 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        packed3_lines_buffer_4_we0 = 1'b1;
    end else begin
        packed3_lines_buffer_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            packed3_lines_buffer_5_address0 = packed3_lines_buffer_16_reg_1717;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            packed3_lines_buffer_5_address0 = tmp_90_i_fu_1008_p1;
        end else begin
            packed3_lines_buffer_5_address0 = 'bx;
        end
    end else begin
        packed3_lines_buffer_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        packed3_lines_buffer_5_ce0 = 1'b1;
    end else begin
        packed3_lines_buffer_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_89_i_reg_1698 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        packed3_lines_buffer_5_we0 = 1'b1;
    end else begin
        packed3_lines_buffer_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            packed3_lines_buffer_6_address0 = packed3_lines_buffer_14_reg_1712;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            packed3_lines_buffer_6_address0 = tmp_90_i_fu_1008_p1;
        end else begin
            packed3_lines_buffer_6_address0 = 'bx;
        end
    end else begin
        packed3_lines_buffer_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        packed3_lines_buffer_6_ce0 = 1'b1;
    end else begin
        packed3_lines_buffer_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_89_i_reg_1698 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        packed3_lines_buffer_6_we0 = 1'b1;
    end else begin
        packed3_lines_buffer_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            packed3_lines_buffer_7_address0 = packed3_lines_buffer_12_reg_1707;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            packed3_lines_buffer_7_address0 = tmp_90_i_fu_1008_p1;
        end else begin
            packed3_lines_buffer_7_address0 = 'bx;
        end
    end else begin
        packed3_lines_buffer_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        packed3_lines_buffer_7_ce0 = 1'b1;
    end else begin
        packed3_lines_buffer_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_89_i_reg_1698 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        packed3_lines_buffer_7_we0 = 1'b1;
    end else begin
        packed3_lines_buffer_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            packed3_lines_buffer_8_address0 = tmp_94_i_fu_1056_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            packed3_lines_buffer_8_address0 = tmp_90_i_fu_1008_p1;
        end else begin
            packed3_lines_buffer_8_address0 = 'bx;
        end
    end else begin
        packed3_lines_buffer_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        packed3_lines_buffer_8_ce0 = 1'b1;
    end else begin
        packed3_lines_buffer_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        packed3_lines_buffer_8_we0 = 1'b1;
    end else begin
        packed3_lines_buffer_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            packed3_lines_buffer_9_address0 = packed3_lines_buffer_28_reg_1747;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            packed3_lines_buffer_9_address0 = tmp_90_i_fu_1008_p1;
        end else begin
            packed3_lines_buffer_9_address0 = 'bx;
        end
    end else begin
        packed3_lines_buffer_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        packed3_lines_buffer_9_ce0 = 1'b1;
    end else begin
        packed3_lines_buffer_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_89_i_reg_1698 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        packed3_lines_buffer_9_we0 = 1'b1;
    end else begin
        packed3_lines_buffer_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            packed3_lines_buffer_address0 = packed3_lines_buffer_26_reg_1742;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            packed3_lines_buffer_address0 = tmp_90_i_fu_1008_p1;
        end else begin
            packed3_lines_buffer_address0 = 'bx;
        end
    end else begin
        packed3_lines_buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        packed3_lines_buffer_ce0 = 1'b1;
    end else begin
        packed3_lines_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_89_i_reg_1698 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        packed3_lines_buffer_we0 = 1'b1;
    end else begin
        packed3_lines_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_blk_n = width_empty_n;
    end else begin
        width_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_out_blk_n = width_out_full_n;
    end else begin
        width_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((width_out_full_n == 1'b0) | (height_out_full_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_out_write = 1'b1;
    end else begin
        width_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((width_out_full_n == 1'b0) | (height_out_full_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_read = 1'b1;
    end else begin
        width_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((width_out_full_n == 1'b0) | (height_out_full_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (exitcond_flatten_fu_950_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (exitcond_flatten_fu_950_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A11_img_V_din = ((tmp_130_i_reg_1940[0:0] === 1'b1) ? 34'd0 : ap_phi_reg_pp0_iter1_p_01072_2_i_reg_858);

assign A12_img_V_din = ((tmp_130_i_reg_1940[0:0] === 1'b1) ? 34'd0 : ap_phi_reg_pp0_iter1_p_01064_2_i_reg_868);

assign A22_img_V_din = ((tmp_130_i_reg_1940[0:0] === 1'b1) ? 34'd0 : ap_phi_reg_pp0_iter1_p_01056_2_i_reg_878);

assign B1_img_V_din = ((tmp_130_i_reg_1940[0:0] === 1'b1) ? 34'd0 : ap_phi_reg_pp0_iter1_p_01048_2_i_reg_888);

assign B2_img_V_din = ((tmp_130_i_reg_1940[0:0] === 1'b1) ? 34'd0 : ap_phi_reg_pp0_iter1_p_01040_2_i_reg_898);

assign a11_V_fu_1467_p1 = val_assign_fu_1367_p2;

assign a12_V_fu_1471_p1 = val_assign_4_fu_1389_p2;

assign a22_V_fu_1475_p1 = val_assign_5_fu_1411_p2;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_block_pp0 = (((ap_ST_fsm_pp0_stage2 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage2_subdone)) | ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone)) | ((ap_ST_fsm_pp0_stage1 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage1_subdone)));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_132_i_reg_1949 == 1'd1) & (1'b0 == B2_img_V_full_n)) | ((tmp_132_i_reg_1949 == 1'd1) & (1'b0 == B1_img_V_full_n)) | ((tmp_132_i_reg_1949 == 1'd1) & (1'b0 == A22_img_V_full_n)) | ((tmp_132_i_reg_1949 == 1'd1) & (1'b0 == A12_img_V_full_n)) | ((tmp_132_i_reg_1949 == 1'd1) & (1'b0 == A11_img_V_full_n)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((1'b0 == It_img_V_empty_n) & (ap_predicate_op124_read_state4 == 1'b1)) | ((1'b0 == Iy_img_V_empty_n) & (ap_predicate_op123_read_state4 == 1'b1)) | ((1'b0 == Ix_img_V_empty_n) & (ap_predicate_op122_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_132_i_reg_1949 == 1'd1) & (1'b0 == B2_img_V_full_n)) | ((tmp_132_i_reg_1949 == 1'd1) & (1'b0 == B1_img_V_full_n)) | ((tmp_132_i_reg_1949 == 1'd1) & (1'b0 == A22_img_V_full_n)) | ((tmp_132_i_reg_1949 == 1'd1) & (1'b0 == A12_img_V_full_n)) | ((tmp_132_i_reg_1949 == 1'd1) & (1'b0 == A11_img_V_full_n)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((1'b0 == It_img_V_empty_n) & (ap_predicate_op124_read_state4 == 1'b1)) | ((1'b0 == Iy_img_V_empty_n) & (ap_predicate_op123_read_state4 == 1'b1)) | ((1'b0 == Ix_img_V_empty_n) & (ap_predicate_op122_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_132_i_reg_1949 == 1'd1) & (1'b0 == B2_img_V_full_n)) | ((tmp_132_i_reg_1949 == 1'd1) & (1'b0 == B1_img_V_full_n)) | ((tmp_132_i_reg_1949 == 1'd1) & (1'b0 == A22_img_V_full_n)) | ((tmp_132_i_reg_1949 == 1'd1) & (1'b0 == A12_img_V_full_n)) | ((tmp_132_i_reg_1949 == 1'd1) & (1'b0 == A11_img_V_full_n)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((1'b0 == It_img_V_empty_n) & (ap_predicate_op124_read_state4 == 1'b1)) | ((1'b0 == Iy_img_V_empty_n) & (ap_predicate_op123_read_state4 == 1'b1)) | ((1'b0 == Ix_img_V_empty_n) & (ap_predicate_op122_read_state4 == 1'b1)))));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((width_out_full_n == 1'b0) | (height_out_full_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage1_iter0 = (((1'b0 == It_img_V_empty_n) & (ap_predicate_op124_read_state4 == 1'b1)) | ((1'b0 == Iy_img_V_empty_n) & (ap_predicate_op123_read_state4 == 1'b1)) | ((1'b0 == Ix_img_V_empty_n) & (ap_predicate_op122_read_state4 == 1'b1)));
end

assign ap_block_state5_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage1_iter1 = (((tmp_132_i_reg_1949 == 1'd1) & (1'b0 == B2_img_V_full_n)) | ((tmp_132_i_reg_1949 == 1'd1) & (1'b0 == B1_img_V_full_n)) | ((tmp_132_i_reg_1949 == 1'd1) & (1'b0 == A22_img_V_full_n)) | ((tmp_132_i_reg_1949 == 1'd1) & (1'b0 == A12_img_V_full_n)) | ((tmp_132_i_reg_1949 == 1'd1) & (1'b0 == A11_img_V_full_n)));
end

always @ (*) begin
    ap_enable_operation_132 = (ap_predicate_op132_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_134 = (ap_predicate_op134_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_136 = (ap_predicate_op136_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_138 = (ap_predicate_op138_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_140 = (ap_predicate_op140_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_150 = (ap_predicate_op150_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_152 = (ap_predicate_op152_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_154 = (ap_predicate_op154_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_156 = (ap_predicate_op156_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_158 = (ap_predicate_op158_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_184 = (ap_predicate_op184_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_185 = (ap_predicate_op185_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_186 = (ap_predicate_op186_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_187 = (ap_predicate_op187_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_188 = (ap_predicate_op188_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_200 = (ap_predicate_op200_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_203 = (ap_predicate_op203_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_205 = (ap_predicate_op205_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_207 = (ap_predicate_op207_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_209 = (ap_predicate_op209_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_263 = (ap_predicate_op263_store_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_264 = (ap_predicate_op264_store_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_265 = (ap_predicate_op265_store_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_266 = (ap_predicate_op266_store_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_267 = (ap_predicate_op267_store_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_269 = (ap_predicate_op269_store_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_271 = (ap_predicate_op271_store_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_273 = (ap_predicate_op273_store_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_275 = (ap_predicate_op275_store_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_277 = (ap_predicate_op277_store_state6 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state4_pp0_iter0_stage1 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_enable_state5_pp0_iter0_stage2 = ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_enable_state6_pp0_iter1_stage0 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_phi_reg_pp0_iter0_p_01040_2_i_reg_898 = 'bx;

assign ap_phi_reg_pp0_iter0_p_01048_2_i_reg_888 = 'bx;

assign ap_phi_reg_pp0_iter0_p_01056_2_i_reg_878 = 'bx;

assign ap_phi_reg_pp0_iter0_p_01064_2_i_reg_868 = 'bx;

assign ap_phi_reg_pp0_iter0_p_01072_2_i_reg_858 = 'bx;

always @ (*) begin
    ap_predicate_op122_read_state4 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

always @ (*) begin
    ap_predicate_op123_read_state4 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

always @ (*) begin
    ap_predicate_op124_read_state4 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

always @ (*) begin
    ap_predicate_op132_load_state4 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

always @ (*) begin
    ap_predicate_op134_load_state4 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

always @ (*) begin
    ap_predicate_op136_load_state4 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

always @ (*) begin
    ap_predicate_op138_load_state4 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

always @ (*) begin
    ap_predicate_op140_load_state4 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

always @ (*) begin
    ap_predicate_op150_load_state4 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

always @ (*) begin
    ap_predicate_op152_load_state4 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

always @ (*) begin
    ap_predicate_op154_load_state4 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

always @ (*) begin
    ap_predicate_op156_load_state4 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

always @ (*) begin
    ap_predicate_op158_load_state4 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

always @ (*) begin
    ap_predicate_op184_load_state5 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

always @ (*) begin
    ap_predicate_op185_load_state5 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

always @ (*) begin
    ap_predicate_op186_load_state5 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

always @ (*) begin
    ap_predicate_op187_load_state5 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

always @ (*) begin
    ap_predicate_op188_load_state5 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

always @ (*) begin
    ap_predicate_op200_load_state5 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

always @ (*) begin
    ap_predicate_op203_load_state5 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

always @ (*) begin
    ap_predicate_op205_load_state5 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

always @ (*) begin
    ap_predicate_op207_load_state5 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

always @ (*) begin
    ap_predicate_op209_load_state5 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

always @ (*) begin
    ap_predicate_op263_store_state6 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

always @ (*) begin
    ap_predicate_op264_store_state6 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

always @ (*) begin
    ap_predicate_op265_store_state6 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

always @ (*) begin
    ap_predicate_op266_store_state6 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

always @ (*) begin
    ap_predicate_op267_store_state6 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

always @ (*) begin
    ap_predicate_op269_store_state6 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

always @ (*) begin
    ap_predicate_op271_store_state6 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

always @ (*) begin
    ap_predicate_op273_store_state6 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

always @ (*) begin
    ap_predicate_op275_store_state6 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

always @ (*) begin
    ap_predicate_op277_store_state6 = ((tmp_91_i_reg_1757 == 1'd1) & (exitcond_flatten_reg_1664 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign b1_V_fu_1479_p1 = val_assign_6_fu_1433_p2;

assign b2_V_fu_1483_p1 = val_assign_7_fu_1455_p2;

assign bot_Itx_V_fu_1547_p0 = tmp_102_i_fu_1085_p1;

assign bot_Itx_V_fu_1547_p1 = tmp_100_i_fu_1077_p1;

assign bot_Ity_V_fu_1553_p0 = tmp_102_i_fu_1085_p1;

assign bot_Ity_V_fu_1553_p1 = tmp_101_i_fu_1081_p1;

assign bot_Ixy_V_fu_1541_p0 = tmp_101_i_fu_1081_p1;

assign bot_Ixy_V_fu_1541_p1 = tmp_100_i_fu_1077_p1;

assign bot_Iyy_V_fu_1535_p0 = tmp_101_i_fu_1081_p1;

assign bot_Iyy_V_fu_1535_p1 = tmp_101_i_fu_1081_p1;

assign cbDix_address0 = tmp_103_i_fu_1089_p1;

assign cbDix_address1 = cbDix_addr_reg_1853;

assign cbDiy_address0 = tmp_103_i_fu_1089_p1;

assign cbDiy_address1 = cbDiy_addr_reg_1859;

assign cbIxix_address0 = tmp_103_i_fu_1089_p1;

assign cbIxix_address1 = cbIxix_addr_reg_1835;

assign cbIxiy_address0 = tmp_103_i_fu_1089_p1;

assign cbIxiy_address1 = cbIxiy_addr_reg_1841;

assign cbIyiy_address0 = tmp_103_i_fu_1089_p1;

assign cbIyiy_address1 = cbIyiy_addr_reg_1847;

assign col_fu_1283_p2 = (col_i_mid2_reg_1673 + 16'd1);

assign col_i_mid2_fu_961_p3 = ((tmp_88_i_fu_945_p2[0:0] === 1'b1) ? ap_phi_mux_col_i_phi_fu_851_p4 : 16'd0);

assign csDixL1_i_fu_1306_p3 = ((tmp_reg_1766[0:0] === 1'b1) ? 32'd0 : csDixL_reg_1885);

assign csDixR_fu_1341_p2 = ($signed(tmp_115_cast_i_fu_1338_p1) + $signed(cbDix_load_reg_1920));

assign csDix_address0 = tmp_96_i_fu_1068_p1;

assign csDix_address1 = tmp_103_i_reg_1826;

assign csDiyL1_i_fu_1312_p3 = ((tmp_reg_1766[0:0] === 1'b1) ? 32'd0 : csDiyL_reg_1890);

assign csDiyR_fu_1351_p2 = ($signed(tmp_118_cast_i_fu_1348_p1) + $signed(cbDiy_load_reg_1930));

assign csDiy_address0 = tmp_96_i_fu_1068_p1;

assign csDiy_address1 = tmp_103_i_reg_1826;

assign csIxixL1_i_fu_1288_p3 = ((tmp_reg_1766[0:0] === 1'b1) ? 32'd0 : csIxixL_reg_1870);

assign csIxix_address0 = tmp_96_i_fu_1068_p1;

assign csIxix_address1 = tmp_103_i_reg_1826;

assign csIxiyL1_i_fu_1294_p3 = ((tmp_reg_1766[0:0] === 1'b1) ? 32'd0 : csIxiyL_reg_1875);

assign csIxiyR_fu_1321_p2 = ($signed(tmp_109_cast_i_fu_1318_p1) + $signed(cbIxiy_load_reg_1900));

assign csIxiy_address0 = tmp_96_i_fu_1068_p1;

assign csIxiy_address1 = tmp_103_i_reg_1826;

assign csIyiyL1_i_fu_1300_p3 = ((tmp_reg_1766[0:0] === 1'b1) ? 32'd0 : csIyiyL_reg_1880);

assign csIyiyR_fu_1331_p2 = ($signed(tmp_112_cast_i_fu_1328_p1) + $signed(cbIyiy_load_reg_1910));

assign csIyiy_address0 = tmp_96_i_fu_1068_p1;

assign csIyiy_address1 = tmp_103_i_reg_1826;

assign exitcond_flatten_fu_950_p2 = ((indvar_flatten_cast_fu_937_p1 == bound_reg_1651) ? 1'b1 : 1'b0);

assign grp_fu_1527_p0 = grp_fu_1527_p00;

assign grp_fu_1527_p00 = height_read_reg_1623;

assign grp_fu_1527_p1 = 17'd5;

assign grp_fu_1527_p2 = grp_fu_1527_p20;

assign grp_fu_1527_p20 = tmp_79_i_fu_927_p2;

assign grp_fu_1559_p0 = tmp_97_i_fu_1232_p1;

assign grp_fu_1559_p1 = tmp_97_i_fu_1232_p1;

assign grp_fu_1567_p0 = tmp_98_i_fu_1236_p1;

assign grp_fu_1567_p1 = tmp_98_i_fu_1236_p1;

assign grp_fu_1574_p0 = tmp_98_i_fu_1236_p1;

assign grp_fu_1574_p1 = tmp_97_i_fu_1232_p1;

assign grp_fu_1581_p0 = tmp_99_i_fu_1240_p1;

assign grp_fu_1581_p1 = tmp_97_i_fu_1232_p1;

assign grp_fu_1588_p0 = tmp_99_i_fu_1240_p1;

assign grp_fu_1588_p1 = tmp_98_i_fu_1236_p1;

assign grp_fu_1595_p0 = tmp_100_i_reg_1800;

assign grp_fu_1595_p1 = tmp_100_i_reg_1800;

assign height_out_din = height_dout;

assign indvar_flatten_cast_fu_937_p1 = ap_phi_mux_indvar_flatten_phi_fu_768_p4;

assign indvar_flatten_next_fu_955_p2 = (ap_phi_mux_indvar_flatten_phi_fu_768_p4 + 33'd1);

assign nIdx_1_fu_1128_p3 = ((tmp_125_i_fu_1123_p2[0:0] === 1'b1) ? 32'd0 : nIdx_fu_1117_p2);

assign nIdx_fu_1117_p1 = nIdx_2_fu_300;

assign nIdx_fu_1117_p2 = ($signed(32'd1) + $signed(nIdx_fu_1117_p1));

assign p_01040_2_i_56_fu_1519_p3 = ((tmp_130_i_reg_1940[0:0] === 1'b1) ? 34'd0 : ap_phi_reg_pp0_iter1_p_01040_2_i_reg_898);

assign p_01048_2_i_55_fu_1511_p3 = ((tmp_130_i_reg_1940[0:0] === 1'b1) ? 34'd0 : ap_phi_reg_pp0_iter1_p_01048_2_i_reg_888);

assign p_01056_2_i_54_fu_1503_p3 = ((tmp_130_i_reg_1940[0:0] === 1'b1) ? 34'd0 : ap_phi_reg_pp0_iter1_p_01056_2_i_reg_878);

assign p_01064_2_i_53_fu_1495_p3 = ((tmp_130_i_reg_1940[0:0] === 1'b1) ? 34'd0 : ap_phi_reg_pp0_iter1_p_01064_2_i_reg_868);

assign p_01072_2_i_52_fu_1487_p3 = ((tmp_130_i_reg_1940[0:0] === 1'b1) ? 34'd0 : ap_phi_reg_pp0_iter1_p_01072_2_i_reg_858);

assign p_Result_s_fu_1045_p1 = It_img_V_dout;

assign p_Result_s_fu_1045_p2 = Iy_img_V_dout;

assign p_Result_s_fu_1045_p3 = Ix_img_V_dout;

assign p_i_fu_1109_p3 = ((tmp_124_i_fu_1104_p2[0:0] === 1'b1) ? 32'd0 : zIdx_fu_1098_p2);

assign packed3_lines_buffer_8_d0 = {{{p_Result_s_fu_1045_p1}, {p_Result_s_fu_1045_p2}}, {p_Result_s_fu_1045_p3}};

assign rev1_fu_1164_p2 = (ult1_reg_1688 ^ 1'd1);

assign rev2_fu_1169_p2 = (ult2_reg_1693 ^ 1'd1);

assign rev_fu_1249_p2 = (ult_reg_1761 ^ 1'd1);

assign row_fu_969_p2 = (ap_phi_mux_row_i_phi_fu_779_p4 + 16'd1);

assign row_i_mid2_fu_1199_p3 = ((tmp_88_i_reg_1656[0:0] === 1'b1) ? row_i_reg_775 : row_reg_1681);

assign start_out = real_start;

assign t_der_V_1_fu_1222_p4 = {{p_Val2_s_fu_308[38:26]}};

assign tmp1_fu_1254_p2 = (tmp_85_i_mid2_fu_1174_p3 & tmp_126_i_fu_1244_p2);

assign tmp2_fu_1260_p2 = (tmp_84_i_mid2_fu_1157_p3 & rev_fu_1249_p2);

assign tmp_100_i_fu_1077_p0 = Ix_img_V_dout;

assign tmp_100_i_fu_1077_p1 = tmp_100_i_fu_1077_p0;

assign tmp_101_i_fu_1081_p0 = Iy_img_V_dout;

assign tmp_101_i_fu_1081_p1 = tmp_101_i_fu_1081_p0;

assign tmp_102_i_fu_1085_p0 = It_img_V_dout;

assign tmp_102_i_fu_1085_p1 = tmp_102_i_fu_1085_p0;

assign tmp_103_i_fu_1089_p0 = nIdx_2_fu_300;

assign tmp_103_i_fu_1089_p1 = tmp_103_i_fu_1089_p0;

assign tmp_109_cast_i_fu_1318_p1 = tmp_109_i_reg_1905;

assign tmp_112_cast_i_fu_1328_p1 = tmp_112_i_reg_1915;

assign tmp_115_cast_i_fu_1338_p1 = tmp_115_i_reg_1925;

assign tmp_118_cast_i_fu_1348_p1 = tmp_118_i_reg_1935;

assign tmp_119_i_fu_1362_p2 = (grp_fu_1595_p3 - csIxixL1_i_fu_1288_p3);

assign tmp_120_i_fu_1383_p2 = (csIxiyR_fu_1321_p2 - csIxiyL1_i_fu_1294_p3);

assign tmp_121_i_fu_1405_p2 = (csIyiyR_fu_1331_p2 - csIyiyL1_i_fu_1300_p3);

assign tmp_122_i_fu_1427_p2 = (csDixR_fu_1341_p2 - csDixL1_i_fu_1306_p3);

assign tmp_123_i_fu_1449_p2 = (csDiyR_fu_1351_p2 - csDiyL1_i_fu_1312_p3);

assign tmp_124_i_fu_1104_p2 = ((zIdx_fu_1098_p2 == tmp_78_i_reg_1640) ? 1'b1 : 1'b0);

assign tmp_125_i_fu_1123_p2 = ((nIdx_fu_1117_p2 == tmp_78_i_reg_1640) ? 1'b1 : 1'b0);

assign tmp_126_i_fu_1244_p2 = ((col_i_mid2_reg_1673 < 16'd5) ? 1'b1 : 1'b0);

assign tmp_130_i_fu_1266_p2 = (tmp2_fu_1260_p2 & tmp1_fu_1254_p2);

assign tmp_131_i_fu_1272_p2 = ((col_i_mid2_reg_1673 > 16'd4) ? 1'b1 : 1'b0);

assign tmp_132_i_fu_1277_p2 = (tmp_86_i_mid2_fu_1192_p3 & tmp_131_i_fu_1272_p2);

assign tmp_78_cast_i_fu_924_p1 = width_read_reg_1632;

assign tmp_78_i_fu_921_p1 = width_read_reg_1632;

assign tmp_79_i_fu_927_p2 = (tmp_78_cast_i_fu_924_p1 + 17'd5);

assign tmp_82_i_fu_980_p2 = ((ap_phi_mux_row_i_phi_fu_779_p4 < height_read_reg_1623) ? 1'b1 : 1'b0);

assign tmp_82_i_mid1_fu_975_p2 = ((row_fu_969_p2 < height_read_reg_1623) ? 1'b1 : 1'b0);

assign tmp_82_i_mid2_fu_985_p3 = ((tmp_88_i_fu_945_p2[0:0] === 1'b1) ? tmp_82_i_fu_980_p2 : tmp_82_i_mid1_fu_975_p2);

assign tmp_84_i_fu_1151_p2 = ((row_i_reg_775 < 16'd5) ? 1'b1 : 1'b0);

assign tmp_84_i_mid1_fu_1146_p2 = ((row_reg_1681 < 16'd5) ? 1'b1 : 1'b0);

assign tmp_84_i_mid2_fu_1157_p3 = ((tmp_88_i_reg_1656[0:0] === 1'b1) ? tmp_84_i_fu_1151_p2 : tmp_84_i_mid1_fu_1146_p2);

assign tmp_85_i_mid2_fu_1174_p3 = ((tmp_88_i_reg_1656[0:0] === 1'b1) ? rev2_fu_1169_p2 : rev1_fu_1164_p2);

assign tmp_86_i_fu_1186_p2 = ((row_i_reg_775 > 16'd4) ? 1'b1 : 1'b0);

assign tmp_86_i_mid1_fu_1181_p2 = ((row_reg_1681 > 16'd4) ? 1'b1 : 1'b0);

assign tmp_86_i_mid2_fu_1192_p3 = ((tmp_88_i_reg_1656[0:0] === 1'b1) ? tmp_86_i_fu_1186_p2 : tmp_86_i_mid1_fu_1181_p2);

assign tmp_87_cast_i_fu_941_p1 = ap_phi_mux_col_i_phi_fu_851_p4;

assign tmp_88_i_fu_945_p2 = ((tmp_87_cast_i_fu_941_p1 < tmp_79_i_reg_1646) ? 1'b1 : 1'b0);

assign tmp_89_i_fu_1003_p2 = ((col_i_mid2_fu_961_p3 < width_read_reg_1632) ? 1'b1 : 1'b0);

assign tmp_90_i_fu_1008_p1 = col_i_mid2_fu_961_p3;

assign tmp_91_i_fu_1023_p2 = (tmp_89_i_fu_1003_p2 & tmp_82_i_mid2_fu_985_p3);

assign tmp_94_i_fu_1056_p1 = col_i_mid2_reg_1673;

assign tmp_96_i_fu_1068_p1 = zIdx_1_i_fu_304;

assign tmp_97_i_fu_1232_p1 = $signed(x_der_V_1_fu_1208_p1);

assign tmp_98_i_fu_1236_p1 = $signed(y_der_V_1_fu_1212_p4);

assign tmp_99_i_fu_1240_p1 = $signed(t_der_V_1_fu_1222_p4);

assign ult1_fu_993_p2 = ((row_fu_969_p2 < height_read_reg_1623) ? 1'b1 : 1'b0);

assign ult2_fu_998_p2 = ((ap_phi_mux_row_i_phi_fu_779_p4 < height_read_reg_1623) ? 1'b1 : 1'b0);

assign ult_fu_1029_p2 = ((col_i_mid2_fu_961_p3 < width_read_reg_1632) ? 1'b1 : 1'b0);

assign val_assign_4_fu_1389_p2 = (tmp_120_i_fu_1383_p2 + sum_Ixy);

assign val_assign_5_fu_1411_p2 = (tmp_121_i_fu_1405_p2 + sum_Iyy);

assign val_assign_6_fu_1433_p2 = (tmp_122_i_fu_1427_p2 + sum_Itx);

assign val_assign_7_fu_1455_p2 = (tmp_123_i_fu_1449_p2 + sum_Ity);

assign val_assign_fu_1367_p2 = (tmp_119_i_fu_1362_p2 + sum_Ixx);

assign width_out_din = width_dout;

assign x_der_V_1_fu_1208_p1 = p_Val2_s_fu_308[12:0];

assign y_der_V_1_fu_1212_p4 = {{p_Val2_s_fu_308[25:13]}};

assign zIdx_fu_1098_p2 = (32'd1 + zIdx_1_i_fu_304);

always @ (posedge ap_clk) begin
    tmp_78_i_reg_1640[31:16] <= 16'b0000000000000000;
end

endmodule //hls_ComputeIntegrals
