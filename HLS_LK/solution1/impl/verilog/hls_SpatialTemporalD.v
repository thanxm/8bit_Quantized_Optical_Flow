// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module hls_SpatialTemporalD (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        inp1_img_V_dout,
        inp1_img_V_empty_n,
        inp1_img_V_read,
        inp2_img_V_dout,
        inp2_img_V_empty_n,
        inp2_img_V_read,
        out_Ix_img_V_din,
        out_Ix_img_V_full_n,
        out_Ix_img_V_write,
        out_Iy_img_V_din,
        out_Iy_img_V_full_n,
        out_Iy_img_V_write,
        out_It_img_V_din,
        out_It_img_V_full_n,
        out_It_img_V_write,
        height_dout,
        height_empty_n,
        height_read,
        width_dout,
        width_empty_n,
        width_read,
        height_out_din,
        height_out_full_n,
        height_out_write,
        width_out_din,
        width_out_full_n,
        width_out_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state8 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [11:0] inp1_img_V_dout;
input   inp1_img_V_empty_n;
output   inp1_img_V_read;
input  [11:0] inp2_img_V_dout;
input   inp2_img_V_empty_n;
output   inp2_img_V_read;
output  [12:0] out_Ix_img_V_din;
input   out_Ix_img_V_full_n;
output   out_Ix_img_V_write;
output  [12:0] out_Iy_img_V_din;
input   out_Iy_img_V_full_n;
output   out_Iy_img_V_write;
output  [12:0] out_It_img_V_din;
input   out_It_img_V_full_n;
output   out_It_img_V_write;
input  [15:0] height_dout;
input   height_empty_n;
output   height_read;
input  [15:0] width_dout;
input   width_empty_n;
output   width_read;
output  [15:0] height_out_din;
input   height_out_full_n;
output   height_out_write;
output  [15:0] width_out_din;
input   width_out_full_n;
output   width_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg inp1_img_V_read;
reg inp2_img_V_read;
reg out_Ix_img_V_write;
reg out_Iy_img_V_write;
reg out_It_img_V_write;
reg height_read;
reg width_read;
reg height_out_write;
reg width_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire   [8:0] deriv_lines_buffer_V_1_address0;
reg    deriv_lines_buffer_V_1_ce0;
wire   [23:0] deriv_lines_buffer_V_1_q0;
reg    deriv_lines_buffer_V_1_ce1;
reg    deriv_lines_buffer_V_1_we1;
wire   [8:0] deriv_lines_buffer_V_2_address0;
reg    deriv_lines_buffer_V_2_ce0;
wire   [23:0] deriv_lines_buffer_V_2_q0;
reg    deriv_lines_buffer_V_2_ce1;
reg    deriv_lines_buffer_V_2_we1;
wire   [8:0] deriv_lines_buffer_V_3_address0;
reg    deriv_lines_buffer_V_3_ce0;
wire   [23:0] deriv_lines_buffer_V_3_q0;
reg    deriv_lines_buffer_V_3_ce1;
reg    deriv_lines_buffer_V_3_we1;
wire   [8:0] deriv_lines_buffer_V_4_address0;
reg    deriv_lines_buffer_V_4_ce0;
wire   [23:0] deriv_lines_buffer_V_4_q0;
wire   [8:0] deriv_lines_buffer_V_4_address1;
reg    deriv_lines_buffer_V_4_ce1;
reg    deriv_lines_buffer_V_4_we1;
wire   [23:0] deriv_lines_buffer_V_4_d1;
reg    inp1_img_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_flatten_reg_1269;
reg   [0:0] or_cond_i_reg_1315;
reg    inp2_img_V_blk_n;
reg    out_Ix_img_V_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] tmp_59_i_reg_1319;
reg   [0:0] tmp_59_i_reg_1319_pp0_iter3_reg;
reg    out_Iy_img_V_blk_n;
reg    out_It_img_V_blk_n;
reg    height_blk_n;
reg    width_blk_n;
reg    height_out_blk_n;
reg    width_out_blk_n;
reg   [32:0] indvar_flatten_reg_406;
reg   [15:0] row_i_reg_417;
reg   [15:0] col_i_reg_428;
reg   [15:0] height_read_reg_1246;
reg    ap_block_state1;
reg   [15:0] width_read_reg_1253;
wire   [16:0] tmp_45_i_fu_481_p2;
reg   [16:0] tmp_45_i_reg_1259;
wire    ap_CS_fsm_state2;
wire   [33:0] grp_fu_1149_p3;
reg   [33:0] bound_reg_1264;
wire   [0:0] exitcond_flatten_fu_504_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_predicate_op116_read_state4;
reg    ap_predicate_op117_read_state4;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
reg    ap_block_state7_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_flatten_reg_1269_pp0_iter1_reg;
reg   [0:0] exitcond_flatten_reg_1269_pp0_iter2_reg;
reg   [0:0] exitcond_flatten_reg_1269_pp0_iter3_reg;
wire   [32:0] indvar_flatten_next_fu_509_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [15:0] col_i_mid2_fu_515_p3;
reg   [15:0] col_i_mid2_reg_1278;
wire   [15:0] row_i_mid2_fu_587_p3;
wire   [0:0] tmp_53_i_fu_595_p2;
reg   [0:0] tmp_53_i_reg_1288;
reg   [8:0] deriv_lines_buffer_V_reg_1292;
reg   [8:0] deriv_lines_buffer_V_5_reg_1298;
reg   [8:0] deriv_lines_buffer_V_6_reg_1304;
wire   [0:0] or_cond_i_fu_608_p2;
wire   [0:0] tmp_59_i_fu_630_p2;
reg   [0:0] tmp_59_i_reg_1319_pp0_iter1_reg;
reg   [0:0] tmp_59_i_reg_1319_pp0_iter2_reg;
wire   [0:0] tmp_61_i_fu_636_p2;
reg   [0:0] tmp_61_i_reg_1323;
reg   [0:0] tmp_61_i_reg_1323_pp0_iter1_reg;
reg   [0:0] tmp_61_i_reg_1323_pp0_iter2_reg;
reg   [0:0] tmp_61_i_reg_1323_pp0_iter3_reg;
wire   [15:0] col_fu_642_p2;
wire   [12:0] filt_out_t_V_fu_847_p2;
reg   [12:0] filt_out_t_V_reg_1332;
reg   [12:0] filt_out_t_V_reg_1332_pp0_iter2_reg;
reg   [12:0] filt_out_t_V_reg_1332_pp0_iter3_reg;
reg   [11:0] tmp_45_reg_1337;
wire   [15:0] tmp_24_i_i_fu_863_p2;
reg   [15:0] tmp_24_i_i_reg_1342;
wire  signed [16:0] accum_y_2_4_4_tr_i_i_fu_939_p2;
reg  signed [16:0] accum_y_2_4_4_tr_i_i_reg_1347;
reg   [0:0] tmp_59_reg_1352;
reg   [0:0] tmp_59_reg_1352_pp0_iter2_reg;
wire  signed [16:0] accum_x_2_4_4_tr_i_i_fu_1004_p2;
reg  signed [16:0] accum_x_2_4_4_tr_i_i_reg_1358;
reg   [0:0] tmp_52_reg_1363;
reg   [0:0] tmp_52_reg_1363_pp0_iter3_reg;
wire   [12:0] tmp_64_fu_1064_p1;
reg   [12:0] tmp_64_reg_1369;
wire   [12:0] tmp_66_fu_1068_p1;
reg   [12:0] tmp_66_reg_1374;
wire   [12:0] tmp_57_fu_1118_p1;
reg   [12:0] tmp_57_reg_1379;
wire   [12:0] tmp_65_fu_1127_p1;
reg   [12:0] tmp_65_reg_1384;
wire   [12:0] final_val_y_V_fu_1131_p3;
reg   [12:0] final_val_y_V_reg_1389;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_condition_pp0_exit_iter1_state4;
reg    ap_enable_reg_pp0_iter3;
reg   [12:0] ap_phi_mux_filt_out_t_V_2_i_phi_fu_443_p4;
reg   [12:0] ap_phi_reg_pp0_iter4_filt_out_t_V_2_i_reg_439;
wire   [12:0] ap_phi_reg_pp0_iter0_filt_out_t_V_2_i_reg_439;
reg   [12:0] ap_phi_reg_pp0_iter1_filt_out_t_V_2_i_reg_439;
reg   [12:0] ap_phi_reg_pp0_iter2_filt_out_t_V_2_i_reg_439;
reg   [12:0] ap_phi_reg_pp0_iter3_filt_out_t_V_2_i_reg_439;
reg   [12:0] ap_phi_mux_filt_out_y_V_2_i_phi_fu_455_p4;
reg   [12:0] ap_phi_reg_pp0_iter4_filt_out_y_V_2_i_reg_451;
wire   [12:0] ap_phi_reg_pp0_iter0_filt_out_y_V_2_i_reg_451;
reg   [12:0] ap_phi_reg_pp0_iter1_filt_out_y_V_2_i_reg_451;
reg   [12:0] ap_phi_reg_pp0_iter2_filt_out_y_V_2_i_reg_451;
reg   [12:0] ap_phi_reg_pp0_iter3_filt_out_y_V_2_i_reg_451;
reg   [12:0] ap_phi_mux_filt_out_x_V_2_i_phi_fu_467_p4;
wire   [12:0] final_val_x_V_fu_1142_p3;
reg   [12:0] ap_phi_reg_pp0_iter4_filt_out_x_V_2_i_reg_463;
wire   [12:0] ap_phi_reg_pp0_iter0_filt_out_x_V_2_i_reg_463;
reg   [12:0] ap_phi_reg_pp0_iter1_filt_out_x_V_2_i_reg_463;
reg   [12:0] ap_phi_reg_pp0_iter2_filt_out_x_V_2_i_reg_463;
reg   [12:0] ap_phi_reg_pp0_iter3_filt_out_x_V_2_i_reg_463;
wire   [63:0] tmp_54_i_fu_600_p1;
wire   [63:0] tmp_57_i_fu_748_p1;
reg    ap_block_pp0_stage0_01001;
reg   [23:0] deriv_window_2_V_fu_218;
reg   [23:0] deriv_window_22_V_fu_222;
reg   [23:0] deriv_window_7_V_fu_226;
reg   [23:0] deriv_window_10_V_fu_230;
reg   [23:0] deriv_window_11_V_fu_234;
reg   [23:0] deriv_window_12_V_fu_238;
reg   [23:0] deriv_window_17_V_fu_242;
reg   [23:0] deriv_window_23_V_fu_246;
wire   [23:0] p_Result_s_fu_739_p3;
reg   [23:0] deriv_window_3_V_fu_250;
reg   [23:0] deriv_window_8_V_fu_254;
reg   [23:0] deriv_window_13_V_fu_258;
reg   [23:0] deriv_window_18_V_fu_262;
wire   [16:0] tmp_44_cast_i_fu_478_p1;
wire   [16:0] tmp_51_cast_i_fu_495_p1;
wire   [33:0] indvar_flatten_cast_fu_491_p1;
wire   [0:0] tmp_52_i_fu_499_p2;
wire   [15:0] row_fu_523_p2;
wire   [0:0] tmp_48_i_fu_534_p2;
wire   [0:0] tmp_48_i_mid1_fu_529_p2;
wire   [14:0] tmp_46_fu_547_p4;
wire   [14:0] tmp_47_fu_563_p4;
wire   [0:0] icmp4_fu_573_p2;
wire   [0:0] icmp3_fu_557_p2;
wire   [0:0] tmp_48_i_mid2_fu_539_p3;
wire   [14:0] tmp_48_fu_614_p4;
wire   [0:0] tmp_50_i_mid2_fu_579_p3;
wire   [0:0] icmp_fu_624_p2;
wire   [11:0] tmp_fu_767_p4;
wire   [14:0] p_shl10_i_i_fu_777_p3;
wire   [11:0] tmp_s_fu_799_p4;
wire   [14:0] p_shl_i_i_fu_809_p3;
wire   [11:0] p_Result_2_i_i_fu_789_p4;
wire   [11:0] tmp_49_fu_831_p1;
wire   [11:0] p_Result_2_2_i_i_fu_821_p4;
wire   [12:0] lhs_V_2_2_i_i_fu_839_p1;
wire   [12:0] rhs_V_2_2_i_i_fu_843_p1;
wire   [15:0] tmp_i_cast_i_fu_835_p1;
wire   [15:0] p_shl_i_cast_i_fu_817_p1;
wire   [11:0] p_Result_0_2_i_i_fu_757_p4;
wire   [11:0] tmp_50_fu_873_p4;
wire   [14:0] loc_mult_y_3_2_i_i_fu_883_p3;
wire   [15:0] tmp_25_i_cast_i_fu_869_p1;
wire   [15:0] p_shl10_i_cast_i_fu_785_p1;
wire   [15:0] tmp_28_i_i_fu_895_p2;
wire   [11:0] p_Result_4_2_i_i_fu_905_p4;
wire   [12:0] tmp_81_4_2_i_cast_i_fu_915_p1;
wire   [12:0] loc_mult_y_4_2_i_i_fu_919_p2;
wire  signed [15:0] tmp_32_i_cast_i_cast_fu_925_p1;
wire   [15:0] tmp_27_i_cast_i_cast_fu_891_p1;
wire   [15:0] tmp2_fu_929_p2;
wire  signed [16:0] tmp_28_i_cast_i_fu_901_p1;
wire  signed [16:0] tmp2_cast_fu_935_p1;
wire   [14:0] loc_mult_x_2_3_i_i_fu_956_p3;
wire   [11:0] p_Result_2_4_i_i_fu_970_p4;
wire   [12:0] tmp_81_2_4_i_cast_i_fu_980_p1;
wire   [12:0] loc_mult_x_2_4_i_i_fu_984_p2;
wire  signed [15:0] tmp_30_i_cast_i_cast_fu_990_p1;
wire   [15:0] tmp_23_i_cast_i_cast_fu_963_p1;
wire   [15:0] tmp1_fu_994_p2;
wire  signed [16:0] tmp_24_i_cast_i_fu_967_p1;
wire  signed [16:0] tmp1_cast_fu_1000_p1;
wire  signed [35:0] mul_fu_1157_p2;
wire   [33:0] tmp_58_fu_1021_p1;
wire   [33:0] neg_mul_fu_1024_p2;
wire   [12:0] tmp_60_fu_1030_p4;
wire   [14:0] tmp_62_fu_1044_p4;
wire  signed [17:0] tmp_61_fu_1040_p1;
wire  signed [17:0] tmp_63_fu_1053_p1;
wire   [17:0] p_v1_fu_1057_p3;
wire  signed [35:0] mul3_fu_1165_p2;
wire   [33:0] tmp_51_fu_1075_p1;
wire   [33:0] neg_mul4_fu_1078_p2;
wire   [12:0] tmp_53_fu_1084_p4;
wire   [14:0] tmp_55_fu_1098_p4;
wire  signed [17:0] tmp_54_fu_1094_p1;
wire  signed [17:0] tmp_56_fu_1107_p1;
wire   [17:0] p_v_fu_1111_p3;
wire   [12:0] neg_ti_fu_1122_p2;
wire   [12:0] neg_ti9_fu_1137_p2;
wire   [15:0] grp_fu_1149_p0;
wire   [2:0] grp_fu_1149_p1;
wire   [16:0] grp_fu_1149_p2;
wire   [18:0] mul_fu_1157_p0;
wire   [18:0] mul3_fu_1165_p0;
wire    ap_CS_fsm_state8;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [16:0] grp_fu_1149_p00;
wire   [33:0] grp_fu_1149_p20;
reg    ap_condition_237;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

hls_SpatialTemporalD_deriv_lines_buffer_V_1 #(
    .DataWidth( 24 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
deriv_lines_buffer_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(deriv_lines_buffer_V_1_address0),
    .ce0(deriv_lines_buffer_V_1_ce0),
    .q0(deriv_lines_buffer_V_1_q0),
    .address1(deriv_lines_buffer_V_reg_1292),
    .ce1(deriv_lines_buffer_V_1_ce1),
    .we1(deriv_lines_buffer_V_1_we1),
    .d1(deriv_lines_buffer_V_2_q0)
);

hls_SpatialTemporalD_deriv_lines_buffer_V_1 #(
    .DataWidth( 24 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
deriv_lines_buffer_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(deriv_lines_buffer_V_2_address0),
    .ce0(deriv_lines_buffer_V_2_ce0),
    .q0(deriv_lines_buffer_V_2_q0),
    .address1(deriv_lines_buffer_V_5_reg_1298),
    .ce1(deriv_lines_buffer_V_2_ce1),
    .we1(deriv_lines_buffer_V_2_we1),
    .d1(deriv_lines_buffer_V_3_q0)
);

hls_SpatialTemporalD_deriv_lines_buffer_V_1 #(
    .DataWidth( 24 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
deriv_lines_buffer_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(deriv_lines_buffer_V_3_address0),
    .ce0(deriv_lines_buffer_V_3_ce0),
    .q0(deriv_lines_buffer_V_3_q0),
    .address1(deriv_lines_buffer_V_6_reg_1304),
    .ce1(deriv_lines_buffer_V_3_ce1),
    .we1(deriv_lines_buffer_V_3_we1),
    .d1(deriv_lines_buffer_V_4_q0)
);

hls_SpatialTemporalD_deriv_lines_buffer_V_1 #(
    .DataWidth( 24 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
deriv_lines_buffer_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(deriv_lines_buffer_V_4_address0),
    .ce0(deriv_lines_buffer_V_4_ce0),
    .q0(deriv_lines_buffer_V_4_q0),
    .address1(deriv_lines_buffer_V_4_address1),
    .ce1(deriv_lines_buffer_V_4_ce1),
    .we1(deriv_lines_buffer_V_4_we1),
    .d1(deriv_lines_buffer_V_4_d1)
);

hls_LK_am_addmul_16ns_3ns_17ns_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 3 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 34 ))
hls_LK_am_addmul_16ns_3ns_17ns_34_1_1_U39(
    .din0(grp_fu_1149_p0),
    .din1(grp_fu_1149_p1),
    .din2(grp_fu_1149_p2),
    .dout(grp_fu_1149_p3)
);

hls_LK_mul_mul_19ns_17s_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 36 ))
hls_LK_mul_mul_19ns_17s_36_1_1_U40(
    .din0(mul_fu_1157_p0),
    .din1(accum_y_2_4_4_tr_i_i_reg_1347),
    .dout(mul_fu_1157_p2)
);

hls_LK_mul_mul_19ns_17s_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 36 ))
hls_LK_mul_mul_19ns_17s_36_1_1_U41(
    .din0(mul3_fu_1165_p0),
    .din1(accum_x_2_4_4_tr_i_i_reg_1358),
    .dout(mul3_fu_1165_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_fu_504_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter1_state4)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_237)) begin
        if (((tmp_61_i_fu_636_p2 == 1'd0) & (exitcond_flatten_fu_504_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_filt_out_t_V_2_i_reg_439 <= 13'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_filt_out_t_V_2_i_reg_439 <= ap_phi_reg_pp0_iter0_filt_out_t_V_2_i_reg_439;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_237)) begin
        if (((tmp_61_i_fu_636_p2 == 1'd0) & (exitcond_flatten_fu_504_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_filt_out_x_V_2_i_reg_463 <= 13'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_filt_out_x_V_2_i_reg_463 <= ap_phi_reg_pp0_iter0_filt_out_x_V_2_i_reg_463;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_237)) begin
        if (((tmp_61_i_fu_636_p2 == 1'd0) & (exitcond_flatten_fu_504_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_filt_out_y_V_2_i_reg_451 <= 13'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_filt_out_y_V_2_i_reg_451 <= ap_phi_reg_pp0_iter0_filt_out_y_V_2_i_reg_451;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_fu_504_p2 == 1'd0))) begin
        col_i_reg_428 <= col_fu_642_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        col_i_reg_428 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_fu_504_p2 == 1'd0))) begin
        indvar_flatten_reg_406 <= indvar_flatten_next_fu_509_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        indvar_flatten_reg_406 <= 33'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_fu_504_p2 == 1'd0))) begin
        row_i_reg_417 <= row_i_mid2_fu_587_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        row_i_reg_417 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_61_i_reg_1323_pp0_iter1_reg == 1'd1) & (exitcond_flatten_reg_1269_pp0_iter1_reg == 1'd0))) begin
        accum_x_2_4_4_tr_i_i_reg_1358 <= accum_x_2_4_4_tr_i_i_fu_1004_p2;
        tmp_52_reg_1363 <= accum_x_2_4_4_tr_i_i_fu_1004_p2[32'd16];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_61_i_reg_1323 == 1'd1) & (exitcond_flatten_reg_1269 == 1'd0))) begin
        accum_y_2_4_4_tr_i_i_reg_1347 <= accum_y_2_4_4_tr_i_i_fu_939_p2;
        filt_out_t_V_reg_1332 <= filt_out_t_V_fu_847_p2;
        tmp_24_i_i_reg_1342 <= tmp_24_i_i_fu_863_p2;
        tmp_45_reg_1337 <= {{deriv_window_13_V_fu_258[23:12]}};
        tmp_59_reg_1352 <= accum_y_2_4_4_tr_i_i_fu_939_p2[32'd16];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_filt_out_t_V_2_i_reg_439 <= ap_phi_reg_pp0_iter1_filt_out_t_V_2_i_reg_439;
        ap_phi_reg_pp0_iter2_filt_out_x_V_2_i_reg_463 <= ap_phi_reg_pp0_iter1_filt_out_x_V_2_i_reg_463;
        ap_phi_reg_pp0_iter2_filt_out_y_V_2_i_reg_451 <= ap_phi_reg_pp0_iter1_filt_out_y_V_2_i_reg_451;
        deriv_window_10_V_fu_230 <= deriv_window_11_V_fu_234;
        deriv_window_11_V_fu_234 <= deriv_window_12_V_fu_238;
        deriv_window_12_V_fu_238 <= deriv_window_13_V_fu_258;
        deriv_window_17_V_fu_242 <= deriv_window_18_V_fu_262;
        deriv_window_22_V_fu_222 <= deriv_window_23_V_fu_246;
        deriv_window_2_V_fu_218 <= deriv_window_3_V_fu_250;
        deriv_window_7_V_fu_226 <= deriv_window_8_V_fu_254;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_reg_pp0_iter3_filt_out_t_V_2_i_reg_439 <= ap_phi_reg_pp0_iter2_filt_out_t_V_2_i_reg_439;
        ap_phi_reg_pp0_iter3_filt_out_x_V_2_i_reg_463 <= ap_phi_reg_pp0_iter2_filt_out_x_V_2_i_reg_463;
        ap_phi_reg_pp0_iter3_filt_out_y_V_2_i_reg_451 <= ap_phi_reg_pp0_iter2_filt_out_y_V_2_i_reg_451;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_phi_reg_pp0_iter4_filt_out_t_V_2_i_reg_439 <= ap_phi_reg_pp0_iter3_filt_out_t_V_2_i_reg_439;
        ap_phi_reg_pp0_iter4_filt_out_x_V_2_i_reg_463 <= ap_phi_reg_pp0_iter3_filt_out_x_V_2_i_reg_463;
        ap_phi_reg_pp0_iter4_filt_out_y_V_2_i_reg_451 <= ap_phi_reg_pp0_iter3_filt_out_y_V_2_i_reg_451;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        bound_reg_1264 <= grp_fu_1149_p3;
        tmp_45_i_reg_1259 <= tmp_45_i_fu_481_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_fu_504_p2 == 1'd0))) begin
        col_i_mid2_reg_1278 <= col_i_mid2_fu_515_p3;
        or_cond_i_reg_1315 <= or_cond_i_fu_608_p2;
        tmp_53_i_reg_1288 <= tmp_53_i_fu_595_p2;
        tmp_59_i_reg_1319 <= tmp_59_i_fu_630_p2;
        tmp_61_i_reg_1323 <= tmp_61_i_fu_636_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_53_i_fu_595_p2 == 1'd1) & (exitcond_flatten_fu_504_p2 == 1'd0))) begin
        deriv_lines_buffer_V_5_reg_1298 <= tmp_54_i_fu_600_p1;
        deriv_lines_buffer_V_6_reg_1304 <= tmp_54_i_fu_600_p1;
        deriv_lines_buffer_V_reg_1292 <= tmp_54_i_fu_600_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_53_i_reg_1288 == 1'd1) & (exitcond_flatten_reg_1269 == 1'd0))) begin
        deriv_window_13_V_fu_258 <= deriv_lines_buffer_V_3_q0;
        deriv_window_18_V_fu_262 <= deriv_lines_buffer_V_4_q0;
        deriv_window_3_V_fu_250 <= deriv_lines_buffer_V_1_q0;
        deriv_window_8_V_fu_254 <= deriv_lines_buffer_V_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (or_cond_i_reg_1315 == 1'd1) & (exitcond_flatten_reg_1269 == 1'd0))) begin
        deriv_window_23_V_fu_246 <= p_Result_s_fu_739_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_flatten_reg_1269 <= exitcond_flatten_fu_504_p2;
        exitcond_flatten_reg_1269_pp0_iter1_reg <= exitcond_flatten_reg_1269;
        tmp_59_i_reg_1319_pp0_iter1_reg <= tmp_59_i_reg_1319;
        tmp_61_i_reg_1323_pp0_iter1_reg <= tmp_61_i_reg_1323;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond_flatten_reg_1269_pp0_iter2_reg <= exitcond_flatten_reg_1269_pp0_iter1_reg;
        exitcond_flatten_reg_1269_pp0_iter3_reg <= exitcond_flatten_reg_1269_pp0_iter2_reg;
        filt_out_t_V_reg_1332_pp0_iter2_reg <= filt_out_t_V_reg_1332;
        filt_out_t_V_reg_1332_pp0_iter3_reg <= filt_out_t_V_reg_1332_pp0_iter2_reg;
        tmp_52_reg_1363_pp0_iter3_reg <= tmp_52_reg_1363;
        tmp_59_i_reg_1319_pp0_iter2_reg <= tmp_59_i_reg_1319_pp0_iter1_reg;
        tmp_59_i_reg_1319_pp0_iter3_reg <= tmp_59_i_reg_1319_pp0_iter2_reg;
        tmp_59_reg_1352_pp0_iter2_reg <= tmp_59_reg_1352;
        tmp_61_i_reg_1323_pp0_iter2_reg <= tmp_61_i_reg_1323_pp0_iter1_reg;
        tmp_61_i_reg_1323_pp0_iter3_reg <= tmp_61_i_reg_1323_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_61_i_reg_1323_pp0_iter2_reg == 1'd1) & (exitcond_flatten_reg_1269_pp0_iter2_reg == 1'd0))) begin
        final_val_y_V_reg_1389 <= final_val_y_V_fu_1131_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((width_out_full_n == 1'b0) | (height_out_full_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_read_reg_1246 <= height_dout;
        width_read_reg_1253 <= width_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_52_reg_1363 == 1'd1) & (tmp_61_i_reg_1323_pp0_iter2_reg == 1'd1) & (exitcond_flatten_reg_1269_pp0_iter2_reg == 1'd0))) begin
        tmp_57_reg_1379 <= tmp_57_fu_1118_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_59_reg_1352 == 1'd1) & (tmp_61_i_reg_1323_pp0_iter1_reg == 1'd1) & (exitcond_flatten_reg_1269_pp0_iter1_reg == 1'd0))) begin
        tmp_64_reg_1369 <= tmp_64_fu_1064_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_61_i_reg_1323_pp0_iter2_reg == 1'd1) & (tmp_52_reg_1363 == 1'd0) & (exitcond_flatten_reg_1269_pp0_iter2_reg == 1'd0))) begin
        tmp_65_reg_1384 <= tmp_65_fu_1127_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_61_i_reg_1323_pp0_iter1_reg == 1'd1) & (tmp_59_reg_1352 == 1'd0) & (exitcond_flatten_reg_1269_pp0_iter1_reg == 1'd0))) begin
        tmp_66_reg_1374 <= tmp_66_fu_1068_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_condition_pp0_exit_iter1_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (tmp_61_i_reg_1323_pp0_iter3_reg == 1'd1) & (exitcond_flatten_reg_1269_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_filt_out_t_V_2_i_phi_fu_443_p4 = filt_out_t_V_reg_1332_pp0_iter3_reg;
    end else begin
        ap_phi_mux_filt_out_t_V_2_i_phi_fu_443_p4 = ap_phi_reg_pp0_iter4_filt_out_t_V_2_i_reg_439;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (tmp_61_i_reg_1323_pp0_iter3_reg == 1'd1) & (exitcond_flatten_reg_1269_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_filt_out_x_V_2_i_phi_fu_467_p4 = final_val_x_V_fu_1142_p3;
    end else begin
        ap_phi_mux_filt_out_x_V_2_i_phi_fu_467_p4 = ap_phi_reg_pp0_iter4_filt_out_x_V_2_i_reg_463;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (tmp_61_i_reg_1323_pp0_iter3_reg == 1'd1) & (exitcond_flatten_reg_1269_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_filt_out_y_V_2_i_phi_fu_455_p4 = final_val_y_V_reg_1389;
    end else begin
        ap_phi_mux_filt_out_y_V_2_i_phi_fu_455_p4 = ap_phi_reg_pp0_iter4_filt_out_y_V_2_i_reg_451;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        deriv_lines_buffer_V_1_ce0 = 1'b1;
    end else begin
        deriv_lines_buffer_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        deriv_lines_buffer_V_1_ce1 = 1'b1;
    end else begin
        deriv_lines_buffer_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_53_i_reg_1288 == 1'd1) & (exitcond_flatten_reg_1269 == 1'd0))) begin
        deriv_lines_buffer_V_1_we1 = 1'b1;
    end else begin
        deriv_lines_buffer_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        deriv_lines_buffer_V_2_ce0 = 1'b1;
    end else begin
        deriv_lines_buffer_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        deriv_lines_buffer_V_2_ce1 = 1'b1;
    end else begin
        deriv_lines_buffer_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_53_i_reg_1288 == 1'd1) & (exitcond_flatten_reg_1269 == 1'd0))) begin
        deriv_lines_buffer_V_2_we1 = 1'b1;
    end else begin
        deriv_lines_buffer_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        deriv_lines_buffer_V_3_ce0 = 1'b1;
    end else begin
        deriv_lines_buffer_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        deriv_lines_buffer_V_3_ce1 = 1'b1;
    end else begin
        deriv_lines_buffer_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_53_i_reg_1288 == 1'd1) & (exitcond_flatten_reg_1269 == 1'd0))) begin
        deriv_lines_buffer_V_3_we1 = 1'b1;
    end else begin
        deriv_lines_buffer_V_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        deriv_lines_buffer_V_4_ce0 = 1'b1;
    end else begin
        deriv_lines_buffer_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        deriv_lines_buffer_V_4_ce1 = 1'b1;
    end else begin
        deriv_lines_buffer_V_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (or_cond_i_reg_1315 == 1'd1) & (exitcond_flatten_reg_1269 == 1'd0))) begin
        deriv_lines_buffer_V_4_we1 = 1'b1;
    end else begin
        deriv_lines_buffer_V_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_blk_n = height_empty_n;
    end else begin
        height_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_out_blk_n = height_out_full_n;
    end else begin
        height_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((width_out_full_n == 1'b0) | (height_out_full_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_out_write = 1'b1;
    end else begin
        height_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((width_out_full_n == 1'b0) | (height_out_full_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_read = 1'b1;
    end else begin
        height_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (or_cond_i_reg_1315 == 1'd1) & (exitcond_flatten_reg_1269 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        inp1_img_V_blk_n = inp1_img_V_empty_n;
    end else begin
        inp1_img_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op116_read_state4 == 1'b1))) begin
        inp1_img_V_read = 1'b1;
    end else begin
        inp1_img_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (or_cond_i_reg_1315 == 1'd1) & (exitcond_flatten_reg_1269 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        inp2_img_V_blk_n = inp2_img_V_empty_n;
    end else begin
        inp2_img_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op117_read_state4 == 1'b1))) begin
        inp2_img_V_read = 1'b1;
    end else begin
        inp2_img_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (tmp_59_i_reg_1319_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        out_It_img_V_blk_n = out_It_img_V_full_n;
    end else begin
        out_It_img_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (tmp_59_i_reg_1319_pp0_iter3_reg == 1'd1))) begin
        out_It_img_V_write = 1'b1;
    end else begin
        out_It_img_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (tmp_59_i_reg_1319_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        out_Ix_img_V_blk_n = out_Ix_img_V_full_n;
    end else begin
        out_Ix_img_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (tmp_59_i_reg_1319_pp0_iter3_reg == 1'd1))) begin
        out_Ix_img_V_write = 1'b1;
    end else begin
        out_Ix_img_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (tmp_59_i_reg_1319_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        out_Iy_img_V_blk_n = out_Iy_img_V_full_n;
    end else begin
        out_Iy_img_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (tmp_59_i_reg_1319_pp0_iter3_reg == 1'd1))) begin
        out_Iy_img_V_write = 1'b1;
    end else begin
        out_Iy_img_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_blk_n = width_empty_n;
    end else begin
        width_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_out_blk_n = width_out_full_n;
    end else begin
        width_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((width_out_full_n == 1'b0) | (height_out_full_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_out_write = 1'b1;
    end else begin
        width_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((width_out_full_n == 1'b0) | (height_out_full_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_read = 1'b1;
    end else begin
        width_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((width_out_full_n == 1'b0) | (height_out_full_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & ~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign accum_x_2_4_4_tr_i_i_fu_1004_p2 = ($signed(tmp_24_i_cast_i_fu_967_p1) + $signed(tmp1_cast_fu_1000_p1));

assign accum_y_2_4_4_tr_i_i_fu_939_p2 = ($signed(tmp_28_i_cast_i_fu_901_p1) + $signed(tmp2_cast_fu_935_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (((out_It_img_V_full_n == 1'b0) & (tmp_59_i_reg_1319_pp0_iter3_reg == 1'd1)) | ((out_Iy_img_V_full_n == 1'b0) & (tmp_59_i_reg_1319_pp0_iter3_reg == 1'd1)) | ((out_Ix_img_V_full_n == 1'b0) & (tmp_59_i_reg_1319_pp0_iter3_reg == 1'd1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((inp2_img_V_empty_n == 1'b0) & (ap_predicate_op117_read_state4 == 1'b1)) | ((inp1_img_V_empty_n == 1'b0) & (ap_predicate_op116_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (((out_It_img_V_full_n == 1'b0) & (tmp_59_i_reg_1319_pp0_iter3_reg == 1'd1)) | ((out_Iy_img_V_full_n == 1'b0) & (tmp_59_i_reg_1319_pp0_iter3_reg == 1'd1)) | ((out_Ix_img_V_full_n == 1'b0) & (tmp_59_i_reg_1319_pp0_iter3_reg == 1'd1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((inp2_img_V_empty_n == 1'b0) & (ap_predicate_op117_read_state4 == 1'b1)) | ((inp1_img_V_empty_n == 1'b0) & (ap_predicate_op116_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter4 == 1'b1) & (((out_It_img_V_full_n == 1'b0) & (tmp_59_i_reg_1319_pp0_iter3_reg == 1'd1)) | ((out_Iy_img_V_full_n == 1'b0) & (tmp_59_i_reg_1319_pp0_iter3_reg == 1'd1)) | ((out_Ix_img_V_full_n == 1'b0) & (tmp_59_i_reg_1319_pp0_iter3_reg == 1'd1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((inp2_img_V_empty_n == 1'b0) & (ap_predicate_op117_read_state4 == 1'b1)) | ((inp1_img_V_empty_n == 1'b0) & (ap_predicate_op116_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1 = ((width_out_full_n == 1'b0) | (height_out_full_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((inp2_img_V_empty_n == 1'b0) & (ap_predicate_op117_read_state4 == 1'b1)) | ((inp1_img_V_empty_n == 1'b0) & (ap_predicate_op116_read_state4 == 1'b1)));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter4 = (((out_It_img_V_full_n == 1'b0) & (tmp_59_i_reg_1319_pp0_iter3_reg == 1'd1)) | ((out_Iy_img_V_full_n == 1'b0) & (tmp_59_i_reg_1319_pp0_iter3_reg == 1'd1)) | ((out_Ix_img_V_full_n == 1'b0) & (tmp_59_i_reg_1319_pp0_iter3_reg == 1'd1)));
end

always @ (*) begin
    ap_condition_237 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_filt_out_t_V_2_i_reg_439 = 'bx;

assign ap_phi_reg_pp0_iter0_filt_out_x_V_2_i_reg_463 = 'bx;

assign ap_phi_reg_pp0_iter0_filt_out_y_V_2_i_reg_451 = 'bx;

always @ (*) begin
    ap_predicate_op116_read_state4 = ((or_cond_i_reg_1315 == 1'd1) & (exitcond_flatten_reg_1269 == 1'd0));
end

always @ (*) begin
    ap_predicate_op117_read_state4 = ((or_cond_i_reg_1315 == 1'd1) & (exitcond_flatten_reg_1269 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign col_fu_642_p2 = (col_i_mid2_fu_515_p3 + 16'd1);

assign col_i_mid2_fu_515_p3 = ((tmp_52_i_fu_499_p2[0:0] === 1'b1) ? col_i_reg_428 : 16'd0);

assign deriv_lines_buffer_V_1_address0 = tmp_54_i_fu_600_p1;

assign deriv_lines_buffer_V_2_address0 = tmp_54_i_fu_600_p1;

assign deriv_lines_buffer_V_3_address0 = tmp_54_i_fu_600_p1;

assign deriv_lines_buffer_V_4_address0 = tmp_54_i_fu_600_p1;

assign deriv_lines_buffer_V_4_address1 = tmp_57_i_fu_748_p1;

assign deriv_lines_buffer_V_4_d1 = {{inp1_img_V_dout}, {inp2_img_V_dout}};

assign exitcond_flatten_fu_504_p2 = ((indvar_flatten_cast_fu_491_p1 == bound_reg_1264) ? 1'b1 : 1'b0);

assign filt_out_t_V_fu_847_p2 = (lhs_V_2_2_i_i_fu_839_p1 - rhs_V_2_2_i_i_fu_843_p1);

assign final_val_x_V_fu_1142_p3 = ((tmp_52_reg_1363_pp0_iter3_reg[0:0] === 1'b1) ? neg_ti9_fu_1137_p2 : tmp_65_reg_1384);

assign final_val_y_V_fu_1131_p3 = ((tmp_59_reg_1352_pp0_iter2_reg[0:0] === 1'b1) ? neg_ti_fu_1122_p2 : tmp_66_reg_1374);

assign grp_fu_1149_p0 = grp_fu_1149_p00;

assign grp_fu_1149_p00 = height_read_reg_1246;

assign grp_fu_1149_p1 = 17'd2;

assign grp_fu_1149_p2 = grp_fu_1149_p20;

assign grp_fu_1149_p20 = tmp_45_i_fu_481_p2;

assign height_out_din = height_dout;

assign icmp3_fu_557_p2 = ((tmp_46_fu_547_p4 != 15'd0) ? 1'b1 : 1'b0);

assign icmp4_fu_573_p2 = ((tmp_47_fu_563_p4 != 15'd0) ? 1'b1 : 1'b0);

assign icmp_fu_624_p2 = ((tmp_48_fu_614_p4 != 15'd0) ? 1'b1 : 1'b0);

assign indvar_flatten_cast_fu_491_p1 = indvar_flatten_reg_406;

assign indvar_flatten_next_fu_509_p2 = (indvar_flatten_reg_406 + 33'd1);

assign lhs_V_2_2_i_i_fu_839_p1 = tmp_49_fu_831_p1;

assign loc_mult_x_2_3_i_i_fu_956_p3 = {{tmp_45_reg_1337}, {3'd0}};

assign loc_mult_x_2_4_i_i_fu_984_p2 = (13'd0 - tmp_81_2_4_i_cast_i_fu_980_p1);

assign loc_mult_y_3_2_i_i_fu_883_p3 = {{tmp_50_fu_873_p4}, {3'd0}};

assign loc_mult_y_4_2_i_i_fu_919_p2 = (13'd0 - tmp_81_4_2_i_cast_i_fu_915_p1);

assign mul3_fu_1165_p0 = 36'd174763;

assign mul_fu_1157_p0 = 36'd174763;

assign neg_mul4_fu_1078_p2 = (34'd0 - tmp_51_fu_1075_p1);

assign neg_mul_fu_1024_p2 = (34'd0 - tmp_58_fu_1021_p1);

assign neg_ti9_fu_1137_p2 = (13'd0 - tmp_57_reg_1379);

assign neg_ti_fu_1122_p2 = (13'd0 - tmp_64_reg_1369);

assign or_cond_i_fu_608_p2 = (tmp_53_i_fu_595_p2 & tmp_48_i_mid2_fu_539_p3);

assign out_It_img_V_din = ap_phi_mux_filt_out_t_V_2_i_phi_fu_443_p4;

assign out_Ix_img_V_din = ap_phi_mux_filt_out_x_V_2_i_phi_fu_467_p4;

assign out_Iy_img_V_din = ap_phi_mux_filt_out_y_V_2_i_phi_fu_455_p4;

assign p_Result_0_2_i_i_fu_757_p4 = {{deriv_window_2_V_fu_218[23:12]}};

assign p_Result_2_2_i_i_fu_821_p4 = {{deriv_window_12_V_fu_238[23:12]}};

assign p_Result_2_4_i_i_fu_970_p4 = {{deriv_window_13_V_fu_258[23:12]}};

assign p_Result_2_i_i_fu_789_p4 = {{deriv_window_10_V_fu_230[23:12]}};

assign p_Result_4_2_i_i_fu_905_p4 = {{deriv_window_22_V_fu_222[23:12]}};

assign p_Result_s_fu_739_p3 = {{inp1_img_V_dout}, {inp2_img_V_dout}};

assign p_shl10_i_cast_i_fu_785_p1 = p_shl10_i_i_fu_777_p3;

assign p_shl10_i_i_fu_777_p3 = {{tmp_fu_767_p4}, {3'd0}};

assign p_shl_i_cast_i_fu_817_p1 = p_shl_i_i_fu_809_p3;

assign p_shl_i_i_fu_809_p3 = {{tmp_s_fu_799_p4}, {3'd0}};

assign p_v1_fu_1057_p3 = ((tmp_59_reg_1352[0:0] === 1'b1) ? tmp_61_fu_1040_p1 : tmp_63_fu_1053_p1);

assign p_v_fu_1111_p3 = ((tmp_52_reg_1363[0:0] === 1'b1) ? tmp_54_fu_1094_p1 : tmp_56_fu_1107_p1);

assign rhs_V_2_2_i_i_fu_843_p1 = p_Result_2_2_i_i_fu_821_p4;

assign row_fu_523_p2 = (row_i_reg_417 + 16'd1);

assign row_i_mid2_fu_587_p3 = ((tmp_52_i_fu_499_p2[0:0] === 1'b1) ? row_i_reg_417 : row_fu_523_p2);

assign start_out = real_start;

assign tmp1_cast_fu_1000_p1 = $signed(tmp1_fu_994_p2);

assign tmp1_fu_994_p2 = ($signed(tmp_30_i_cast_i_cast_fu_990_p1) + $signed(tmp_23_i_cast_i_cast_fu_963_p1));

assign tmp2_cast_fu_935_p1 = $signed(tmp2_fu_929_p2);

assign tmp2_fu_929_p2 = ($signed(tmp_32_i_cast_i_cast_fu_925_p1) + $signed(tmp_27_i_cast_i_cast_fu_891_p1));

assign tmp_23_i_cast_i_cast_fu_963_p1 = loc_mult_x_2_3_i_i_fu_956_p3;

assign tmp_24_i_cast_i_fu_967_p1 = $signed(tmp_24_i_i_reg_1342);

assign tmp_24_i_i_fu_863_p2 = (tmp_i_cast_i_fu_835_p1 - p_shl_i_cast_i_fu_817_p1);

assign tmp_25_i_cast_i_fu_869_p1 = p_Result_0_2_i_i_fu_757_p4;

assign tmp_27_i_cast_i_cast_fu_891_p1 = loc_mult_y_3_2_i_i_fu_883_p3;

assign tmp_28_i_cast_i_fu_901_p1 = $signed(tmp_28_i_i_fu_895_p2);

assign tmp_28_i_i_fu_895_p2 = (tmp_25_i_cast_i_fu_869_p1 - p_shl10_i_cast_i_fu_785_p1);

assign tmp_30_i_cast_i_cast_fu_990_p1 = $signed(loc_mult_x_2_4_i_i_fu_984_p2);

assign tmp_32_i_cast_i_cast_fu_925_p1 = $signed(loc_mult_y_4_2_i_i_fu_919_p2);

assign tmp_44_cast_i_fu_478_p1 = width_read_reg_1253;

assign tmp_45_i_fu_481_p2 = (tmp_44_cast_i_fu_478_p1 + 17'd2);

assign tmp_46_fu_547_p4 = {{row_fu_523_p2[15:1]}};

assign tmp_47_fu_563_p4 = {{row_i_reg_417[15:1]}};

assign tmp_48_fu_614_p4 = {{col_i_mid2_fu_515_p3[15:1]}};

assign tmp_48_i_fu_534_p2 = ((row_i_reg_417 < height_read_reg_1246) ? 1'b1 : 1'b0);

assign tmp_48_i_mid1_fu_529_p2 = ((row_fu_523_p2 < height_read_reg_1246) ? 1'b1 : 1'b0);

assign tmp_48_i_mid2_fu_539_p3 = ((tmp_52_i_fu_499_p2[0:0] === 1'b1) ? tmp_48_i_fu_534_p2 : tmp_48_i_mid1_fu_529_p2);

assign tmp_49_fu_831_p1 = deriv_window_12_V_fu_238[11:0];

assign tmp_50_fu_873_p4 = {{deriv_window_17_V_fu_242[23:12]}};

assign tmp_50_i_mid2_fu_579_p3 = ((tmp_52_i_fu_499_p2[0:0] === 1'b1) ? icmp4_fu_573_p2 : icmp3_fu_557_p2);

assign tmp_51_cast_i_fu_495_p1 = col_i_reg_428;

assign tmp_51_fu_1075_p1 = mul3_fu_1165_p2[33:0];

assign tmp_52_i_fu_499_p2 = ((tmp_51_cast_i_fu_495_p1 < tmp_45_i_reg_1259) ? 1'b1 : 1'b0);

assign tmp_53_fu_1084_p4 = {{neg_mul4_fu_1078_p2[33:21]}};

assign tmp_53_i_fu_595_p2 = ((col_i_mid2_fu_515_p3 < width_read_reg_1253) ? 1'b1 : 1'b0);

assign tmp_54_fu_1094_p1 = $signed(tmp_53_fu_1084_p4);

assign tmp_54_i_fu_600_p1 = col_i_mid2_fu_515_p3;

assign tmp_55_fu_1098_p4 = {{mul3_fu_1165_p2[35:21]}};

assign tmp_56_fu_1107_p1 = $signed(tmp_55_fu_1098_p4);

assign tmp_57_fu_1118_p1 = p_v_fu_1111_p3[12:0];

assign tmp_57_i_fu_748_p1 = col_i_mid2_reg_1278;

assign tmp_58_fu_1021_p1 = mul_fu_1157_p2[33:0];

assign tmp_59_i_fu_630_p2 = (tmp_50_i_mid2_fu_579_p3 & icmp_fu_624_p2);

assign tmp_60_fu_1030_p4 = {{neg_mul_fu_1024_p2[33:21]}};

assign tmp_61_fu_1040_p1 = $signed(tmp_60_fu_1030_p4);

assign tmp_61_i_fu_636_p2 = (tmp_59_i_fu_630_p2 & or_cond_i_fu_608_p2);

assign tmp_62_fu_1044_p4 = {{mul_fu_1157_p2[35:21]}};

assign tmp_63_fu_1053_p1 = $signed(tmp_62_fu_1044_p4);

assign tmp_64_fu_1064_p1 = p_v1_fu_1057_p3[12:0];

assign tmp_65_fu_1127_p1 = p_v_fu_1111_p3[12:0];

assign tmp_66_fu_1068_p1 = p_v1_fu_1057_p3[12:0];

assign tmp_81_2_4_i_cast_i_fu_980_p1 = p_Result_2_4_i_i_fu_970_p4;

assign tmp_81_4_2_i_cast_i_fu_915_p1 = p_Result_4_2_i_i_fu_905_p4;

assign tmp_fu_767_p4 = {{deriv_window_7_V_fu_226[23:12]}};

assign tmp_i_cast_i_fu_835_p1 = p_Result_2_i_i_fu_789_p4;

assign tmp_s_fu_799_p4 = {{deriv_window_11_V_fu_234[23:12]}};

assign width_out_din = width_dout;

endmodule //hls_SpatialTemporalD
