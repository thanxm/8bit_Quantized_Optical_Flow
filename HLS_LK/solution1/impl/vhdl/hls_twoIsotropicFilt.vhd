-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity hls_twoIsotropicFilt is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    inp1_img_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    inp1_img_TVALID : IN STD_LOGIC;
    inp1_img_TREADY : OUT STD_LOGIC;
    inp1_img_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    inp2_img_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    inp2_img_TVALID : IN STD_LOGIC;
    inp2_img_TREADY : OUT STD_LOGIC;
    inp2_img_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    out1_img_V_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    out1_img_V_full_n : IN STD_LOGIC;
    out1_img_V_write : OUT STD_LOGIC;
    out2_img_V_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    out2_img_V_full_n : IN STD_LOGIC;
    out2_img_V_write : OUT STD_LOGIC;
    height : IN STD_LOGIC_VECTOR (15 downto 0);
    width : IN STD_LOGIC_VECTOR (15 downto 0);
    height_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    height_out_full_n : IN STD_LOGIC;
    height_out_write : OUT STD_LOGIC;
    width_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    width_out_full_n : IN STD_LOGIC;
    width_out_write : OUT STD_LOGIC );
end;


architecture behav of hls_twoIsotropicFilt is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv33_0 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv17_2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_const_lv33_1 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal inp1_img_V_data_V_0_data_out : STD_LOGIC_VECTOR (7 downto 0);
    signal inp1_img_V_data_V_0_vld_in : STD_LOGIC;
    signal inp1_img_V_data_V_0_vld_out : STD_LOGIC;
    signal inp1_img_V_data_V_0_ack_in : STD_LOGIC;
    signal inp1_img_V_data_V_0_ack_out : STD_LOGIC;
    signal inp1_img_V_data_V_0_payload_A : STD_LOGIC_VECTOR (7 downto 0);
    signal inp1_img_V_data_V_0_payload_B : STD_LOGIC_VECTOR (7 downto 0);
    signal inp1_img_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal inp1_img_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal inp1_img_V_data_V_0_sel : STD_LOGIC;
    signal inp1_img_V_data_V_0_load_A : STD_LOGIC;
    signal inp1_img_V_data_V_0_load_B : STD_LOGIC;
    signal inp1_img_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal inp1_img_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal inp1_img_V_last_V_0_vld_in : STD_LOGIC;
    signal inp1_img_V_last_V_0_ack_out : STD_LOGIC;
    signal inp1_img_V_last_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal inp2_img_V_data_V_0_data_out : STD_LOGIC_VECTOR (7 downto 0);
    signal inp2_img_V_data_V_0_vld_in : STD_LOGIC;
    signal inp2_img_V_data_V_0_vld_out : STD_LOGIC;
    signal inp2_img_V_data_V_0_ack_in : STD_LOGIC;
    signal inp2_img_V_data_V_0_ack_out : STD_LOGIC;
    signal inp2_img_V_data_V_0_payload_A : STD_LOGIC_VECTOR (7 downto 0);
    signal inp2_img_V_data_V_0_payload_B : STD_LOGIC_VECTOR (7 downto 0);
    signal inp2_img_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal inp2_img_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal inp2_img_V_data_V_0_sel : STD_LOGIC;
    signal inp2_img_V_data_V_0_load_A : STD_LOGIC;
    signal inp2_img_V_data_V_0_load_B : STD_LOGIC;
    signal inp2_img_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal inp2_img_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal inp2_img_V_last_V_0_vld_in : STD_LOGIC;
    signal inp2_img_V_last_V_0_ack_out : STD_LOGIC;
    signal inp2_img_V_last_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal lpf_lines_buffer_V_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal lpf_lines_buffer_V_1_ce0 : STD_LOGIC;
    signal lpf_lines_buffer_V_1_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal lpf_lines_buffer_V_1_ce1 : STD_LOGIC;
    signal lpf_lines_buffer_V_1_we1 : STD_LOGIC;
    signal lpf_lines_buffer_V_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal lpf_lines_buffer_V_2_ce0 : STD_LOGIC;
    signal lpf_lines_buffer_V_2_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal lpf_lines_buffer_V_2_ce1 : STD_LOGIC;
    signal lpf_lines_buffer_V_2_we1 : STD_LOGIC;
    signal lpf_lines_buffer_V_3_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal lpf_lines_buffer_V_3_ce0 : STD_LOGIC;
    signal lpf_lines_buffer_V_3_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal lpf_lines_buffer_V_3_ce1 : STD_LOGIC;
    signal lpf_lines_buffer_V_3_we1 : STD_LOGIC;
    signal lpf_lines_buffer_V_4_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal lpf_lines_buffer_V_4_ce0 : STD_LOGIC;
    signal lpf_lines_buffer_V_4_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal lpf_lines_buffer_V_4_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal lpf_lines_buffer_V_4_ce1 : STD_LOGIC;
    signal lpf_lines_buffer_V_4_we1 : STD_LOGIC;
    signal inp1_img_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_flatten_fu_484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_fu_588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal inp2_img_TDATA_blk_n : STD_LOGIC;
    signal out1_img_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal tmp_17_i_reg_1081 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_i_reg_1081_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal out2_img_V_blk_n : STD_LOGIC;
    signal height_out_blk_n : STD_LOGIC;
    signal width_out_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_367 : STD_LOGIC_VECTOR (32 downto 0);
    signal row_i_reg_378 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_i_reg_389 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal tmp_5_i_fu_461_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_5_i_reg_1011 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_867_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal bound_reg_1016 : STD_LOGIC_VECTOR (33 downto 0);
    signal exitcond_flatten_reg_1021 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op81_read_state2 : BOOLEAN;
    signal ap_predicate_op83_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond_flatten_reg_1021_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1021_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_489_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal col_i_mid2_fu_495_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_i_mid2_reg_1030 : STD_LOGIC_VECTOR (15 downto 0);
    signal row_i_mid2_fu_567_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_i_fu_575_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_i_reg_1040 : STD_LOGIC_VECTOR (0 downto 0);
    signal lpf_lines_buffer_V_1_1_reg_1044 : STD_LOGIC_VECTOR (8 downto 0);
    signal lpf_lines_buffer_V_2_1_reg_1050 : STD_LOGIC_VECTOR (8 downto 0);
    signal lpf_lines_buffer_V_3_1_reg_1056 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_cond_i_reg_1067 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_data_V_reg_1071 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_data_V_1_reg_1076 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_i_fu_618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_i_reg_1081_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_i_fu_624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_i_reg_1085 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_i_reg_1085_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_i_reg_1085_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_fu_630_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_0_V_load_reg_1094 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_1_V_load_reg_1099 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_2_V_load_reg_1104 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_22_V_load_reg_1109 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_5_V_load_reg_1114 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_6_V_load_reg_1119 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_7_V_load_reg_1124 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_21_V_load_reg_1129 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_10_V_load_reg_1134 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_11_V_load_reg_1139 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_12_V_load_reg_1144 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_20_V_load_reg_1149 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_15_V_load_reg_1154 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_16_V_load_reg_1159 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_17_V_load_reg_1164 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_23_V_1_reg_1169 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_3_V_1_reg_1174 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_8_V_1_reg_1179 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_13_V_1_reg_1184 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_18_V_1_reg_1189 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter1_state3 : STD_LOGIC;
    signal grp_hls_isotropic_kernel_fu_424_ap_return : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_hls_isotropic_kernel_fu_424_ap_ce : STD_LOGIC;
    signal ap_predicate_op157_call_state4 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1_ignore_call5 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2_ignore_call5 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp157 : BOOLEAN;
    signal ap_phi_mux_p_1_i_phi_fu_404_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal filt_out1_V_fu_851_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_reg_pp0_iter3_p_1_i_reg_400 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_reg_pp0_iter0_p_1_i_reg_400 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_reg_pp0_iter1_p_1_i_reg_400 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_reg_pp0_iter2_p_1_i_reg_400 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_mux_p_2_i_phi_fu_416_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_reg_pp0_iter3_p_2_i_reg_412 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_reg_pp0_iter0_p_2_i_reg_412 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_reg_pp0_iter1_p_2_i_reg_412 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_reg_pp0_iter2_p_2_i_reg_412 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_13_i_fu_580_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_i_fu_822_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal window_0_V_fu_150 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_1_V_fu_154 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_2_V_fu_158 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_22_V_fu_162 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_5_V_fu_166 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_6_V_fu_170 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_7_V_fu_174 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_21_V_fu_178 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_10_V_fu_182 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_11_V_fu_186 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_12_V_fu_190 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_20_V_fu_194 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_15_V_fu_198 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_16_V_fu_202 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_17_V_fu_206 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_23_V_fu_210 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_s_fu_818_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_3_V_fu_214 : STD_LOGIC_VECTOR (23 downto 0);
    signal pixels_0_V_fu_771_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_8_V_fu_218 : STD_LOGIC_VECTOR (23 downto 0);
    signal pixels_1_V_fu_775_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_13_V_fu_222 : STD_LOGIC_VECTOR (23 downto 0);
    signal pixels_2_V_fu_779_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal window_18_V_fu_226 : STD_LOGIC_VECTOR (23 downto 0);
    signal pixels_3_V_fu_783_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_14_i_fu_810_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_4_cast_i_fu_457_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_1_cast_i_fu_475_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal indvar_flatten_cast_fu_471_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_10_i_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_fu_503_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_8_i_fu_514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_i_mid1_fu_509_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_527_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_1_fu_543_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp2_fu_553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp1_fu_537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_i_mid2_fu_519_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_602_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_9_i_mid2_fu_559_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_1_trunc_i_fu_807_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_867_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_867_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_867_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_867_p00 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_867_p20 : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_condition_433 : BOOLEAN;

    component hls_isotropic_kernel IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        window_0_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        window_1_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        window_2_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        window_3_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        window_4_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        window_5_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        window_6_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        window_7_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        window_8_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        window_9_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        window_10_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        window_11_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        window_12_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        window_13_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        window_14_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        window_15_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        window_16_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        window_17_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        window_18_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        window_19_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        window_20_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        window_21_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        window_22_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        window_23_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        window_24_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component hls_LK_am_addmul_16ns_3ns_17ns_34_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        din2 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (33 downto 0) );
    end component;


    component hls_twoIsotropicFilt_lpf_lines_buffer_V_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (19 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (19 downto 0) );
    end component;



begin
    lpf_lines_buffer_V_1_U : component hls_twoIsotropicFilt_lpf_lines_buffer_V_1
    generic map (
        DataWidth => 20,
        AddressRange => 480,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lpf_lines_buffer_V_1_address0,
        ce0 => lpf_lines_buffer_V_1_ce0,
        q0 => lpf_lines_buffer_V_1_q0,
        address1 => lpf_lines_buffer_V_1_1_reg_1044,
        ce1 => lpf_lines_buffer_V_1_ce1,
        we1 => lpf_lines_buffer_V_1_we1,
        d1 => lpf_lines_buffer_V_2_q0);

    lpf_lines_buffer_V_2_U : component hls_twoIsotropicFilt_lpf_lines_buffer_V_1
    generic map (
        DataWidth => 20,
        AddressRange => 480,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lpf_lines_buffer_V_2_address0,
        ce0 => lpf_lines_buffer_V_2_ce0,
        q0 => lpf_lines_buffer_V_2_q0,
        address1 => lpf_lines_buffer_V_2_1_reg_1050,
        ce1 => lpf_lines_buffer_V_2_ce1,
        we1 => lpf_lines_buffer_V_2_we1,
        d1 => lpf_lines_buffer_V_3_q0);

    lpf_lines_buffer_V_3_U : component hls_twoIsotropicFilt_lpf_lines_buffer_V_1
    generic map (
        DataWidth => 20,
        AddressRange => 480,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lpf_lines_buffer_V_3_address0,
        ce0 => lpf_lines_buffer_V_3_ce0,
        q0 => lpf_lines_buffer_V_3_q0,
        address1 => lpf_lines_buffer_V_3_1_reg_1056,
        ce1 => lpf_lines_buffer_V_3_ce1,
        we1 => lpf_lines_buffer_V_3_we1,
        d1 => lpf_lines_buffer_V_4_q0);

    lpf_lines_buffer_V_4_U : component hls_twoIsotropicFilt_lpf_lines_buffer_V_1
    generic map (
        DataWidth => 20,
        AddressRange => 480,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lpf_lines_buffer_V_4_address0,
        ce0 => lpf_lines_buffer_V_4_ce0,
        q0 => lpf_lines_buffer_V_4_q0,
        address1 => lpf_lines_buffer_V_4_address1,
        ce1 => lpf_lines_buffer_V_4_ce1,
        we1 => lpf_lines_buffer_V_4_we1,
        d1 => tmp_14_i_fu_810_p3);

    grp_hls_isotropic_kernel_fu_424 : component hls_isotropic_kernel
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        window_0_V_read => window_0_V_load_reg_1094,
        window_1_V_read => window_1_V_load_reg_1099,
        window_2_V_read => window_2_V_load_reg_1104,
        window_3_V_read => window_3_V_1_reg_1174,
        window_4_V_read => window_3_V_fu_214,
        window_5_V_read => window_5_V_load_reg_1114,
        window_6_V_read => window_6_V_load_reg_1119,
        window_7_V_read => window_7_V_load_reg_1124,
        window_8_V_read => window_8_V_1_reg_1179,
        window_9_V_read => window_8_V_fu_218,
        window_10_V_read => window_10_V_load_reg_1134,
        window_11_V_read => window_11_V_load_reg_1139,
        window_12_V_read => window_12_V_load_reg_1144,
        window_13_V_read => window_13_V_1_reg_1184,
        window_14_V_read => window_13_V_fu_222,
        window_15_V_read => window_15_V_load_reg_1154,
        window_16_V_read => window_16_V_load_reg_1159,
        window_17_V_read => window_17_V_load_reg_1164,
        window_18_V_read => window_18_V_1_reg_1189,
        window_19_V_read => window_18_V_fu_226,
        window_20_V_read => window_20_V_load_reg_1149,
        window_21_V_read => window_21_V_load_reg_1129,
        window_22_V_read => window_22_V_load_reg_1109,
        window_23_V_read => window_23_V_1_reg_1169,
        window_24_V_read => window_23_V_fu_210,
        ap_return => grp_hls_isotropic_kernel_fu_424_ap_return,
        ap_ce => grp_hls_isotropic_kernel_fu_424_ap_ce);

    hls_LK_am_addmul_16ns_3ns_17ns_34_1_1_U26 : component hls_LK_am_addmul_16ns_3ns_17ns_34_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 3,
        din2_WIDTH => 17,
        dout_WIDTH => 34)
    port map (
        din0 => grp_fu_867_p0,
        din1 => grp_fu_867_p1,
        din2 => grp_fu_867_p2,
        dout => grp_fu_867_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((exitcond_flatten_fu_484_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (width_out_full_n = ap_const_logic_0) or (height_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter1_state3)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif ((not(((real_start = ap_const_logic_0) or (width_out_full_n = ap_const_logic_0) or (height_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    inp1_img_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                inp1_img_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((inp1_img_V_data_V_0_ack_out = ap_const_logic_1) and (inp1_img_V_data_V_0_vld_out = ap_const_logic_1))) then 
                                        inp1_img_V_data_V_0_sel_rd <= not(inp1_img_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    inp1_img_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                inp1_img_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((inp1_img_V_data_V_0_ack_in = ap_const_logic_1) and (inp1_img_V_data_V_0_vld_in = ap_const_logic_1))) then 
                                        inp1_img_V_data_V_0_sel_wr <= not(inp1_img_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    inp1_img_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                inp1_img_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((inp1_img_V_data_V_0_state = ap_const_lv2_2) and (inp1_img_V_data_V_0_vld_in = ap_const_logic_0)) or ((inp1_img_V_data_V_0_state = ap_const_lv2_3) and (inp1_img_V_data_V_0_vld_in = ap_const_logic_0) and (inp1_img_V_data_V_0_ack_out = ap_const_logic_1)))) then 
                    inp1_img_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((inp1_img_V_data_V_0_state = ap_const_lv2_1) and (inp1_img_V_data_V_0_ack_out = ap_const_logic_0)) or ((inp1_img_V_data_V_0_state = ap_const_lv2_3) and (inp1_img_V_data_V_0_ack_out = ap_const_logic_0) and (inp1_img_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    inp1_img_V_data_V_0_state <= ap_const_lv2_1;
                elsif (((not(((inp1_img_V_data_V_0_vld_in = ap_const_logic_0) and (inp1_img_V_data_V_0_ack_out = ap_const_logic_1))) and not(((inp1_img_V_data_V_0_ack_out = ap_const_logic_0) and (inp1_img_V_data_V_0_vld_in = ap_const_logic_1))) and (inp1_img_V_data_V_0_state = ap_const_lv2_3)) or ((inp1_img_V_data_V_0_state = ap_const_lv2_1) and (inp1_img_V_data_V_0_ack_out = ap_const_logic_1)) or ((inp1_img_V_data_V_0_state = ap_const_lv2_2) and (inp1_img_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    inp1_img_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    inp1_img_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    inp1_img_V_last_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                inp1_img_V_last_V_0_state <= ap_const_lv2_0;
            else
                if ((((inp1_img_V_last_V_0_state = ap_const_lv2_2) and (inp1_img_V_last_V_0_vld_in = ap_const_logic_0)) or ((inp1_img_V_last_V_0_state = ap_const_lv2_3) and (inp1_img_V_last_V_0_vld_in = ap_const_logic_0) and (inp1_img_V_last_V_0_ack_out = ap_const_logic_1)))) then 
                    inp1_img_V_last_V_0_state <= ap_const_lv2_2;
                elsif ((((inp1_img_V_last_V_0_state = ap_const_lv2_1) and (inp1_img_V_last_V_0_ack_out = ap_const_logic_0)) or ((inp1_img_V_last_V_0_state = ap_const_lv2_3) and (inp1_img_V_last_V_0_ack_out = ap_const_logic_0) and (inp1_img_V_last_V_0_vld_in = ap_const_logic_1)))) then 
                    inp1_img_V_last_V_0_state <= ap_const_lv2_1;
                elsif (((not(((inp1_img_V_last_V_0_vld_in = ap_const_logic_0) and (inp1_img_V_last_V_0_ack_out = ap_const_logic_1))) and not(((inp1_img_V_last_V_0_ack_out = ap_const_logic_0) and (inp1_img_V_last_V_0_vld_in = ap_const_logic_1))) and (inp1_img_V_last_V_0_state = ap_const_lv2_3)) or ((inp1_img_V_last_V_0_state = ap_const_lv2_1) and (inp1_img_V_last_V_0_ack_out = ap_const_logic_1)) or ((inp1_img_V_last_V_0_state = ap_const_lv2_2) and (inp1_img_V_last_V_0_vld_in = ap_const_logic_1)))) then 
                    inp1_img_V_last_V_0_state <= ap_const_lv2_3;
                else 
                    inp1_img_V_last_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    inp2_img_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                inp2_img_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((inp2_img_V_data_V_0_ack_out = ap_const_logic_1) and (inp2_img_V_data_V_0_vld_out = ap_const_logic_1))) then 
                                        inp2_img_V_data_V_0_sel_rd <= not(inp2_img_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    inp2_img_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                inp2_img_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((inp2_img_V_data_V_0_ack_in = ap_const_logic_1) and (inp2_img_V_data_V_0_vld_in = ap_const_logic_1))) then 
                                        inp2_img_V_data_V_0_sel_wr <= not(inp2_img_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    inp2_img_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                inp2_img_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((inp2_img_V_data_V_0_state = ap_const_lv2_2) and (inp2_img_V_data_V_0_vld_in = ap_const_logic_0)) or ((inp2_img_V_data_V_0_state = ap_const_lv2_3) and (inp2_img_V_data_V_0_vld_in = ap_const_logic_0) and (inp2_img_V_data_V_0_ack_out = ap_const_logic_1)))) then 
                    inp2_img_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((inp2_img_V_data_V_0_state = ap_const_lv2_1) and (inp2_img_V_data_V_0_ack_out = ap_const_logic_0)) or ((inp2_img_V_data_V_0_state = ap_const_lv2_3) and (inp2_img_V_data_V_0_ack_out = ap_const_logic_0) and (inp2_img_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    inp2_img_V_data_V_0_state <= ap_const_lv2_1;
                elsif (((not(((inp2_img_V_data_V_0_vld_in = ap_const_logic_0) and (inp2_img_V_data_V_0_ack_out = ap_const_logic_1))) and not(((inp2_img_V_data_V_0_ack_out = ap_const_logic_0) and (inp2_img_V_data_V_0_vld_in = ap_const_logic_1))) and (inp2_img_V_data_V_0_state = ap_const_lv2_3)) or ((inp2_img_V_data_V_0_state = ap_const_lv2_1) and (inp2_img_V_data_V_0_ack_out = ap_const_logic_1)) or ((inp2_img_V_data_V_0_state = ap_const_lv2_2) and (inp2_img_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    inp2_img_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    inp2_img_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    inp2_img_V_last_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                inp2_img_V_last_V_0_state <= ap_const_lv2_0;
            else
                if ((((inp2_img_V_last_V_0_state = ap_const_lv2_2) and (inp2_img_V_last_V_0_vld_in = ap_const_logic_0)) or ((inp2_img_V_last_V_0_state = ap_const_lv2_3) and (inp2_img_V_last_V_0_vld_in = ap_const_logic_0) and (inp2_img_V_last_V_0_ack_out = ap_const_logic_1)))) then 
                    inp2_img_V_last_V_0_state <= ap_const_lv2_2;
                elsif ((((inp2_img_V_last_V_0_state = ap_const_lv2_1) and (inp2_img_V_last_V_0_ack_out = ap_const_logic_0)) or ((inp2_img_V_last_V_0_state = ap_const_lv2_3) and (inp2_img_V_last_V_0_ack_out = ap_const_logic_0) and (inp2_img_V_last_V_0_vld_in = ap_const_logic_1)))) then 
                    inp2_img_V_last_V_0_state <= ap_const_lv2_1;
                elsif (((not(((inp2_img_V_last_V_0_vld_in = ap_const_logic_0) and (inp2_img_V_last_V_0_ack_out = ap_const_logic_1))) and not(((inp2_img_V_last_V_0_ack_out = ap_const_logic_0) and (inp2_img_V_last_V_0_vld_in = ap_const_logic_1))) and (inp2_img_V_last_V_0_state = ap_const_lv2_3)) or ((inp2_img_V_last_V_0_state = ap_const_lv2_1) and (inp2_img_V_last_V_0_ack_out = ap_const_logic_1)) or ((inp2_img_V_last_V_0_state = ap_const_lv2_2) and (inp2_img_V_last_V_0_vld_in = ap_const_logic_1)))) then 
                    inp2_img_V_last_V_0_state <= ap_const_lv2_3;
                else 
                    inp2_img_V_last_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_p_1_i_reg_400_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_433)) then
                if (((tmp_19_i_fu_624_p2 = ap_const_lv1_0) and (exitcond_flatten_fu_484_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_p_1_i_reg_400 <= ap_const_lv12_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_1_i_reg_400 <= ap_phi_reg_pp0_iter0_p_1_i_reg_400;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_p_2_i_reg_412_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_433)) then
                if (((tmp_19_i_fu_624_p2 = ap_const_lv1_0) and (exitcond_flatten_fu_484_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_p_2_i_reg_412 <= ap_const_lv12_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_2_i_reg_412 <= ap_phi_reg_pp0_iter0_p_2_i_reg_412;
                end if;
            end if; 
        end if;
    end process;

    col_i_reg_389_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_484_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                col_i_reg_389 <= col_fu_630_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (width_out_full_n = ap_const_logic_0) or (height_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                col_i_reg_389 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_367_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_484_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_367 <= indvar_flatten_next_fu_489_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (width_out_full_n = ap_const_logic_0) or (height_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_367 <= ap_const_lv33_0;
            end if; 
        end if;
    end process;

    row_i_reg_378_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_484_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                row_i_reg_378 <= row_i_mid2_fu_567_p3;
            elsif ((not(((real_start = ap_const_logic_0) or (width_out_full_n = ap_const_logic_0) or (height_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                row_i_reg_378 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter2_p_1_i_reg_400 <= ap_phi_reg_pp0_iter1_p_1_i_reg_400;
                ap_phi_reg_pp0_iter2_p_2_i_reg_412 <= ap_phi_reg_pp0_iter1_p_2_i_reg_412;
                    window_0_V_fu_150(19 downto 0) <= window_1_V_fu_154(19 downto 0);
                    window_10_V_fu_182(19 downto 0) <= window_11_V_fu_186(19 downto 0);
                    window_11_V_fu_186(19 downto 0) <= window_12_V_fu_190(19 downto 0);
                    window_12_V_fu_190(19 downto 0) <= window_13_V_fu_222(19 downto 0);
                    window_15_V_fu_198(19 downto 0) <= window_16_V_fu_202(19 downto 0);
                    window_16_V_fu_202(19 downto 0) <= window_17_V_fu_206(19 downto 0);
                    window_17_V_fu_206(19 downto 0) <= window_18_V_fu_226(19 downto 0);
                    window_1_V_fu_154(19 downto 0) <= window_2_V_fu_158(19 downto 0);
                    window_20_V_fu_194(7 downto 0) <= window_21_V_fu_178(7 downto 0);    window_20_V_fu_194(19 downto 12) <= window_21_V_fu_178(19 downto 12);
                    window_21_V_fu_178(7 downto 0) <= window_22_V_fu_162(7 downto 0);    window_21_V_fu_178(19 downto 12) <= window_22_V_fu_162(19 downto 12);
                    window_22_V_fu_162(7 downto 0) <= window_23_V_fu_210(7 downto 0);    window_22_V_fu_162(19 downto 12) <= window_23_V_fu_210(19 downto 12);
                    window_2_V_fu_158(19 downto 0) <= window_3_V_fu_214(19 downto 0);
                    window_5_V_fu_166(19 downto 0) <= window_6_V_fu_170(19 downto 0);
                    window_6_V_fu_170(19 downto 0) <= window_7_V_fu_174(19 downto 0);
                    window_7_V_fu_174(19 downto 0) <= window_8_V_fu_218(19 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter3_p_1_i_reg_400 <= ap_phi_reg_pp0_iter2_p_1_i_reg_400;
                ap_phi_reg_pp0_iter3_p_2_i_reg_412 <= ap_phi_reg_pp0_iter2_p_2_i_reg_412;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (width_out_full_n = ap_const_logic_0) or (height_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                bound_reg_1016 <= grp_fu_867_p3;
                tmp_5_i_reg_1011 <= tmp_5_i_fu_461_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_484_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                col_i_mid2_reg_1030 <= col_i_mid2_fu_495_p3;
                or_cond_i_reg_1067 <= or_cond_i_fu_588_p2;
                tmp_12_i_reg_1040 <= tmp_12_i_fu_575_p2;
                tmp_17_i_reg_1081 <= tmp_17_i_fu_618_p2;
                tmp_19_i_reg_1085 <= tmp_19_i_fu_624_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_flatten_reg_1021 <= exitcond_flatten_fu_484_p2;
                exitcond_flatten_reg_1021_pp0_iter1_reg <= exitcond_flatten_reg_1021;
                tmp_17_i_reg_1081_pp0_iter1_reg <= tmp_17_i_reg_1081;
                tmp_19_i_reg_1085_pp0_iter1_reg <= tmp_19_i_reg_1085;
                    window_0_V_load_reg_1094(19 downto 0) <= window_0_V_fu_150(19 downto 0);
                    window_10_V_load_reg_1134(19 downto 0) <= window_10_V_fu_182(19 downto 0);
                    window_11_V_load_reg_1139(19 downto 0) <= window_11_V_fu_186(19 downto 0);
                    window_12_V_load_reg_1144(19 downto 0) <= window_12_V_fu_190(19 downto 0);
                    window_13_V_1_reg_1184(19 downto 0) <= window_13_V_fu_222(19 downto 0);
                    window_15_V_load_reg_1154(19 downto 0) <= window_15_V_fu_198(19 downto 0);
                    window_16_V_load_reg_1159(19 downto 0) <= window_16_V_fu_202(19 downto 0);
                    window_17_V_load_reg_1164(19 downto 0) <= window_17_V_fu_206(19 downto 0);
                    window_18_V_1_reg_1189(19 downto 0) <= window_18_V_fu_226(19 downto 0);
                    window_1_V_load_reg_1099(19 downto 0) <= window_1_V_fu_154(19 downto 0);
                    window_20_V_load_reg_1149(7 downto 0) <= window_20_V_fu_194(7 downto 0);    window_20_V_load_reg_1149(19 downto 12) <= window_20_V_fu_194(19 downto 12);
                    window_21_V_load_reg_1129(7 downto 0) <= window_21_V_fu_178(7 downto 0);    window_21_V_load_reg_1129(19 downto 12) <= window_21_V_fu_178(19 downto 12);
                    window_22_V_load_reg_1109(7 downto 0) <= window_22_V_fu_162(7 downto 0);    window_22_V_load_reg_1109(19 downto 12) <= window_22_V_fu_162(19 downto 12);
                    window_23_V_1_reg_1169(7 downto 0) <= window_23_V_fu_210(7 downto 0);    window_23_V_1_reg_1169(19 downto 12) <= window_23_V_fu_210(19 downto 12);
                    window_2_V_load_reg_1104(19 downto 0) <= window_2_V_fu_158(19 downto 0);
                    window_3_V_1_reg_1174(19 downto 0) <= window_3_V_fu_214(19 downto 0);
                    window_5_V_load_reg_1114(19 downto 0) <= window_5_V_fu_166(19 downto 0);
                    window_6_V_load_reg_1119(19 downto 0) <= window_6_V_fu_170(19 downto 0);
                    window_7_V_load_reg_1124(19 downto 0) <= window_7_V_fu_174(19 downto 0);
                    window_8_V_1_reg_1179(19 downto 0) <= window_8_V_fu_218(19 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                exitcond_flatten_reg_1021_pp0_iter2_reg <= exitcond_flatten_reg_1021_pp0_iter1_reg;
                tmp_17_i_reg_1081_pp0_iter2_reg <= tmp_17_i_reg_1081_pp0_iter1_reg;
                tmp_19_i_reg_1085_pp0_iter2_reg <= tmp_19_i_reg_1085_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((inp1_img_V_data_V_0_load_A = ap_const_logic_1)) then
                inp1_img_V_data_V_0_payload_A <= inp1_img_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((inp1_img_V_data_V_0_load_B = ap_const_logic_1)) then
                inp1_img_V_data_V_0_payload_B <= inp1_img_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((inp2_img_V_data_V_0_load_A = ap_const_logic_1)) then
                inp2_img_V_data_V_0_payload_A <= inp2_img_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((inp2_img_V_data_V_0_load_B = ap_const_logic_1)) then
                inp2_img_V_data_V_0_payload_B <= inp2_img_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_12_i_fu_575_p2 = ap_const_lv1_1) and (exitcond_flatten_fu_484_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                lpf_lines_buffer_V_1_1_reg_1044 <= tmp_13_i_fu_580_p1(9 - 1 downto 0);
                lpf_lines_buffer_V_2_1_reg_1050 <= tmp_13_i_fu_580_p1(9 - 1 downto 0);
                lpf_lines_buffer_V_3_1_reg_1056 <= tmp_13_i_fu_580_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_fu_588_p2 = ap_const_lv1_1) and (exitcond_flatten_fu_484_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_data_V_1_reg_1076 <= inp2_img_V_data_V_0_data_out;
                tmp_data_V_reg_1071 <= inp1_img_V_data_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_12_i_reg_1040 = ap_const_lv1_1) and (exitcond_flatten_reg_1021 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    window_13_V_fu_222(19 downto 0) <= pixels_2_V_fu_779_p1(19 downto 0);
                    window_18_V_fu_226(19 downto 0) <= pixels_3_V_fu_783_p1(19 downto 0);
                    window_3_V_fu_214(19 downto 0) <= pixels_0_V_fu_771_p1(19 downto 0);
                    window_8_V_fu_218(19 downto 0) <= pixels_1_V_fu_775_p1(19 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1067 = ap_const_lv1_1) and (exitcond_flatten_reg_1021 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    window_23_V_fu_210(7 downto 0) <= p_Result_s_fu_818_p1(7 downto 0);    window_23_V_fu_210(19 downto 12) <= p_Result_s_fu_818_p1(19 downto 12);
            end if;
        end if;
    end process;
    window_0_V_load_reg_1094(23 downto 20) <= "0000";
    window_1_V_load_reg_1099(23 downto 20) <= "0000";
    window_2_V_load_reg_1104(23 downto 20) <= "0000";
    window_22_V_load_reg_1109(11 downto 8) <= "0000";
    window_22_V_load_reg_1109(23 downto 20) <= "0000";
    window_5_V_load_reg_1114(23 downto 20) <= "0000";
    window_6_V_load_reg_1119(23 downto 20) <= "0000";
    window_7_V_load_reg_1124(23 downto 20) <= "0000";
    window_21_V_load_reg_1129(11 downto 8) <= "0000";
    window_21_V_load_reg_1129(23 downto 20) <= "0000";
    window_10_V_load_reg_1134(23 downto 20) <= "0000";
    window_11_V_load_reg_1139(23 downto 20) <= "0000";
    window_12_V_load_reg_1144(23 downto 20) <= "0000";
    window_20_V_load_reg_1149(11 downto 8) <= "0000";
    window_20_V_load_reg_1149(23 downto 20) <= "0000";
    window_15_V_load_reg_1154(23 downto 20) <= "0000";
    window_16_V_load_reg_1159(23 downto 20) <= "0000";
    window_17_V_load_reg_1164(23 downto 20) <= "0000";
    window_23_V_1_reg_1169(11 downto 8) <= "0000";
    window_23_V_1_reg_1169(23 downto 20) <= "0000";
    window_3_V_1_reg_1174(23 downto 20) <= "0000";
    window_8_V_1_reg_1179(23 downto 20) <= "0000";
    window_13_V_1_reg_1184(23 downto 20) <= "0000";
    window_18_V_1_reg_1189(23 downto 20) <= "0000";
    window_0_V_fu_150(23 downto 20) <= "0000";
    window_1_V_fu_154(23 downto 20) <= "0000";
    window_2_V_fu_158(23 downto 20) <= "0000";
    window_22_V_fu_162(11 downto 8) <= "0000";
    window_22_V_fu_162(23 downto 20) <= "0000";
    window_5_V_fu_166(23 downto 20) <= "0000";
    window_6_V_fu_170(23 downto 20) <= "0000";
    window_7_V_fu_174(23 downto 20) <= "0000";
    window_21_V_fu_178(11 downto 8) <= "0000";
    window_21_V_fu_178(23 downto 20) <= "0000";
    window_10_V_fu_182(23 downto 20) <= "0000";
    window_11_V_fu_186(23 downto 20) <= "0000";
    window_12_V_fu_190(23 downto 20) <= "0000";
    window_20_V_fu_194(11 downto 8) <= "0000";
    window_20_V_fu_194(23 downto 20) <= "0000";
    window_15_V_fu_198(23 downto 20) <= "0000";
    window_16_V_fu_202(23 downto 20) <= "0000";
    window_17_V_fu_206(23 downto 20) <= "0000";
    window_23_V_fu_210(11 downto 8) <= "0000";
    window_23_V_fu_210(23 downto 20) <= "0000";
    window_3_V_fu_214(23 downto 20) <= "0000";
    window_8_V_fu_218(23 downto 20) <= "0000";
    window_13_V_fu_222(23 downto 20) <= "0000";
    window_18_V_fu_226(23 downto 20) <= "0000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, height_out_full_n, width_out_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (width_out_full_n = ap_const_logic_0) or (height_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and not(((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state6 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(inp1_img_V_data_V_0_vld_out, inp2_img_V_data_V_0_vld_out, out1_img_V_full_n, out2_img_V_full_n, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, tmp_17_i_reg_1081_pp0_iter2_reg, ap_predicate_op81_read_state2, ap_predicate_op83_read_state2)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (((tmp_17_i_reg_1081_pp0_iter2_reg = ap_const_lv1_1) and (out2_img_V_full_n = ap_const_logic_0)) or ((tmp_17_i_reg_1081_pp0_iter2_reg = ap_const_lv1_1) and (out1_img_V_full_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((inp2_img_V_data_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op83_read_state2 = ap_const_boolean_1)) or ((inp1_img_V_data_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op81_read_state2 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(inp1_img_V_data_V_0_vld_out, inp2_img_V_data_V_0_vld_out, out1_img_V_full_n, out2_img_V_full_n, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, tmp_17_i_reg_1081_pp0_iter2_reg, ap_predicate_op81_read_state2, ap_predicate_op83_read_state2)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (((tmp_17_i_reg_1081_pp0_iter2_reg = ap_const_lv1_1) and (out2_img_V_full_n = ap_const_logic_0)) or ((tmp_17_i_reg_1081_pp0_iter2_reg = ap_const_lv1_1) and (out1_img_V_full_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((inp2_img_V_data_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op83_read_state2 = ap_const_boolean_1)) or ((inp1_img_V_data_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op81_read_state2 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp157_assign_proc : process(inp1_img_V_data_V_0_vld_out, inp2_img_V_data_V_0_vld_out, out1_img_V_full_n, out2_img_V_full_n, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, tmp_17_i_reg_1081_pp0_iter2_reg, ap_predicate_op81_read_state2, ap_predicate_op83_read_state2)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp157 <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (((tmp_17_i_reg_1081_pp0_iter2_reg = ap_const_lv1_1) and (out2_img_V_full_n = ap_const_logic_0)) or ((tmp_17_i_reg_1081_pp0_iter2_reg = ap_const_lv1_1) and (out1_img_V_full_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((inp2_img_V_data_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op83_read_state2 = ap_const_boolean_1)) or ((inp1_img_V_data_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op81_read_state2 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(inp1_img_V_data_V_0_vld_out, inp2_img_V_data_V_0_vld_out, out1_img_V_full_n, out2_img_V_full_n, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, tmp_17_i_reg_1081_pp0_iter2_reg, ap_predicate_op81_read_state2, ap_predicate_op83_read_state2)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (((tmp_17_i_reg_1081_pp0_iter2_reg = ap_const_lv1_1) and (out2_img_V_full_n = ap_const_logic_0)) or ((tmp_17_i_reg_1081_pp0_iter2_reg = ap_const_lv1_1) and (out1_img_V_full_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((inp2_img_V_data_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op83_read_state2 = ap_const_boolean_1)) or ((inp1_img_V_data_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op81_read_state2 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, height_out_full_n, width_out_full_n)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (width_out_full_n = ap_const_logic_0) or (height_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state2_pp0_stage0_iter0_assign_proc : process(inp1_img_V_data_V_0_vld_out, inp2_img_V_data_V_0_vld_out, ap_predicate_op81_read_state2, ap_predicate_op83_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter0 <= (((inp2_img_V_data_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op83_read_state2 = ap_const_boolean_1)) or ((inp1_img_V_data_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op81_read_state2 = ap_const_boolean_1)));
    end process;


    ap_block_state2_pp0_stage0_iter0_ignore_call5_assign_proc : process(inp1_img_V_data_V_0_vld_out, inp2_img_V_data_V_0_vld_out, ap_predicate_op81_read_state2, ap_predicate_op83_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter0_ignore_call5 <= (((inp2_img_V_data_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op83_read_state2 = ap_const_boolean_1)) or ((inp1_img_V_data_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op81_read_state2 = ap_const_boolean_1)));
    end process;

        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter3_assign_proc : process(out1_img_V_full_n, out2_img_V_full_n, tmp_17_i_reg_1081_pp0_iter2_reg)
    begin
                ap_block_state5_pp0_stage0_iter3 <= (((tmp_17_i_reg_1081_pp0_iter2_reg = ap_const_lv1_1) and (out2_img_V_full_n = ap_const_logic_0)) or ((tmp_17_i_reg_1081_pp0_iter2_reg = ap_const_lv1_1) and (out1_img_V_full_n = ap_const_logic_0)));
    end process;


    ap_block_state5_pp0_stage0_iter3_ignore_call5_assign_proc : process(out1_img_V_full_n, out2_img_V_full_n, tmp_17_i_reg_1081_pp0_iter2_reg)
    begin
                ap_block_state5_pp0_stage0_iter3_ignore_call5 <= (((tmp_17_i_reg_1081_pp0_iter2_reg = ap_const_lv1_1) and (out2_img_V_full_n = ap_const_logic_0)) or ((tmp_17_i_reg_1081_pp0_iter2_reg = ap_const_lv1_1) and (out1_img_V_full_n = ap_const_logic_0)));
    end process;


    ap_condition_433_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_433 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_pp0_exit_iter1_state3_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter1_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter1_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_1_i_phi_fu_404_p4_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, exitcond_flatten_reg_1021_pp0_iter2_reg, tmp_19_i_reg_1085_pp0_iter2_reg, filt_out1_V_fu_851_p1, ap_phi_reg_pp0_iter3_p_1_i_reg_400)
    begin
        if (((tmp_19_i_reg_1085_pp0_iter2_reg = ap_const_lv1_1) and (exitcond_flatten_reg_1021_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_phi_mux_p_1_i_phi_fu_404_p4 <= filt_out1_V_fu_851_p1;
        else 
            ap_phi_mux_p_1_i_phi_fu_404_p4 <= ap_phi_reg_pp0_iter3_p_1_i_reg_400;
        end if; 
    end process;


    ap_phi_mux_p_2_i_phi_fu_416_p4_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, exitcond_flatten_reg_1021_pp0_iter2_reg, tmp_19_i_reg_1085_pp0_iter2_reg, grp_hls_isotropic_kernel_fu_424_ap_return, ap_phi_reg_pp0_iter3_p_2_i_reg_412)
    begin
        if (((tmp_19_i_reg_1085_pp0_iter2_reg = ap_const_lv1_1) and (exitcond_flatten_reg_1021_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_phi_mux_p_2_i_phi_fu_416_p4 <= grp_hls_isotropic_kernel_fu_424_ap_return(23 downto 12);
        else 
            ap_phi_mux_p_2_i_phi_fu_416_p4 <= ap_phi_reg_pp0_iter3_p_2_i_reg_412;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_p_1_i_reg_400 <= "XXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_2_i_reg_412 <= "XXXXXXXXXXXX";

    ap_predicate_op157_call_state4_assign_proc : process(exitcond_flatten_reg_1021_pp0_iter1_reg, tmp_19_i_reg_1085_pp0_iter1_reg)
    begin
                ap_predicate_op157_call_state4 <= ((tmp_19_i_reg_1085_pp0_iter1_reg = ap_const_lv1_1) and (exitcond_flatten_reg_1021_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op81_read_state2_assign_proc : process(exitcond_flatten_fu_484_p2, or_cond_i_fu_588_p2)
    begin
                ap_predicate_op81_read_state2 <= ((or_cond_i_fu_588_p2 = ap_const_lv1_1) and (exitcond_flatten_fu_484_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op83_read_state2_assign_proc : process(exitcond_flatten_fu_484_p2, or_cond_i_fu_588_p2)
    begin
                ap_predicate_op83_read_state2 <= ((or_cond_i_fu_588_p2 = ap_const_lv1_1) and (exitcond_flatten_fu_484_p2 = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;
    col_fu_630_p2 <= std_logic_vector(unsigned(col_i_mid2_fu_495_p3) + unsigned(ap_const_lv16_1));
    col_i_mid2_fu_495_p3 <= 
        col_i_reg_389 when (tmp_10_i_fu_479_p2(0) = '1') else 
        ap_const_lv16_0;
    exitcond_flatten_fu_484_p2 <= "1" when (indvar_flatten_cast_fu_471_p1 = bound_reg_1016) else "0";
    filt_out1_V_fu_851_p1 <= grp_hls_isotropic_kernel_fu_424_ap_return(12 - 1 downto 0);
    grp_fu_867_p0 <= grp_fu_867_p00(16 - 1 downto 0);
    grp_fu_867_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(height),17));
    grp_fu_867_p1 <= ap_const_lv17_2(3 - 1 downto 0);
    grp_fu_867_p2 <= grp_fu_867_p20(17 - 1 downto 0);
    grp_fu_867_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_i_fu_461_p2),34));

    grp_hls_isotropic_kernel_fu_424_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp157)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp157) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_hls_isotropic_kernel_fu_424_ap_ce <= ap_const_logic_1;
        else 
            grp_hls_isotropic_kernel_fu_424_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    height_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, height_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            height_out_blk_n <= height_out_full_n;
        else 
            height_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    height_out_din <= height;

    height_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, height_out_full_n, width_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (width_out_full_n = ap_const_logic_0) or (height_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            height_out_write <= ap_const_logic_1;
        else 
            height_out_write <= ap_const_logic_0;
        end if; 
    end process;

    icmp1_fu_537_p2 <= "0" when (tmp_fu_527_p4 = ap_const_lv15_0) else "1";
    icmp2_fu_553_p2 <= "0" when (tmp_1_fu_543_p4 = ap_const_lv15_0) else "1";
    icmp_fu_612_p2 <= "0" when (tmp_2_fu_602_p4 = ap_const_lv15_0) else "1";
    indvar_flatten_cast_fu_471_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indvar_flatten_reg_367),34));
    indvar_flatten_next_fu_489_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_367) + unsigned(ap_const_lv33_1));

    inp1_img_TDATA_blk_n_assign_proc : process(inp1_img_V_data_V_0_state, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, exitcond_flatten_fu_484_p2, or_cond_i_fu_588_p2)
    begin
        if (((or_cond_i_fu_588_p2 = ap_const_lv1_1) and (exitcond_flatten_fu_484_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inp1_img_TDATA_blk_n <= inp1_img_V_data_V_0_state(0);
        else 
            inp1_img_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    inp1_img_TREADY <= inp1_img_V_last_V_0_state(1);
    inp1_img_V_data_V_0_ack_in <= inp1_img_V_data_V_0_state(1);

    inp1_img_V_data_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_predicate_op81_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op81_read_state2 = ap_const_boolean_1))) then 
            inp1_img_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            inp1_img_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    inp1_img_V_data_V_0_data_out_assign_proc : process(inp1_img_V_data_V_0_payload_A, inp1_img_V_data_V_0_payload_B, inp1_img_V_data_V_0_sel)
    begin
        if ((inp1_img_V_data_V_0_sel = ap_const_logic_1)) then 
            inp1_img_V_data_V_0_data_out <= inp1_img_V_data_V_0_payload_B;
        else 
            inp1_img_V_data_V_0_data_out <= inp1_img_V_data_V_0_payload_A;
        end if; 
    end process;

    inp1_img_V_data_V_0_load_A <= (inp1_img_V_data_V_0_state_cmp_full and not(inp1_img_V_data_V_0_sel_wr));
    inp1_img_V_data_V_0_load_B <= (inp1_img_V_data_V_0_state_cmp_full and inp1_img_V_data_V_0_sel_wr);
    inp1_img_V_data_V_0_sel <= inp1_img_V_data_V_0_sel_rd;
    inp1_img_V_data_V_0_state_cmp_full <= '0' when (inp1_img_V_data_V_0_state = ap_const_lv2_1) else '1';
    inp1_img_V_data_V_0_vld_in <= inp1_img_TVALID;
    inp1_img_V_data_V_0_vld_out <= inp1_img_V_data_V_0_state(0);

    inp1_img_V_last_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_predicate_op81_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op81_read_state2 = ap_const_boolean_1))) then 
            inp1_img_V_last_V_0_ack_out <= ap_const_logic_1;
        else 
            inp1_img_V_last_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    inp1_img_V_last_V_0_vld_in <= inp1_img_TVALID;

    inp2_img_TDATA_blk_n_assign_proc : process(inp2_img_V_data_V_0_state, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, exitcond_flatten_fu_484_p2, or_cond_i_fu_588_p2)
    begin
        if (((or_cond_i_fu_588_p2 = ap_const_lv1_1) and (exitcond_flatten_fu_484_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inp2_img_TDATA_blk_n <= inp2_img_V_data_V_0_state(0);
        else 
            inp2_img_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    inp2_img_TREADY <= inp2_img_V_last_V_0_state(1);
    inp2_img_V_data_V_0_ack_in <= inp2_img_V_data_V_0_state(1);

    inp2_img_V_data_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_predicate_op83_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op83_read_state2 = ap_const_boolean_1))) then 
            inp2_img_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            inp2_img_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    inp2_img_V_data_V_0_data_out_assign_proc : process(inp2_img_V_data_V_0_payload_A, inp2_img_V_data_V_0_payload_B, inp2_img_V_data_V_0_sel)
    begin
        if ((inp2_img_V_data_V_0_sel = ap_const_logic_1)) then 
            inp2_img_V_data_V_0_data_out <= inp2_img_V_data_V_0_payload_B;
        else 
            inp2_img_V_data_V_0_data_out <= inp2_img_V_data_V_0_payload_A;
        end if; 
    end process;

    inp2_img_V_data_V_0_load_A <= (inp2_img_V_data_V_0_state_cmp_full and not(inp2_img_V_data_V_0_sel_wr));
    inp2_img_V_data_V_0_load_B <= (inp2_img_V_data_V_0_state_cmp_full and inp2_img_V_data_V_0_sel_wr);
    inp2_img_V_data_V_0_sel <= inp2_img_V_data_V_0_sel_rd;
    inp2_img_V_data_V_0_state_cmp_full <= '0' when (inp2_img_V_data_V_0_state = ap_const_lv2_1) else '1';
    inp2_img_V_data_V_0_vld_in <= inp2_img_TVALID;
    inp2_img_V_data_V_0_vld_out <= inp2_img_V_data_V_0_state(0);

    inp2_img_V_last_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_predicate_op83_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op83_read_state2 = ap_const_boolean_1))) then 
            inp2_img_V_last_V_0_ack_out <= ap_const_logic_1;
        else 
            inp2_img_V_last_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    inp2_img_V_last_V_0_vld_in <= inp2_img_TVALID;

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    lpf_lines_buffer_V_1_address0 <= tmp_13_i_fu_580_p1(9 - 1 downto 0);

    lpf_lines_buffer_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lpf_lines_buffer_V_1_ce0 <= ap_const_logic_1;
        else 
            lpf_lines_buffer_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lpf_lines_buffer_V_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lpf_lines_buffer_V_1_ce1 <= ap_const_logic_1;
        else 
            lpf_lines_buffer_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    lpf_lines_buffer_V_1_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, exitcond_flatten_reg_1021, ap_block_pp0_stage0_11001, tmp_12_i_reg_1040, ap_enable_reg_pp0_iter1)
    begin
        if (((tmp_12_i_reg_1040 = ap_const_lv1_1) and (exitcond_flatten_reg_1021 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lpf_lines_buffer_V_1_we1 <= ap_const_logic_1;
        else 
            lpf_lines_buffer_V_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    lpf_lines_buffer_V_2_address0 <= tmp_13_i_fu_580_p1(9 - 1 downto 0);

    lpf_lines_buffer_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lpf_lines_buffer_V_2_ce0 <= ap_const_logic_1;
        else 
            lpf_lines_buffer_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lpf_lines_buffer_V_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lpf_lines_buffer_V_2_ce1 <= ap_const_logic_1;
        else 
            lpf_lines_buffer_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    lpf_lines_buffer_V_2_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, exitcond_flatten_reg_1021, ap_block_pp0_stage0_11001, tmp_12_i_reg_1040, ap_enable_reg_pp0_iter1)
    begin
        if (((tmp_12_i_reg_1040 = ap_const_lv1_1) and (exitcond_flatten_reg_1021 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lpf_lines_buffer_V_2_we1 <= ap_const_logic_1;
        else 
            lpf_lines_buffer_V_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    lpf_lines_buffer_V_3_address0 <= tmp_13_i_fu_580_p1(9 - 1 downto 0);

    lpf_lines_buffer_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lpf_lines_buffer_V_3_ce0 <= ap_const_logic_1;
        else 
            lpf_lines_buffer_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lpf_lines_buffer_V_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lpf_lines_buffer_V_3_ce1 <= ap_const_logic_1;
        else 
            lpf_lines_buffer_V_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    lpf_lines_buffer_V_3_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, exitcond_flatten_reg_1021, ap_block_pp0_stage0_11001, tmp_12_i_reg_1040, ap_enable_reg_pp0_iter1)
    begin
        if (((tmp_12_i_reg_1040 = ap_const_lv1_1) and (exitcond_flatten_reg_1021 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lpf_lines_buffer_V_3_we1 <= ap_const_logic_1;
        else 
            lpf_lines_buffer_V_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    lpf_lines_buffer_V_4_address0 <= tmp_13_i_fu_580_p1(9 - 1 downto 0);
    lpf_lines_buffer_V_4_address1 <= tmp_15_i_fu_822_p1(9 - 1 downto 0);

    lpf_lines_buffer_V_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lpf_lines_buffer_V_4_ce0 <= ap_const_logic_1;
        else 
            lpf_lines_buffer_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lpf_lines_buffer_V_4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lpf_lines_buffer_V_4_ce1 <= ap_const_logic_1;
        else 
            lpf_lines_buffer_V_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    lpf_lines_buffer_V_4_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, exitcond_flatten_reg_1021, ap_block_pp0_stage0_11001, or_cond_i_reg_1067, ap_enable_reg_pp0_iter1)
    begin
        if (((or_cond_i_reg_1067 = ap_const_lv1_1) and (exitcond_flatten_reg_1021 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lpf_lines_buffer_V_4_we1 <= ap_const_logic_1;
        else 
            lpf_lines_buffer_V_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_cond_i_fu_588_p2 <= (tmp_8_i_mid2_fu_519_p3 and tmp_12_i_fu_575_p2);

    out1_img_V_blk_n_assign_proc : process(out1_img_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, tmp_17_i_reg_1081_pp0_iter2_reg)
    begin
        if (((tmp_17_i_reg_1081_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            out1_img_V_blk_n <= out1_img_V_full_n;
        else 
            out1_img_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out1_img_V_din <= ap_phi_mux_p_1_i_phi_fu_404_p4;

    out1_img_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, tmp_17_i_reg_1081_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_17_i_reg_1081_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            out1_img_V_write <= ap_const_logic_1;
        else 
            out1_img_V_write <= ap_const_logic_0;
        end if; 
    end process;


    out2_img_V_blk_n_assign_proc : process(out2_img_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, tmp_17_i_reg_1081_pp0_iter2_reg)
    begin
        if (((tmp_17_i_reg_1081_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            out2_img_V_blk_n <= out2_img_V_full_n;
        else 
            out2_img_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out2_img_V_din <= ap_phi_mux_p_2_i_phi_fu_416_p4;

    out2_img_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, tmp_17_i_reg_1081_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_17_i_reg_1081_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            out2_img_V_write <= ap_const_logic_1;
        else 
            out2_img_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_s_fu_818_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_i_fu_810_p3),24));
    pixels_0_V_fu_771_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lpf_lines_buffer_V_1_q0),24));
    pixels_1_V_fu_775_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lpf_lines_buffer_V_2_q0),24));
    pixels_2_V_fu_779_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lpf_lines_buffer_V_3_q0),24));
    pixels_3_V_fu_783_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lpf_lines_buffer_V_4_q0),24));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    row_fu_503_p2 <= std_logic_vector(unsigned(row_i_reg_378) + unsigned(ap_const_lv16_1));
    row_i_mid2_fu_567_p3 <= 
        row_i_reg_378 when (tmp_10_i_fu_479_p2(0) = '1') else 
        row_fu_503_p2;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_i_fu_479_p2 <= "1" when (unsigned(tmp_1_cast_i_fu_475_p1) < unsigned(tmp_5_i_reg_1011)) else "0";
    tmp_12_i_fu_575_p2 <= "1" when (unsigned(col_i_mid2_fu_495_p3) < unsigned(width)) else "0";
    tmp_13_i_fu_580_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_i_mid2_fu_495_p3),64));
    tmp_14_i_fu_810_p3 <= (tmp_data_V_1_reg_1076 & tmp_V_1_trunc_i_fu_807_p1);
    tmp_15_i_fu_822_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_i_mid2_reg_1030),64));
    tmp_17_i_fu_618_p2 <= (tmp_9_i_mid2_fu_559_p3 and icmp_fu_612_p2);
    tmp_19_i_fu_624_p2 <= (tmp_17_i_fu_618_p2 and or_cond_i_fu_588_p2);
    tmp_1_cast_i_fu_475_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_i_reg_389),17));
    tmp_1_fu_543_p4 <= row_i_reg_378(15 downto 1);
    tmp_2_fu_602_p4 <= col_i_mid2_fu_495_p3(15 downto 1);
    tmp_4_cast_i_fu_457_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(width),17));
    tmp_5_i_fu_461_p2 <= std_logic_vector(unsigned(tmp_4_cast_i_fu_457_p1) + unsigned(ap_const_lv17_2));
    tmp_8_i_fu_514_p2 <= "1" when (unsigned(row_i_reg_378) < unsigned(height)) else "0";
    tmp_8_i_mid1_fu_509_p2 <= "1" when (unsigned(row_fu_503_p2) < unsigned(height)) else "0";
    tmp_8_i_mid2_fu_519_p3 <= 
        tmp_8_i_fu_514_p2 when (tmp_10_i_fu_479_p2(0) = '1') else 
        tmp_8_i_mid1_fu_509_p2;
    tmp_9_i_mid2_fu_559_p3 <= 
        icmp2_fu_553_p2 when (tmp_10_i_fu_479_p2(0) = '1') else 
        icmp1_fu_537_p2;
    tmp_V_1_trunc_i_fu_807_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_data_V_reg_1071),12));
    tmp_fu_527_p4 <= row_fu_503_p2(15 downto 1);

    width_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, width_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            width_out_blk_n <= width_out_full_n;
        else 
            width_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    width_out_din <= width;

    width_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, height_out_full_n, width_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (width_out_full_n = ap_const_logic_0) or (height_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            width_out_write <= ap_const_logic_1;
        else 
            width_out_write <= ap_const_logic_0;
        end if; 
    end process;

end behav;
