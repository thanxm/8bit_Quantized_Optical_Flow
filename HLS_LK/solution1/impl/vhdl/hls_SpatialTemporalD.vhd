-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity hls_SpatialTemporalD is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    inp1_img_V_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    inp1_img_V_empty_n : IN STD_LOGIC;
    inp1_img_V_read : OUT STD_LOGIC;
    inp2_img_V_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    inp2_img_V_empty_n : IN STD_LOGIC;
    inp2_img_V_read : OUT STD_LOGIC;
    out_Ix_img_V_din : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_Ix_img_V_full_n : IN STD_LOGIC;
    out_Ix_img_V_write : OUT STD_LOGIC;
    out_Iy_img_V_din : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_Iy_img_V_full_n : IN STD_LOGIC;
    out_Iy_img_V_write : OUT STD_LOGIC;
    out_It_img_V_din : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_It_img_V_full_n : IN STD_LOGIC;
    out_It_img_V_write : OUT STD_LOGIC;
    height_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    height_empty_n : IN STD_LOGIC;
    height_read : OUT STD_LOGIC;
    width_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    width_empty_n : IN STD_LOGIC;
    width_read : OUT STD_LOGIC;
    height_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    height_out_full_n : IN STD_LOGIC;
    height_out_write : OUT STD_LOGIC;
    width_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    width_out_full_n : IN STD_LOGIC;
    width_out_write : OUT STD_LOGIC );
end;


architecture behav of hls_SpatialTemporalD is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv33_0 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv17_2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_const_lv33_1 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv34_0 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv36_2AAAB : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000101010101010101011";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal deriv_lines_buffer_V_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal deriv_lines_buffer_V_1_ce0 : STD_LOGIC;
    signal deriv_lines_buffer_V_1_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal deriv_lines_buffer_V_1_ce1 : STD_LOGIC;
    signal deriv_lines_buffer_V_1_we1 : STD_LOGIC;
    signal deriv_lines_buffer_V_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal deriv_lines_buffer_V_2_ce0 : STD_LOGIC;
    signal deriv_lines_buffer_V_2_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal deriv_lines_buffer_V_2_ce1 : STD_LOGIC;
    signal deriv_lines_buffer_V_2_we1 : STD_LOGIC;
    signal deriv_lines_buffer_V_3_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal deriv_lines_buffer_V_3_ce0 : STD_LOGIC;
    signal deriv_lines_buffer_V_3_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal deriv_lines_buffer_V_3_ce1 : STD_LOGIC;
    signal deriv_lines_buffer_V_3_we1 : STD_LOGIC;
    signal deriv_lines_buffer_V_4_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal deriv_lines_buffer_V_4_ce0 : STD_LOGIC;
    signal deriv_lines_buffer_V_4_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal deriv_lines_buffer_V_4_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal deriv_lines_buffer_V_4_ce1 : STD_LOGIC;
    signal deriv_lines_buffer_V_4_we1 : STD_LOGIC;
    signal deriv_lines_buffer_V_4_d1 : STD_LOGIC_VECTOR (23 downto 0);
    signal inp1_img_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_flatten_reg_1269 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1315 : STD_LOGIC_VECTOR (0 downto 0);
    signal inp2_img_V_blk_n : STD_LOGIC;
    signal out_Ix_img_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal tmp_59_i_reg_1319 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_i_reg_1319_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal out_Iy_img_V_blk_n : STD_LOGIC;
    signal out_It_img_V_blk_n : STD_LOGIC;
    signal height_blk_n : STD_LOGIC;
    signal width_blk_n : STD_LOGIC;
    signal height_out_blk_n : STD_LOGIC;
    signal width_out_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_406 : STD_LOGIC_VECTOR (32 downto 0);
    signal row_i_reg_417 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_i_reg_428 : STD_LOGIC_VECTOR (15 downto 0);
    signal height_read_reg_1246 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal width_read_reg_1253 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_45_i_fu_481_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_45_i_reg_1259 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_fu_1149_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal bound_reg_1264 : STD_LOGIC_VECTOR (33 downto 0);
    signal exitcond_flatten_fu_504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op116_read_state4 : BOOLEAN;
    signal ap_predicate_op117_read_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond_flatten_reg_1269_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1269_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1269_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_509_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal col_i_mid2_fu_515_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_i_mid2_reg_1278 : STD_LOGIC_VECTOR (15 downto 0);
    signal row_i_mid2_fu_587_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_53_i_fu_595_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_i_reg_1288 : STD_LOGIC_VECTOR (0 downto 0);
    signal deriv_lines_buffer_V_reg_1292 : STD_LOGIC_VECTOR (8 downto 0);
    signal deriv_lines_buffer_V_5_reg_1298 : STD_LOGIC_VECTOR (8 downto 0);
    signal deriv_lines_buffer_V_6_reg_1304 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_cond_i_fu_608_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_i_fu_630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_i_reg_1319_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_i_reg_1319_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_i_fu_636_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_i_reg_1323 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_i_reg_1323_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_i_reg_1323_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_i_reg_1323_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_fu_642_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal filt_out_t_V_fu_847_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal filt_out_t_V_reg_1332 : STD_LOGIC_VECTOR (12 downto 0);
    signal filt_out_t_V_reg_1332_pp0_iter2_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal filt_out_t_V_reg_1332_pp0_iter3_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_45_reg_1337 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_24_i_i_fu_863_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_i_i_reg_1342 : STD_LOGIC_VECTOR (15 downto 0);
    signal accum_y_2_4_4_tr_i_i_fu_939_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal accum_y_2_4_4_tr_i_i_reg_1347 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_59_reg_1352 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_1352_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal accum_x_2_4_4_tr_i_i_fu_1004_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal accum_x_2_4_4_tr_i_i_reg_1358 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_52_reg_1363 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_reg_1363_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_64_fu_1064_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_64_reg_1369 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_66_fu_1068_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_66_reg_1374 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_57_fu_1118_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_57_reg_1379 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_65_fu_1127_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_65_reg_1384 : STD_LOGIC_VECTOR (12 downto 0);
    signal final_val_y_V_fu_1131_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal final_val_y_V_reg_1389 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter1_state4 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_phi_mux_filt_out_t_V_2_i_phi_fu_443_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter4_filt_out_t_V_2_i_reg_439 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter0_filt_out_t_V_2_i_reg_439 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter1_filt_out_t_V_2_i_reg_439 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter2_filt_out_t_V_2_i_reg_439 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter3_filt_out_t_V_2_i_reg_439 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_filt_out_y_V_2_i_phi_fu_455_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter4_filt_out_y_V_2_i_reg_451 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter0_filt_out_y_V_2_i_reg_451 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter1_filt_out_y_V_2_i_reg_451 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter2_filt_out_y_V_2_i_reg_451 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter3_filt_out_y_V_2_i_reg_451 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_filt_out_x_V_2_i_phi_fu_467_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal final_val_x_V_fu_1142_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter4_filt_out_x_V_2_i_reg_463 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter0_filt_out_x_V_2_i_reg_463 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter1_filt_out_x_V_2_i_reg_463 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter2_filt_out_x_V_2_i_reg_463 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter3_filt_out_x_V_2_i_reg_463 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_54_i_fu_600_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_57_i_fu_748_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal deriv_window_2_V_fu_218 : STD_LOGIC_VECTOR (23 downto 0);
    signal deriv_window_22_V_fu_222 : STD_LOGIC_VECTOR (23 downto 0);
    signal deriv_window_7_V_fu_226 : STD_LOGIC_VECTOR (23 downto 0);
    signal deriv_window_10_V_fu_230 : STD_LOGIC_VECTOR (23 downto 0);
    signal deriv_window_11_V_fu_234 : STD_LOGIC_VECTOR (23 downto 0);
    signal deriv_window_12_V_fu_238 : STD_LOGIC_VECTOR (23 downto 0);
    signal deriv_window_17_V_fu_242 : STD_LOGIC_VECTOR (23 downto 0);
    signal deriv_window_23_V_fu_246 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_s_fu_739_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal deriv_window_3_V_fu_250 : STD_LOGIC_VECTOR (23 downto 0);
    signal deriv_window_8_V_fu_254 : STD_LOGIC_VECTOR (23 downto 0);
    signal deriv_window_13_V_fu_258 : STD_LOGIC_VECTOR (23 downto 0);
    signal deriv_window_18_V_fu_262 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_44_cast_i_fu_478_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_51_cast_i_fu_495_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal indvar_flatten_cast_fu_491_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_52_i_fu_499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_fu_523_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_48_i_fu_534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_i_mid1_fu_529_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_fu_547_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_47_fu_563_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp4_fu_573_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp3_fu_557_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_i_mid2_fu_539_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_fu_614_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_50_i_mid2_fu_579_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_767_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl10_i_i_fu_777_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_s_fu_799_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl_i_i_fu_809_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Result_2_i_i_fu_789_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_49_fu_831_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_2_2_i_i_fu_821_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal lhs_V_2_2_i_i_fu_839_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal rhs_V_2_2_i_i_fu_843_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_i_cast_i_fu_835_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl_i_cast_i_fu_817_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_0_2_i_i_fu_757_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_50_fu_873_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal loc_mult_y_3_2_i_i_fu_883_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_25_i_cast_i_fu_869_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl10_i_cast_i_fu_785_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_28_i_i_fu_895_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_4_2_i_i_fu_905_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_81_4_2_i_cast_i_fu_915_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal loc_mult_y_4_2_i_i_fu_919_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_32_i_cast_i_cast_fu_925_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_27_i_cast_i_cast_fu_891_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp2_fu_929_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_28_i_cast_i_fu_901_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp2_cast_fu_935_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal loc_mult_x_2_3_i_i_fu_956_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Result_2_4_i_i_fu_970_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_81_2_4_i_cast_i_fu_980_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal loc_mult_x_2_4_i_i_fu_984_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_30_i_cast_i_cast_fu_990_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_i_cast_i_cast_fu_963_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp1_fu_994_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_i_cast_i_fu_967_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp1_cast_fu_1000_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_fu_1157_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_58_fu_1021_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal neg_mul_fu_1024_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_60_fu_1030_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_62_fu_1044_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_61_fu_1040_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_63_fu_1053_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_v1_fu_1057_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul3_fu_1165_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_51_fu_1075_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal neg_mul4_fu_1078_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_53_fu_1084_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_55_fu_1098_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_54_fu_1094_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_56_fu_1107_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_v_fu_1111_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal neg_ti_fu_1122_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal neg_ti9_fu_1137_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1149_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1149_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1149_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_fu_1157_p0 : STD_LOGIC_VECTOR (18 downto 0);
    signal mul3_fu_1165_p0 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1149_p00 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1149_p20 : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_condition_237 : BOOLEAN;

    component hls_LK_am_addmul_16ns_3ns_17ns_34_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        din2 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (33 downto 0) );
    end component;


    component hls_LK_mul_mul_19ns_17s_36_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (18 downto 0);
        din1 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component hls_SpatialTemporalD_deriv_lines_buffer_V_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (23 downto 0) );
    end component;



begin
    deriv_lines_buffer_V_1_U : component hls_SpatialTemporalD_deriv_lines_buffer_V_1
    generic map (
        DataWidth => 24,
        AddressRange => 480,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => deriv_lines_buffer_V_1_address0,
        ce0 => deriv_lines_buffer_V_1_ce0,
        q0 => deriv_lines_buffer_V_1_q0,
        address1 => deriv_lines_buffer_V_reg_1292,
        ce1 => deriv_lines_buffer_V_1_ce1,
        we1 => deriv_lines_buffer_V_1_we1,
        d1 => deriv_lines_buffer_V_2_q0);

    deriv_lines_buffer_V_2_U : component hls_SpatialTemporalD_deriv_lines_buffer_V_1
    generic map (
        DataWidth => 24,
        AddressRange => 480,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => deriv_lines_buffer_V_2_address0,
        ce0 => deriv_lines_buffer_V_2_ce0,
        q0 => deriv_lines_buffer_V_2_q0,
        address1 => deriv_lines_buffer_V_5_reg_1298,
        ce1 => deriv_lines_buffer_V_2_ce1,
        we1 => deriv_lines_buffer_V_2_we1,
        d1 => deriv_lines_buffer_V_3_q0);

    deriv_lines_buffer_V_3_U : component hls_SpatialTemporalD_deriv_lines_buffer_V_1
    generic map (
        DataWidth => 24,
        AddressRange => 480,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => deriv_lines_buffer_V_3_address0,
        ce0 => deriv_lines_buffer_V_3_ce0,
        q0 => deriv_lines_buffer_V_3_q0,
        address1 => deriv_lines_buffer_V_6_reg_1304,
        ce1 => deriv_lines_buffer_V_3_ce1,
        we1 => deriv_lines_buffer_V_3_we1,
        d1 => deriv_lines_buffer_V_4_q0);

    deriv_lines_buffer_V_4_U : component hls_SpatialTemporalD_deriv_lines_buffer_V_1
    generic map (
        DataWidth => 24,
        AddressRange => 480,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => deriv_lines_buffer_V_4_address0,
        ce0 => deriv_lines_buffer_V_4_ce0,
        q0 => deriv_lines_buffer_V_4_q0,
        address1 => deriv_lines_buffer_V_4_address1,
        ce1 => deriv_lines_buffer_V_4_ce1,
        we1 => deriv_lines_buffer_V_4_we1,
        d1 => deriv_lines_buffer_V_4_d1);

    hls_LK_am_addmul_16ns_3ns_17ns_34_1_1_U39 : component hls_LK_am_addmul_16ns_3ns_17ns_34_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 3,
        din2_WIDTH => 17,
        dout_WIDTH => 34)
    port map (
        din0 => grp_fu_1149_p0,
        din1 => grp_fu_1149_p1,
        din2 => grp_fu_1149_p2,
        dout => grp_fu_1149_p3);

    hls_LK_mul_mul_19ns_17s_36_1_1_U40 : component hls_LK_mul_mul_19ns_17s_36_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 17,
        dout_WIDTH => 36)
    port map (
        din0 => mul_fu_1157_p0,
        din1 => accum_y_2_4_4_tr_i_i_reg_1347,
        dout => mul_fu_1157_p2);

    hls_LK_mul_mul_19ns_17s_36_1_1_U41 : component hls_LK_mul_mul_19ns_17s_36_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 17,
        dout_WIDTH => 36)
    port map (
        din0 => mul3_fu_1165_p0,
        din1 => accum_x_2_4_4_tr_i_i_reg_1358,
        dout => mul3_fu_1165_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_fu_504_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter1_state4)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_filt_out_t_V_2_i_reg_439_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_237)) then
                if (((tmp_61_i_fu_636_p2 = ap_const_lv1_0) and (exitcond_flatten_fu_504_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_filt_out_t_V_2_i_reg_439 <= ap_const_lv13_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_filt_out_t_V_2_i_reg_439 <= ap_phi_reg_pp0_iter0_filt_out_t_V_2_i_reg_439;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_filt_out_x_V_2_i_reg_463_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_237)) then
                if (((tmp_61_i_fu_636_p2 = ap_const_lv1_0) and (exitcond_flatten_fu_504_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_filt_out_x_V_2_i_reg_463 <= ap_const_lv13_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_filt_out_x_V_2_i_reg_463 <= ap_phi_reg_pp0_iter0_filt_out_x_V_2_i_reg_463;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_filt_out_y_V_2_i_reg_451_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_237)) then
                if (((tmp_61_i_fu_636_p2 = ap_const_lv1_0) and (exitcond_flatten_fu_504_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_filt_out_y_V_2_i_reg_451 <= ap_const_lv13_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_filt_out_y_V_2_i_reg_451 <= ap_phi_reg_pp0_iter0_filt_out_y_V_2_i_reg_451;
                end if;
            end if; 
        end if;
    end process;

    col_i_reg_428_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_fu_504_p2 = ap_const_lv1_0))) then 
                col_i_reg_428 <= col_fu_642_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                col_i_reg_428 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_406_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_fu_504_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_406 <= indvar_flatten_next_fu_509_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                indvar_flatten_reg_406 <= ap_const_lv33_0;
            end if; 
        end if;
    end process;

    row_i_reg_417_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_fu_504_p2 = ap_const_lv1_0))) then 
                row_i_reg_417 <= row_i_mid2_fu_587_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                row_i_reg_417 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_61_i_reg_1323_pp0_iter1_reg = ap_const_lv1_1) and (exitcond_flatten_reg_1269_pp0_iter1_reg = ap_const_lv1_0))) then
                accum_x_2_4_4_tr_i_i_reg_1358 <= accum_x_2_4_4_tr_i_i_fu_1004_p2;
                tmp_52_reg_1363 <= accum_x_2_4_4_tr_i_i_fu_1004_p2(16 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_61_i_reg_1323 = ap_const_lv1_1) and (exitcond_flatten_reg_1269 = ap_const_lv1_0))) then
                accum_y_2_4_4_tr_i_i_reg_1347 <= accum_y_2_4_4_tr_i_i_fu_939_p2;
                filt_out_t_V_reg_1332 <= filt_out_t_V_fu_847_p2;
                tmp_24_i_i_reg_1342 <= tmp_24_i_i_fu_863_p2;
                tmp_45_reg_1337 <= deriv_window_13_V_fu_258(23 downto 12);
                tmp_59_reg_1352 <= accum_y_2_4_4_tr_i_i_fu_939_p2(16 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter2_filt_out_t_V_2_i_reg_439 <= ap_phi_reg_pp0_iter1_filt_out_t_V_2_i_reg_439;
                ap_phi_reg_pp0_iter2_filt_out_x_V_2_i_reg_463 <= ap_phi_reg_pp0_iter1_filt_out_x_V_2_i_reg_463;
                ap_phi_reg_pp0_iter2_filt_out_y_V_2_i_reg_451 <= ap_phi_reg_pp0_iter1_filt_out_y_V_2_i_reg_451;
                deriv_window_10_V_fu_230 <= deriv_window_11_V_fu_234;
                deriv_window_11_V_fu_234 <= deriv_window_12_V_fu_238;
                deriv_window_12_V_fu_238 <= deriv_window_13_V_fu_258;
                deriv_window_17_V_fu_242 <= deriv_window_18_V_fu_262;
                deriv_window_22_V_fu_222 <= deriv_window_23_V_fu_246;
                deriv_window_2_V_fu_218 <= deriv_window_3_V_fu_250;
                deriv_window_7_V_fu_226 <= deriv_window_8_V_fu_254;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter3_filt_out_t_V_2_i_reg_439 <= ap_phi_reg_pp0_iter2_filt_out_t_V_2_i_reg_439;
                ap_phi_reg_pp0_iter3_filt_out_x_V_2_i_reg_463 <= ap_phi_reg_pp0_iter2_filt_out_x_V_2_i_reg_463;
                ap_phi_reg_pp0_iter3_filt_out_y_V_2_i_reg_451 <= ap_phi_reg_pp0_iter2_filt_out_y_V_2_i_reg_451;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter4_filt_out_t_V_2_i_reg_439 <= ap_phi_reg_pp0_iter3_filt_out_t_V_2_i_reg_439;
                ap_phi_reg_pp0_iter4_filt_out_x_V_2_i_reg_463 <= ap_phi_reg_pp0_iter3_filt_out_x_V_2_i_reg_463;
                ap_phi_reg_pp0_iter4_filt_out_y_V_2_i_reg_451 <= ap_phi_reg_pp0_iter3_filt_out_y_V_2_i_reg_451;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                bound_reg_1264 <= grp_fu_1149_p3;
                tmp_45_i_reg_1259 <= tmp_45_i_fu_481_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_fu_504_p2 = ap_const_lv1_0))) then
                col_i_mid2_reg_1278 <= col_i_mid2_fu_515_p3;
                or_cond_i_reg_1315 <= or_cond_i_fu_608_p2;
                tmp_53_i_reg_1288 <= tmp_53_i_fu_595_p2;
                tmp_59_i_reg_1319 <= tmp_59_i_fu_630_p2;
                tmp_61_i_reg_1323 <= tmp_61_i_fu_636_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_53_i_fu_595_p2 = ap_const_lv1_1) and (exitcond_flatten_fu_504_p2 = ap_const_lv1_0))) then
                deriv_lines_buffer_V_5_reg_1298 <= tmp_54_i_fu_600_p1(9 - 1 downto 0);
                deriv_lines_buffer_V_6_reg_1304 <= tmp_54_i_fu_600_p1(9 - 1 downto 0);
                deriv_lines_buffer_V_reg_1292 <= tmp_54_i_fu_600_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_53_i_reg_1288 = ap_const_lv1_1) and (exitcond_flatten_reg_1269 = ap_const_lv1_0))) then
                deriv_window_13_V_fu_258 <= deriv_lines_buffer_V_3_q0;
                deriv_window_18_V_fu_262 <= deriv_lines_buffer_V_4_q0;
                deriv_window_3_V_fu_250 <= deriv_lines_buffer_V_1_q0;
                deriv_window_8_V_fu_254 <= deriv_lines_buffer_V_2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_cond_i_reg_1315 = ap_const_lv1_1) and (exitcond_flatten_reg_1269 = ap_const_lv1_0))) then
                deriv_window_23_V_fu_246 <= p_Result_s_fu_739_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_flatten_reg_1269 <= exitcond_flatten_fu_504_p2;
                exitcond_flatten_reg_1269_pp0_iter1_reg <= exitcond_flatten_reg_1269;
                tmp_59_i_reg_1319_pp0_iter1_reg <= tmp_59_i_reg_1319;
                tmp_61_i_reg_1323_pp0_iter1_reg <= tmp_61_i_reg_1323;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                exitcond_flatten_reg_1269_pp0_iter2_reg <= exitcond_flatten_reg_1269_pp0_iter1_reg;
                exitcond_flatten_reg_1269_pp0_iter3_reg <= exitcond_flatten_reg_1269_pp0_iter2_reg;
                filt_out_t_V_reg_1332_pp0_iter2_reg <= filt_out_t_V_reg_1332;
                filt_out_t_V_reg_1332_pp0_iter3_reg <= filt_out_t_V_reg_1332_pp0_iter2_reg;
                tmp_52_reg_1363_pp0_iter3_reg <= tmp_52_reg_1363;
                tmp_59_i_reg_1319_pp0_iter2_reg <= tmp_59_i_reg_1319_pp0_iter1_reg;
                tmp_59_i_reg_1319_pp0_iter3_reg <= tmp_59_i_reg_1319_pp0_iter2_reg;
                tmp_59_reg_1352_pp0_iter2_reg <= tmp_59_reg_1352;
                tmp_61_i_reg_1323_pp0_iter2_reg <= tmp_61_i_reg_1323_pp0_iter1_reg;
                tmp_61_i_reg_1323_pp0_iter3_reg <= tmp_61_i_reg_1323_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_61_i_reg_1323_pp0_iter2_reg = ap_const_lv1_1) and (exitcond_flatten_reg_1269_pp0_iter2_reg = ap_const_lv1_0))) then
                final_val_y_V_reg_1389 <= final_val_y_V_fu_1131_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((width_out_full_n = ap_const_logic_0) or (height_out_full_n = ap_const_logic_0) or (width_empty_n = ap_const_logic_0) or (height_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                height_read_reg_1246 <= height_dout;
                width_read_reg_1253 <= width_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_52_reg_1363 = ap_const_lv1_1) and (tmp_61_i_reg_1323_pp0_iter2_reg = ap_const_lv1_1) and (exitcond_flatten_reg_1269_pp0_iter2_reg = ap_const_lv1_0))) then
                tmp_57_reg_1379 <= tmp_57_fu_1118_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_59_reg_1352 = ap_const_lv1_1) and (tmp_61_i_reg_1323_pp0_iter1_reg = ap_const_lv1_1) and (exitcond_flatten_reg_1269_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp_64_reg_1369 <= tmp_64_fu_1064_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_61_i_reg_1323_pp0_iter2_reg = ap_const_lv1_1) and (tmp_52_reg_1363 = ap_const_lv1_0) and (exitcond_flatten_reg_1269_pp0_iter2_reg = ap_const_lv1_0))) then
                tmp_65_reg_1384 <= tmp_65_fu_1127_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_61_i_reg_1323_pp0_iter1_reg = ap_const_lv1_1) and (tmp_59_reg_1352 = ap_const_lv1_0) and (exitcond_flatten_reg_1269_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp_66_reg_1374 <= tmp_66_fu_1068_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, height_empty_n, width_empty_n, height_out_full_n, width_out_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((width_out_full_n = ap_const_logic_0) or (height_out_full_n = ap_const_logic_0) or (width_empty_n = ap_const_logic_0) or (height_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and not(((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    accum_x_2_4_4_tr_i_i_fu_1004_p2 <= std_logic_vector(signed(tmp_24_i_cast_i_fu_967_p1) + signed(tmp1_cast_fu_1000_p1));
    accum_y_2_4_4_tr_i_i_fu_939_p2 <= std_logic_vector(signed(tmp_28_i_cast_i_fu_901_p1) + signed(tmp2_cast_fu_935_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state8 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(inp1_img_V_empty_n, inp2_img_V_empty_n, out_Ix_img_V_full_n, out_Iy_img_V_full_n, out_It_img_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, tmp_59_i_reg_1319_pp0_iter3_reg, ap_predicate_op116_read_state4, ap_predicate_op117_read_state4)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (((out_It_img_V_full_n = ap_const_logic_0) and (tmp_59_i_reg_1319_pp0_iter3_reg = ap_const_lv1_1)) or ((out_Iy_img_V_full_n = ap_const_logic_0) and (tmp_59_i_reg_1319_pp0_iter3_reg = ap_const_lv1_1)) or ((out_Ix_img_V_full_n = ap_const_logic_0) and (tmp_59_i_reg_1319_pp0_iter3_reg = ap_const_lv1_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((inp2_img_V_empty_n = ap_const_logic_0) and (ap_predicate_op117_read_state4 = ap_const_boolean_1)) or ((inp1_img_V_empty_n = ap_const_logic_0) and (ap_predicate_op116_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(inp1_img_V_empty_n, inp2_img_V_empty_n, out_Ix_img_V_full_n, out_Iy_img_V_full_n, out_It_img_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, tmp_59_i_reg_1319_pp0_iter3_reg, ap_predicate_op116_read_state4, ap_predicate_op117_read_state4)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (((out_It_img_V_full_n = ap_const_logic_0) and (tmp_59_i_reg_1319_pp0_iter3_reg = ap_const_lv1_1)) or ((out_Iy_img_V_full_n = ap_const_logic_0) and (tmp_59_i_reg_1319_pp0_iter3_reg = ap_const_lv1_1)) or ((out_Ix_img_V_full_n = ap_const_logic_0) and (tmp_59_i_reg_1319_pp0_iter3_reg = ap_const_lv1_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((inp2_img_V_empty_n = ap_const_logic_0) and (ap_predicate_op117_read_state4 = ap_const_boolean_1)) or ((inp1_img_V_empty_n = ap_const_logic_0) and (ap_predicate_op116_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(inp1_img_V_empty_n, inp2_img_V_empty_n, out_Ix_img_V_full_n, out_Iy_img_V_full_n, out_It_img_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, tmp_59_i_reg_1319_pp0_iter3_reg, ap_predicate_op116_read_state4, ap_predicate_op117_read_state4)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (((out_It_img_V_full_n = ap_const_logic_0) and (tmp_59_i_reg_1319_pp0_iter3_reg = ap_const_lv1_1)) or ((out_Iy_img_V_full_n = ap_const_logic_0) and (tmp_59_i_reg_1319_pp0_iter3_reg = ap_const_lv1_1)) or ((out_Ix_img_V_full_n = ap_const_logic_0) and (tmp_59_i_reg_1319_pp0_iter3_reg = ap_const_lv1_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((inp2_img_V_empty_n = ap_const_logic_0) and (ap_predicate_op117_read_state4 = ap_const_boolean_1)) or ((inp1_img_V_empty_n = ap_const_logic_0) and (ap_predicate_op116_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, height_empty_n, width_empty_n, height_out_full_n, width_out_full_n)
    begin
                ap_block_state1 <= ((width_out_full_n = ap_const_logic_0) or (height_out_full_n = ap_const_logic_0) or (width_empty_n = ap_const_logic_0) or (height_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(inp1_img_V_empty_n, inp2_img_V_empty_n, ap_predicate_op116_read_state4, ap_predicate_op117_read_state4)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((inp2_img_V_empty_n = ap_const_logic_0) and (ap_predicate_op117_read_state4 = ap_const_boolean_1)) or ((inp1_img_V_empty_n = ap_const_logic_0) and (ap_predicate_op116_read_state4 = ap_const_boolean_1)));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp0_stage0_iter4_assign_proc : process(out_Ix_img_V_full_n, out_Iy_img_V_full_n, out_It_img_V_full_n, tmp_59_i_reg_1319_pp0_iter3_reg)
    begin
                ap_block_state7_pp0_stage0_iter4 <= (((out_It_img_V_full_n = ap_const_logic_0) and (tmp_59_i_reg_1319_pp0_iter3_reg = ap_const_lv1_1)) or ((out_Iy_img_V_full_n = ap_const_logic_0) and (tmp_59_i_reg_1319_pp0_iter3_reg = ap_const_lv1_1)) or ((out_Ix_img_V_full_n = ap_const_logic_0) and (tmp_59_i_reg_1319_pp0_iter3_reg = ap_const_lv1_1)));
    end process;


    ap_condition_237_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
                ap_condition_237 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_pp0_exit_iter1_state4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_condition_pp0_exit_iter1_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter1_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_filt_out_t_V_2_i_phi_fu_443_p4_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1269_pp0_iter3_reg, tmp_61_i_reg_1323_pp0_iter3_reg, filt_out_t_V_reg_1332_pp0_iter3_reg, ap_phi_reg_pp0_iter4_filt_out_t_V_2_i_reg_439)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_61_i_reg_1323_pp0_iter3_reg = ap_const_lv1_1) and (exitcond_flatten_reg_1269_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_filt_out_t_V_2_i_phi_fu_443_p4 <= filt_out_t_V_reg_1332_pp0_iter3_reg;
        else 
            ap_phi_mux_filt_out_t_V_2_i_phi_fu_443_p4 <= ap_phi_reg_pp0_iter4_filt_out_t_V_2_i_reg_439;
        end if; 
    end process;


    ap_phi_mux_filt_out_x_V_2_i_phi_fu_467_p4_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1269_pp0_iter3_reg, tmp_61_i_reg_1323_pp0_iter3_reg, final_val_x_V_fu_1142_p3, ap_phi_reg_pp0_iter4_filt_out_x_V_2_i_reg_463)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_61_i_reg_1323_pp0_iter3_reg = ap_const_lv1_1) and (exitcond_flatten_reg_1269_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_filt_out_x_V_2_i_phi_fu_467_p4 <= final_val_x_V_fu_1142_p3;
        else 
            ap_phi_mux_filt_out_x_V_2_i_phi_fu_467_p4 <= ap_phi_reg_pp0_iter4_filt_out_x_V_2_i_reg_463;
        end if; 
    end process;


    ap_phi_mux_filt_out_y_V_2_i_phi_fu_455_p4_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1269_pp0_iter3_reg, tmp_61_i_reg_1323_pp0_iter3_reg, final_val_y_V_reg_1389, ap_phi_reg_pp0_iter4_filt_out_y_V_2_i_reg_451)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_61_i_reg_1323_pp0_iter3_reg = ap_const_lv1_1) and (exitcond_flatten_reg_1269_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_filt_out_y_V_2_i_phi_fu_455_p4 <= final_val_y_V_reg_1389;
        else 
            ap_phi_mux_filt_out_y_V_2_i_phi_fu_455_p4 <= ap_phi_reg_pp0_iter4_filt_out_y_V_2_i_reg_451;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_filt_out_t_V_2_i_reg_439 <= "XXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_filt_out_x_V_2_i_reg_463 <= "XXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_filt_out_y_V_2_i_reg_451 <= "XXXXXXXXXXXXX";

    ap_predicate_op116_read_state4_assign_proc : process(exitcond_flatten_reg_1269, or_cond_i_reg_1315)
    begin
                ap_predicate_op116_read_state4 <= ((or_cond_i_reg_1315 = ap_const_lv1_1) and (exitcond_flatten_reg_1269 = ap_const_lv1_0));
    end process;


    ap_predicate_op117_read_state4_assign_proc : process(exitcond_flatten_reg_1269, or_cond_i_reg_1315)
    begin
                ap_predicate_op117_read_state4 <= ((or_cond_i_reg_1315 = ap_const_lv1_1) and (exitcond_flatten_reg_1269 = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;
    col_fu_642_p2 <= std_logic_vector(unsigned(col_i_mid2_fu_515_p3) + unsigned(ap_const_lv16_1));
    col_i_mid2_fu_515_p3 <= 
        col_i_reg_428 when (tmp_52_i_fu_499_p2(0) = '1') else 
        ap_const_lv16_0;
    deriv_lines_buffer_V_1_address0 <= tmp_54_i_fu_600_p1(9 - 1 downto 0);

    deriv_lines_buffer_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            deriv_lines_buffer_V_1_ce0 <= ap_const_logic_1;
        else 
            deriv_lines_buffer_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    deriv_lines_buffer_V_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            deriv_lines_buffer_V_1_ce1 <= ap_const_logic_1;
        else 
            deriv_lines_buffer_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    deriv_lines_buffer_V_1_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1269, ap_block_pp0_stage0_11001, tmp_53_i_reg_1288)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_53_i_reg_1288 = ap_const_lv1_1) and (exitcond_flatten_reg_1269 = ap_const_lv1_0))) then 
            deriv_lines_buffer_V_1_we1 <= ap_const_logic_1;
        else 
            deriv_lines_buffer_V_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    deriv_lines_buffer_V_2_address0 <= tmp_54_i_fu_600_p1(9 - 1 downto 0);

    deriv_lines_buffer_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            deriv_lines_buffer_V_2_ce0 <= ap_const_logic_1;
        else 
            deriv_lines_buffer_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    deriv_lines_buffer_V_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            deriv_lines_buffer_V_2_ce1 <= ap_const_logic_1;
        else 
            deriv_lines_buffer_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    deriv_lines_buffer_V_2_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1269, ap_block_pp0_stage0_11001, tmp_53_i_reg_1288)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_53_i_reg_1288 = ap_const_lv1_1) and (exitcond_flatten_reg_1269 = ap_const_lv1_0))) then 
            deriv_lines_buffer_V_2_we1 <= ap_const_logic_1;
        else 
            deriv_lines_buffer_V_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    deriv_lines_buffer_V_3_address0 <= tmp_54_i_fu_600_p1(9 - 1 downto 0);

    deriv_lines_buffer_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            deriv_lines_buffer_V_3_ce0 <= ap_const_logic_1;
        else 
            deriv_lines_buffer_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    deriv_lines_buffer_V_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            deriv_lines_buffer_V_3_ce1 <= ap_const_logic_1;
        else 
            deriv_lines_buffer_V_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    deriv_lines_buffer_V_3_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1269, ap_block_pp0_stage0_11001, tmp_53_i_reg_1288)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_53_i_reg_1288 = ap_const_lv1_1) and (exitcond_flatten_reg_1269 = ap_const_lv1_0))) then 
            deriv_lines_buffer_V_3_we1 <= ap_const_logic_1;
        else 
            deriv_lines_buffer_V_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    deriv_lines_buffer_V_4_address0 <= tmp_54_i_fu_600_p1(9 - 1 downto 0);
    deriv_lines_buffer_V_4_address1 <= tmp_57_i_fu_748_p1(9 - 1 downto 0);

    deriv_lines_buffer_V_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            deriv_lines_buffer_V_4_ce0 <= ap_const_logic_1;
        else 
            deriv_lines_buffer_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    deriv_lines_buffer_V_4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            deriv_lines_buffer_V_4_ce1 <= ap_const_logic_1;
        else 
            deriv_lines_buffer_V_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    deriv_lines_buffer_V_4_d1 <= (inp1_img_V_dout & inp2_img_V_dout);

    deriv_lines_buffer_V_4_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1269, or_cond_i_reg_1315, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_cond_i_reg_1315 = ap_const_lv1_1) and (exitcond_flatten_reg_1269 = ap_const_lv1_0))) then 
            deriv_lines_buffer_V_4_we1 <= ap_const_logic_1;
        else 
            deriv_lines_buffer_V_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_flatten_fu_504_p2 <= "1" when (indvar_flatten_cast_fu_491_p1 = bound_reg_1264) else "0";
    filt_out_t_V_fu_847_p2 <= std_logic_vector(unsigned(lhs_V_2_2_i_i_fu_839_p1) - unsigned(rhs_V_2_2_i_i_fu_843_p1));
    final_val_x_V_fu_1142_p3 <= 
        neg_ti9_fu_1137_p2 when (tmp_52_reg_1363_pp0_iter3_reg(0) = '1') else 
        tmp_65_reg_1384;
    final_val_y_V_fu_1131_p3 <= 
        neg_ti_fu_1122_p2 when (tmp_59_reg_1352_pp0_iter2_reg(0) = '1') else 
        tmp_66_reg_1374;
    grp_fu_1149_p0 <= grp_fu_1149_p00(16 - 1 downto 0);
    grp_fu_1149_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(height_read_reg_1246),17));
    grp_fu_1149_p1 <= ap_const_lv17_2(3 - 1 downto 0);
    grp_fu_1149_p2 <= grp_fu_1149_p20(17 - 1 downto 0);
    grp_fu_1149_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_45_i_fu_481_p2),34));

    height_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, height_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            height_blk_n <= height_empty_n;
        else 
            height_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    height_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, height_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            height_out_blk_n <= height_out_full_n;
        else 
            height_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    height_out_din <= height_dout;

    height_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, height_empty_n, width_empty_n, height_out_full_n, width_out_full_n)
    begin
        if ((not(((width_out_full_n = ap_const_logic_0) or (height_out_full_n = ap_const_logic_0) or (width_empty_n = ap_const_logic_0) or (height_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            height_out_write <= ap_const_logic_1;
        else 
            height_out_write <= ap_const_logic_0;
        end if; 
    end process;


    height_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, height_empty_n, width_empty_n, height_out_full_n, width_out_full_n)
    begin
        if ((not(((width_out_full_n = ap_const_logic_0) or (height_out_full_n = ap_const_logic_0) or (width_empty_n = ap_const_logic_0) or (height_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            height_read <= ap_const_logic_1;
        else 
            height_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp3_fu_557_p2 <= "0" when (tmp_46_fu_547_p4 = ap_const_lv15_0) else "1";
    icmp4_fu_573_p2 <= "0" when (tmp_47_fu_563_p4 = ap_const_lv15_0) else "1";
    icmp_fu_624_p2 <= "0" when (tmp_48_fu_614_p4 = ap_const_lv15_0) else "1";
    indvar_flatten_cast_fu_491_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indvar_flatten_reg_406),34));
    indvar_flatten_next_fu_509_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_406) + unsigned(ap_const_lv33_1));

    inp1_img_V_blk_n_assign_proc : process(inp1_img_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_1269, or_cond_i_reg_1315)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_cond_i_reg_1315 = ap_const_lv1_1) and (exitcond_flatten_reg_1269 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            inp1_img_V_blk_n <= inp1_img_V_empty_n;
        else 
            inp1_img_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    inp1_img_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op116_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op116_read_state4 = ap_const_boolean_1))) then 
            inp1_img_V_read <= ap_const_logic_1;
        else 
            inp1_img_V_read <= ap_const_logic_0;
        end if; 
    end process;


    inp2_img_V_blk_n_assign_proc : process(inp2_img_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_1269, or_cond_i_reg_1315)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_cond_i_reg_1315 = ap_const_lv1_1) and (exitcond_flatten_reg_1269 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            inp2_img_V_blk_n <= inp2_img_V_empty_n;
        else 
            inp2_img_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    inp2_img_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op117_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op117_read_state4 = ap_const_boolean_1))) then 
            inp2_img_V_read <= ap_const_logic_1;
        else 
            inp2_img_V_read <= ap_const_logic_0;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    lhs_V_2_2_i_i_fu_839_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_49_fu_831_p1),13));
    loc_mult_x_2_3_i_i_fu_956_p3 <= (tmp_45_reg_1337 & ap_const_lv3_0);
    loc_mult_x_2_4_i_i_fu_984_p2 <= std_logic_vector(unsigned(ap_const_lv13_0) - unsigned(tmp_81_2_4_i_cast_i_fu_980_p1));
    loc_mult_y_3_2_i_i_fu_883_p3 <= (tmp_50_fu_873_p4 & ap_const_lv3_0);
    loc_mult_y_4_2_i_i_fu_919_p2 <= std_logic_vector(unsigned(ap_const_lv13_0) - unsigned(tmp_81_4_2_i_cast_i_fu_915_p1));
    mul3_fu_1165_p0 <= ap_const_lv36_2AAAB(19 - 1 downto 0);
    mul_fu_1157_p0 <= ap_const_lv36_2AAAB(19 - 1 downto 0);
    neg_mul4_fu_1078_p2 <= std_logic_vector(unsigned(ap_const_lv34_0) - unsigned(tmp_51_fu_1075_p1));
    neg_mul_fu_1024_p2 <= std_logic_vector(unsigned(ap_const_lv34_0) - unsigned(tmp_58_fu_1021_p1));
    neg_ti9_fu_1137_p2 <= std_logic_vector(unsigned(ap_const_lv13_0) - unsigned(tmp_57_reg_1379));
    neg_ti_fu_1122_p2 <= std_logic_vector(unsigned(ap_const_lv13_0) - unsigned(tmp_64_reg_1369));
    or_cond_i_fu_608_p2 <= (tmp_53_i_fu_595_p2 and tmp_48_i_mid2_fu_539_p3);

    out_It_img_V_blk_n_assign_proc : process(out_It_img_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, tmp_59_i_reg_1319_pp0_iter3_reg)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_59_i_reg_1319_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            out_It_img_V_blk_n <= out_It_img_V_full_n;
        else 
            out_It_img_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_It_img_V_din <= ap_phi_mux_filt_out_t_V_2_i_phi_fu_443_p4;

    out_It_img_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, tmp_59_i_reg_1319_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_59_i_reg_1319_pp0_iter3_reg = ap_const_lv1_1))) then 
            out_It_img_V_write <= ap_const_logic_1;
        else 
            out_It_img_V_write <= ap_const_logic_0;
        end if; 
    end process;


    out_Ix_img_V_blk_n_assign_proc : process(out_Ix_img_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, tmp_59_i_reg_1319_pp0_iter3_reg)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_59_i_reg_1319_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            out_Ix_img_V_blk_n <= out_Ix_img_V_full_n;
        else 
            out_Ix_img_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_Ix_img_V_din <= ap_phi_mux_filt_out_x_V_2_i_phi_fu_467_p4;

    out_Ix_img_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, tmp_59_i_reg_1319_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_59_i_reg_1319_pp0_iter3_reg = ap_const_lv1_1))) then 
            out_Ix_img_V_write <= ap_const_logic_1;
        else 
            out_Ix_img_V_write <= ap_const_logic_0;
        end if; 
    end process;


    out_Iy_img_V_blk_n_assign_proc : process(out_Iy_img_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, tmp_59_i_reg_1319_pp0_iter3_reg)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_59_i_reg_1319_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            out_Iy_img_V_blk_n <= out_Iy_img_V_full_n;
        else 
            out_Iy_img_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_Iy_img_V_din <= ap_phi_mux_filt_out_y_V_2_i_phi_fu_455_p4;

    out_Iy_img_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, tmp_59_i_reg_1319_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_59_i_reg_1319_pp0_iter3_reg = ap_const_lv1_1))) then 
            out_Iy_img_V_write <= ap_const_logic_1;
        else 
            out_Iy_img_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_0_2_i_i_fu_757_p4 <= deriv_window_2_V_fu_218(23 downto 12);
    p_Result_2_2_i_i_fu_821_p4 <= deriv_window_12_V_fu_238(23 downto 12);
    p_Result_2_4_i_i_fu_970_p4 <= deriv_window_13_V_fu_258(23 downto 12);
    p_Result_2_i_i_fu_789_p4 <= deriv_window_10_V_fu_230(23 downto 12);
    p_Result_4_2_i_i_fu_905_p4 <= deriv_window_22_V_fu_222(23 downto 12);
    p_Result_s_fu_739_p3 <= (inp1_img_V_dout & inp2_img_V_dout);
    p_shl10_i_cast_i_fu_785_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl10_i_i_fu_777_p3),16));
    p_shl10_i_i_fu_777_p3 <= (tmp_fu_767_p4 & ap_const_lv3_0);
    p_shl_i_cast_i_fu_817_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_i_i_fu_809_p3),16));
    p_shl_i_i_fu_809_p3 <= (tmp_s_fu_799_p4 & ap_const_lv3_0);
    p_v1_fu_1057_p3 <= 
        tmp_61_fu_1040_p1 when (tmp_59_reg_1352(0) = '1') else 
        tmp_63_fu_1053_p1;
    p_v_fu_1111_p3 <= 
        tmp_54_fu_1094_p1 when (tmp_52_reg_1363(0) = '1') else 
        tmp_56_fu_1107_p1;

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    rhs_V_2_2_i_i_fu_843_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_2_2_i_i_fu_821_p4),13));
    row_fu_523_p2 <= std_logic_vector(unsigned(row_i_reg_417) + unsigned(ap_const_lv16_1));
    row_i_mid2_fu_587_p3 <= 
        row_i_reg_417 when (tmp_52_i_fu_499_p2(0) = '1') else 
        row_fu_523_p2;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

        tmp1_cast_fu_1000_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp1_fu_994_p2),17));

    tmp1_fu_994_p2 <= std_logic_vector(signed(tmp_30_i_cast_i_cast_fu_990_p1) + signed(tmp_23_i_cast_i_cast_fu_963_p1));
        tmp2_cast_fu_935_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp2_fu_929_p2),17));

    tmp2_fu_929_p2 <= std_logic_vector(signed(tmp_32_i_cast_i_cast_fu_925_p1) + signed(tmp_27_i_cast_i_cast_fu_891_p1));
    tmp_23_i_cast_i_cast_fu_963_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc_mult_x_2_3_i_i_fu_956_p3),16));
        tmp_24_i_cast_i_fu_967_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_24_i_i_reg_1342),17));

    tmp_24_i_i_fu_863_p2 <= std_logic_vector(unsigned(tmp_i_cast_i_fu_835_p1) - unsigned(p_shl_i_cast_i_fu_817_p1));
    tmp_25_i_cast_i_fu_869_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_0_2_i_i_fu_757_p4),16));
    tmp_27_i_cast_i_cast_fu_891_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc_mult_y_3_2_i_i_fu_883_p3),16));
        tmp_28_i_cast_i_fu_901_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_28_i_i_fu_895_p2),17));

    tmp_28_i_i_fu_895_p2 <= std_logic_vector(unsigned(tmp_25_i_cast_i_fu_869_p1) - unsigned(p_shl10_i_cast_i_fu_785_p1));
        tmp_30_i_cast_i_cast_fu_990_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(loc_mult_x_2_4_i_i_fu_984_p2),16));

        tmp_32_i_cast_i_cast_fu_925_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(loc_mult_y_4_2_i_i_fu_919_p2),16));

    tmp_44_cast_i_fu_478_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(width_read_reg_1253),17));
    tmp_45_i_fu_481_p2 <= std_logic_vector(unsigned(tmp_44_cast_i_fu_478_p1) + unsigned(ap_const_lv17_2));
    tmp_46_fu_547_p4 <= row_fu_523_p2(15 downto 1);
    tmp_47_fu_563_p4 <= row_i_reg_417(15 downto 1);
    tmp_48_fu_614_p4 <= col_i_mid2_fu_515_p3(15 downto 1);
    tmp_48_i_fu_534_p2 <= "1" when (unsigned(row_i_reg_417) < unsigned(height_read_reg_1246)) else "0";
    tmp_48_i_mid1_fu_529_p2 <= "1" when (unsigned(row_fu_523_p2) < unsigned(height_read_reg_1246)) else "0";
    tmp_48_i_mid2_fu_539_p3 <= 
        tmp_48_i_fu_534_p2 when (tmp_52_i_fu_499_p2(0) = '1') else 
        tmp_48_i_mid1_fu_529_p2;
    tmp_49_fu_831_p1 <= deriv_window_12_V_fu_238(12 - 1 downto 0);
    tmp_50_fu_873_p4 <= deriv_window_17_V_fu_242(23 downto 12);
    tmp_50_i_mid2_fu_579_p3 <= 
        icmp4_fu_573_p2 when (tmp_52_i_fu_499_p2(0) = '1') else 
        icmp3_fu_557_p2;
    tmp_51_cast_i_fu_495_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_i_reg_428),17));
    tmp_51_fu_1075_p1 <= mul3_fu_1165_p2(34 - 1 downto 0);
    tmp_52_i_fu_499_p2 <= "1" when (unsigned(tmp_51_cast_i_fu_495_p1) < unsigned(tmp_45_i_reg_1259)) else "0";
    tmp_53_fu_1084_p4 <= neg_mul4_fu_1078_p2(33 downto 21);
    tmp_53_i_fu_595_p2 <= "1" when (unsigned(col_i_mid2_fu_515_p3) < unsigned(width_read_reg_1253)) else "0";
        tmp_54_fu_1094_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_53_fu_1084_p4),18));

    tmp_54_i_fu_600_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_i_mid2_fu_515_p3),64));
    tmp_55_fu_1098_p4 <= mul3_fu_1165_p2(35 downto 21);
        tmp_56_fu_1107_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_55_fu_1098_p4),18));

    tmp_57_fu_1118_p1 <= p_v_fu_1111_p3(13 - 1 downto 0);
    tmp_57_i_fu_748_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_i_mid2_reg_1278),64));
    tmp_58_fu_1021_p1 <= mul_fu_1157_p2(34 - 1 downto 0);
    tmp_59_i_fu_630_p2 <= (tmp_50_i_mid2_fu_579_p3 and icmp_fu_624_p2);
    tmp_60_fu_1030_p4 <= neg_mul_fu_1024_p2(33 downto 21);
        tmp_61_fu_1040_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_60_fu_1030_p4),18));

    tmp_61_i_fu_636_p2 <= (tmp_59_i_fu_630_p2 and or_cond_i_fu_608_p2);
    tmp_62_fu_1044_p4 <= mul_fu_1157_p2(35 downto 21);
        tmp_63_fu_1053_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_62_fu_1044_p4),18));

    tmp_64_fu_1064_p1 <= p_v1_fu_1057_p3(13 - 1 downto 0);
    tmp_65_fu_1127_p1 <= p_v_fu_1111_p3(13 - 1 downto 0);
    tmp_66_fu_1068_p1 <= p_v1_fu_1057_p3(13 - 1 downto 0);
    tmp_81_2_4_i_cast_i_fu_980_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_2_4_i_i_fu_970_p4),13));
    tmp_81_4_2_i_cast_i_fu_915_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_4_2_i_i_fu_905_p4),13));
    tmp_fu_767_p4 <= deriv_window_7_V_fu_226(23 downto 12);
    tmp_i_cast_i_fu_835_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_2_i_i_fu_789_p4),16));
    tmp_s_fu_799_p4 <= deriv_window_11_V_fu_234(23 downto 12);

    width_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, width_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            width_blk_n <= width_empty_n;
        else 
            width_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    width_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, width_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            width_out_blk_n <= width_out_full_n;
        else 
            width_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    width_out_din <= width_dout;

    width_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, height_empty_n, width_empty_n, height_out_full_n, width_out_full_n)
    begin
        if ((not(((width_out_full_n = ap_const_logic_0) or (height_out_full_n = ap_const_logic_0) or (width_empty_n = ap_const_logic_0) or (height_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            width_out_write <= ap_const_logic_1;
        else 
            width_out_write <= ap_const_logic_0;
        end if; 
    end process;


    width_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, height_empty_n, width_empty_n, height_out_full_n, width_out_full_n)
    begin
        if ((not(((width_out_full_n = ap_const_logic_0) or (height_out_full_n = ap_const_logic_0) or (width_empty_n = ap_const_logic_0) or (height_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            width_read <= ap_const_logic_1;
        else 
            width_read <= ap_const_logic_0;
        end if; 
    end process;

end behav;
